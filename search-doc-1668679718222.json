[{"title":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","type":0,"sectionRef":"#","url":"blog/2021/12/22/cjc","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Clustering Machine Learning Neural Networks K-means Autoencoders Churn Shapley values Interpretability Data Science for business"},{"title":"Enriching understanding of customer journeys through clustering","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#enriching-understanding-of-customer-journeys-through-clustering","content":"Analyzing customer website behaviour is an essential step towards understanding the ways in which customers perceive and interact with a brand’s products and services. Methods for analyzing these online interactions have improved in sophistication and depth of insight offered in recent years meaning many traditional methods, such as journey mapping now fall short. Exploring Customer Journeys, whilst more complex, offers brands the opportunity to dive deeper and obtain more granular insights that can then be used to optimise and improve the experience of future customers. Employing advanced methodologies is not only beneficial, but it has also become a necessary action for any business that wants to explore the increasingly complex customer journeys possible on modern websites. To provide some context to this challenge - when investigating this possibility for one of our clients, a global leader in the telecom industry, we quickly realized that given the number of possible actions on their website (about 1,760), performing standard analysis would be overwhelming. It would, in fact, raise the number of potential journeys to something of the order of 104900. To put this number into perspective, the number of atoms in the universe is of the order of 10100. A simple method of analysing customer journeys is mapping. Essentially creating a visual representation of every touchpoint your customers have with you, creating a fluid timeline from how you initially engaged them to their first purchase and tracking the ongoing relationship. … it would raise the number of possible journeys to something of the order of 104900. To put this number into perspective, the number of atoms in the universe is of the order of 10100. "},{"title":"Advancing methodologies - Creating groups of similar journeys through image embedding, autoencoders and unsupervised learning","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#advancing-methodologies---creating-groups-of-similar-journeys-through-image-embedding-autoencoders-and-unsupervised-learning","content":"Many businesses are adapting strategic models to emphasise customer-centricity and build up their online presence. Websites, therefore, become a powerful asset in understanding customer behaviour through the data that they generate. And analyzing this data becomes a potential source of insight to improve future interactions with the customer base, driving loyalty and higher conversion. Journey mapping and other traditional methods can provide fast and high-level customer insight, which can be an important first step in making use of this asset. However, they often fall short as the numbers of potential journeys increase exponentially. Journey clustering is a more advanced approach that uses algorithms to analyse all journeys by identifying groups of customers who interact with the website in similar ways. In doing so, we identify patterns in customer behaviour and begin to understand the motivations behind their actions. This type of analysis can be used by businesses to personalise their websites and improve customer experience. Ekimetrics' innovative approach specifically uses advanced encoding and machine learning methods, as well as clustering algorithms to make sense of the complex digital world. To address this challenge our approach requires three key steps: Reducing the dimensions of our customer journey dataset Creating image-like representations of customer journeys; one image represents one customer journey Applying clustering algorithms on images to create groups of users with similar behaviours. For each cluster, we are then able to define a “standard journey”. "},{"title":"Step 1: Reducing the dimensions of our dataset","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#step-1-reducing-the-dimensions-of-our-dataset","content":"Analyzing customer journeys is a difficult task that can lead to memory allocation errors, primarily due to high data diversity. Even for less sophisticated brands, the number of parameters feeding into a customer journey analysis model can quickly become unmanageable due to the sheer size of data needing to be analysed. For example, the following features can be tracked: the URL of the pages visited, time spent on one page, overall duration on the website, user clicks, and many more. The temptation is to add as much detail as possible, but more variables create more noise and lengthening computation time. A solution to this problem is to identify the most relevant variables - with respect to the business question we want to answer - to take forward through feature selection, these metrics can then be aggregated into a single data structure. This process serves two purposes: firstly reducing the size and complexity of our inputs and ensuring the outputs are directed towards the business objectives and free of unnecessary noise. "},{"title":"Step 2: Encoding and creating images to represent journeys","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#step-2-encoding-and-creating-images-to-represent-journeys","content":"Customer Journeys are path-dependent processes that describe customers’ interactions with different touchpoints, for example, all actions on a website leading up to purchase. To analyse these relationships we need to manipulate datasets to represent online journeys but also translate them into something that can be easily interpreted and modelled. To do this and ensure no information is lost we create a 3D embedding ‘image’ that merges all this data into a single structure through the following processes: Touchpoints that a customer has interacted with are represented in columns The order in which interactions happen is represented in rows A vector describing the quality of the customer interaction (e.g. time spent/number of clicks…)  Building our 3D embedding through an iterative process  The 3 parts for building our 3D embedding highlighted in the figure above are: Given n, the number of possible interactions on the platform, it is possible to build a vector V=(1,n) representing all actions that a customer can perform. At a particular stage t, it is possible to fill V with “0“ or “1” depending on the customer’s action: if the ith action has been performed at stage t, set V(1,i)=1 , otherwise V(1,i)=0 It is then possible to replicate this process at every stage of the customer’s journey in order to build a matrix M(l,n) where every line l represents the lth action performed by the customer Finally, adding an indicator of the journey’s quality consists of replacing the 0 &amp; 1 in the previous matrix, with a vector of values describing the interactions.  Example of an image decomposition through RGB channels  note Colourized pictures can be decomposed into Red, Green and Blue monochromatic sub-pictures. In our case, we can draw a parallel between the different indicators describing the interactions and the colourized levels of an image. "},{"title":"Step 3: Clustering customer journey “images” to identify standard paths","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#step-3-clustering-customer-journey-images-to-identify-standard-paths","content":"In order to apply a clustering algorithm first, we had to clean and apply pre-processing to our data. We then had to control the dimensions in order to keep the number of variables below a defined threshold (we chose ~log #observations). To achieve such control we used autoencoder neural networks. The goal of such algorithm is to learn a semantic representation by extracting the relevant signals from a given set of observations. This is a dimension reduction method that enables us to perform non-linear transformations. In other words autoencoders enable us to turn our inputs into meaningful and compressed data by getting rid of the non relevant information. info PCA is another such dimension reduction method that performs linear transformations.  Using a convolutional autoencoder to compress customer journeys  The above figure shows how an autoencoder performs on a dimension reduction problem. First, the input signal is compressed over the blue layers to reach a compressed representation (represented by the Dense layer). The signal is reconstructed using the green layers to then give the output. The goal is to have similar inputs and outputs while controlling the size of the Dense layer. The above architecture is different from the classic convolutional autoencoders (classic autoencoders involve a succession of convolution and pooling layers for the encoding part, and upsampling layers for the decoding part). The architecture we used relies on convolution layers, and on deconvolution layers rather than upsampling ones. Since deconvolution layers are trainable (meaning that they depend on learnable parameters), and upsampling ones are not, this architecture can learn more complex transformations than a classic convolutional autoencoder of the same depth. This architecture is inspired from the one described in this article about Deep Clustering. Once we had completed the dimension reduction, we need to apply a clustering solution on the compressed customer journeys. We then assigned each group of similar customer journeys to a representative standard journey. A word about clustering A clustering process consists of building groups of observations (e.g. customer journeys) based on their characteristics. The key components of the clustering process are: Building groups containing similar observations: we talk about intra-class variance minimization.Building groups that are different from each other: we talk about inter-class variance maximization. Clustering tasks rely on unlabelled data (such learning tasks are known as ‘unsupervised learning’). "},{"title":"Making the customer journey analysis easier to perform - taking advantage of a reduced number of journeys","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#making-the-customer-journey-analysis-easier-to-perform---taking-advantage-of-a-reduced-number-of-journeys","content":"Performing a clustering algorithm on Customer Journeys aims to reduce the complexity of the analysis through the creation of groups with similar journeys. The analysis is easier to perform as it becomes possible to focus only on the representations of each group, instead of analyzing every single path. This method drastically reduces the number of journeys that require our attention. It also becomes possible to highlight complex similarities or patterns when creating these clusters. info Once the clusters are created, each of them is assigned to a standard journey (e.g. when using k-means, these standard journey are called centroids).  Example of standard journeys  The example above shows three of these standard journeys. We can already see some interesting information and differences between the clusters: Customers in the Standard journey #1 group complete more actions compared to #2 and #3. All three standard journeys have different starting and ending pages that correspond to the first and last rows in the pictures). By looking at these standard journeys, at a glance we can already spot some initial differences between the clusters. Note that deeper analyses can be performed on these journeys by looking at the non-embedded data. "},{"title":"Leveraging the Customer Journey Clustering - three ways of improving customer-centric strategy","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#leveraging-the-customer-journey-clustering---three-ways-of-improving-customer-centric-strategy","content":"We believe that this solution has several uses to improving the way businesses operate by better understanding customer behaviour, forming a stronger view of the customer lifetime value, and improving the user experience and conversion rate. "},{"title":"Improving websites","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#improving-websites","content":"We can use customer journey clustering to build a representative journey (using the centroid of each cluster), establishing the usual actions a user performs between touchpoint A (e.g. website’s homepage) and touchpoint B (e.g. website’s purchasing page). These typical journeys help gain a better understanding of the customers’ experiences, allowing us to identify ways to improve the website. For example, it will help brands optimise the groups of products shown at the top of a landing page. "},{"title":"Building audiences","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#building-audiences","content":"By understanding the size and similarities between groups that interact with our website Customer Journey Clustering is also a way to create specific audiences. It then allows brands to tailor their activity to engage with these specific audiences, improving the overall experience. For example, if clusters 1 and 2 appear similar, but cluster 1 has a higher conversion rate than cluster 2, then analyzing the behaviours from cluster 1 may help us understand how to better retarget cluster 2. These insights also make it possible to redirect customers through an optimal action that will drive more conversions. note We could go a step further by creating customer conversion scores based on their journey. These scores could then be used to build an optimized communication strategy, leading to the next optimal action (i.e. increase or reduce media spend, depending on the score). "},{"title":"Improve churn prediction","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#improve-churn-prediction","content":"Another use case to Customer Journey clustering is evaluating churn and when customers are likely to shop with a competitor or stop ordering from us. When journeys are associated to a churn score, it becomes possible to create a predictive model that can be used to identify the groups that are more inclined to churn. Following the training of the model, the learnings could be applied to the standard journeys associated with each cluster, outputting a global churn score per cluster. These scores can then be evaluated and compared to other groups to better manage expected orders and improve communications with at-risk customers. note Since a churn predictive model such as this is trained on the 3D embedded customer journeys, one can expect it to be capable of spotting complex churn patterns involving huge sequences of actions, or time spent per action. "},{"title":"Conclusion","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#conclusion","content":"At Ekimetrics we believe that customer journey clustering can help enhance the customer experience and increase customer lifetime value. We also know that with customer behaviours changing rapidly, an approach such as this provides a flexible solution that can translate into actionable insights for any business. However, complexity is not always the answer. A good model should tell a compelling and comprehensive story, but increased complexity must be accompanied by an effort to improve interpretability and should showcase enhanced benefits for business application. The customer journey is still a challenge for every business globally. We do believe that there is no « plug and play » answer and each solution needs to be built for the problem at hand. For us, intelligent data science means developing integrated approaches and leveraging different methods to help make brighter business decisions. "},{"title":"Appendix","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#appendix","content":"To give you more details, if we take an example where a user can perform up to 10 different actions on a website, the number of possible journeys is 9,864,100. info Given n the number of possible interactions, the number of possible journeys is given by the sum from 1 to n of the number of permutation of n. "},{"title":"References","type":1,"pageTitle":"Customer Journey Clustering - How to use sequential modeling techniques to handle customer journey data","url":"blog/2021/12/22/cjc#references","content":"Xifeng Guo, Xinwang Liu, En Zhu, and Jianping Yin. Deep Clustering with Convolutional Autoencoders "},{"title":"Solving the Traveling Salesman Problem with Reinforcement Learning","type":0,"sectionRef":"#","url":"blog/2021/11/03/tsp","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Reinforcement Learning Logistics Supply Chain Data Science for business"},{"title":"Summary","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#summary","content":"Reinforcement Learning (RL) is usually applied for state of the art AI research and often make the headlines. Yet it still fails to deliver on concrete business topics. At Ekimetrics we strive to transfer AI innovations into the business world and Reinforcement Learning is a unbelievable playground to find disruptive solutions to complex real-world problems. In particular, there are many optimization problems that could be solved using RL. The Traveling Salesman Problem (TSP) has been solved for many years and used for tons of real-life situations including optimizing deliveries or network routing. This article will show a simple framework to apply Q-Learning to solving the TSP, and discuss the pros &amp; cons with other optimization techniques. It's a perfect introduction for beginners in Reinforcement Learning and does not require heavy computational capabilities. You can find all the code open sourced here on Github "},{"title":"The Traveling Salesman Problem","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#the-traveling-salesman-problem","content":"The Traveling Salesman Problem (or TSP) is a typical optimization problem, where one has to find the shortest route to visit different cities. There are many different ways to solve this problem using discrete optimization techniques. Like many optimization problems, it's a NP-hard problem, which in short means that it's easy (in terms of speed) to solve for 5 cities, already impossible to brute force for 50. And almost impossible for most algorithms for 5,000 cities. Even for 15 cities, it's already 1 trillion permutations to compute (15!), there are optimization techniques that are more adequate : dynamic programming, branch and bound algorithms, nearest neighbors approximations, or ant colonies optimizations. Furthermore, the problem described here is too simple to describe a real-life delivery situation. It does not take into account multiple vehicle fleet, electric vehicle charging, time window constraints, capacity constraints, aleatory perturbations, etc... Hence, each variant of the TSP has its own optimization frameworks (in terms of variables and constriants), and the more you complexify the problem, the more difficult it is of course. That's why in practice delivery companies use combinations of those variants coupled with heuristics. The most advanced companies today add Machine Learning techniques on top of those algorithms, in particular to replace manual heuristics and better estimate in-context durations. In Python, the easiest way to get started with TSP and its variants is probably the great open source library OR-Tools by Google. And if you want to learn more about discrete optimization, I can only recommend the great MOOC on Discrete Optimization by the University of Melbourne you can find on Coursera. "},{"title":"Applying Reinforcement Learning to the TSP","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#applying-reinforcement-learning-to-the-tsp","content":""},{"title":"Why bother using Reinforcement Learning?","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#why-bother-using-reinforcement-learning","content":"If it's already solved by classical optimization techniques, why bother using Reinforcement Learning? Well several answers: It's fun and I personally love practicing RL. Curiosity is a great driver for innovation, and here I was really wondering if it could be applied for such a problem.RL is rarely used in real-life problems. Playing games or manipulating robot hands is awesome, but when it comes to business problems, RL often fails compared to simple heuristics or algorithms. At Ekimetrics, we always look for applying state-of-the-art AI research to the business problems we encounter in the real-world.  However, Reinforcement Learning (in theory) would hold many advantages compared to classical optimization techniques : Offering a general framework for all problems, indeed instead of tweaking the constraints and defining extra variables, you can change the reward, and defining a multi agent problem if needed for fleet optimization. Adding extra information like delivery time estimation is also eased if you can integrate the prediction algorithm with a similar ML techniques (e.g. Neural Networks)Having a &quot;live&quot; decision making algorithm. Because you would train a RL alorithm by making the next delivery decision at each stop, compared to &quot;offline&quot; optimization algorithms that study the problem with no unknowns, you inherently would be able to take different decisions if something happened during the experience, whereas you would need to recalculate with classical techniquesBeing robust to unknowns and aleatory perturbations "},{"title":"Transforming the TSP to a RL problem","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#transforming-the-tsp-to-a-rl-problem","content":"Before jumping into the TSP variants, let's take the most simplest version: a delivery man who has to deliver 50 packages. Between each stop can be defined a distance or a duration (or a more complex metric). To transform it to a RL problem, we need to define: Agent: the delivery manEnvironment: the different packages to deliver (and their destination) and the city where to navigateStates: the location where the delivery guy currently stops Actions: at each location, the decisions to make (modeled as a Markov process) are: &quot;where to go next&quot; (or &quot;which location do I chose next&quot;)Reward: Between two locations (states), how long (or how far) it is "},{"title":"Creating the routing environment","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#creating-the-routing-environment","content":"Creating a simple version of the environment is quite simple in pure Python. Indeed, you can store the position of the stops in a 2D virtual world as a numpy array or a Pandas DataFrame. Distances between stops can be calculated with an euclidean distance, but it could be complexified to account for durations or represent any distance/duration metric you would see in a routing network.  from scipy.spatial.distance import cdist ENV_SIZE = 10 N_STOPS = 100 # Creating the stops using numpy random points generator xy = np.random.rand(N_STOPS,2)*ENV_SIZE # Computing the distances between each points # Here use euclidean distances, but any metric would do # This distance matrix can actually represent a time, a distance or something else distance_matrix = cdist(xy,xy) Copy Then we want to define the starting position, the route, and the end position. Meaning that if we have to traverse A, B, C, D, E, possible routes would be for example A-&gt;C-&gt;B-&gt;E-&gt;D or B-&gt;D-&gt;E-&gt;C-&gt;A. By the way with 5 stops you have 5! possible routes or 120 possible routes. For 10 stops you already have 3.6 million possible routes. For 100 stops it's 10 to the 158th power routes. It's called the combinatory explosion, and that explains why this simple problem is impossible to brute force for a high number of stops. We can visualize routes by drawing lines between each stop  We can also already imagine more complex and realistic situations. For example, one experiment I wanted to do was to stress test the RL algorithm to aleatory events. For example a known environment with unknown perturbations, like traffic. To model this interaction, we add a &quot;traffic zone&quot; inside our environment, where routes are much slower if taken. To account for the extra duration, we calculate the intersection points of the route within the &quot;traffic zone&quot; and measure the distance of the formed segment, we then use that distance weighed with a traffic intensity factor. i1,i2 = intersections distance_traffic = np.sqrt((i2[1]-i1[1])**2 + (i2[0]-i1[0])**2) additional_reward = distance_traffic * traffic_intensity * np.random.rand() Copy  Now that we have the overal idea, we have to design an environment object in Python to be fed to a Reinforcement Learning agent. We use the typical design framework inspired from OpenAI Gym: class DeliveryEnvironment: def reset(self): &quot;&quot;&quot;Restart the environment for experience replay Returns the first state &quot;&quot;&quot; pass def step(self,a): &quot;&quot;&quot;Takes an action in a given state Returns: s_next: the next state reward: the reward for such action done: if the simulation is done &quot;&quot;&quot; pass def render(self): &quot;&quot;&quot;Visualize the environment state &quot;&quot;&quot; pass Copy "},{"title":"Designing the Q-Learning algorithm","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#designing-the-q-learning-algorithm","content":"Before jumping into complex Deep Learning, I wondered if a simple Q-Learning framework would work. Basically with Q-Learning you want to evaluate a matrix mapping states, actions and rewards. Indeed to make a decision in a given state about the best actions to do, you would love to have an estimate if the decision was the best in the long term. This is represented by the Q values. In our case, the rows are the different states (all the stops) and the columns the possible actions to take in this state, hence the next stop to go. The values are the estimated long-term reward you would get by taking this action. So, if you are found in a state A, you would like to take the action with the maximum Q value. For our TSP problem for example, we would have a Q-Matrix of 50 by 50 if we have 50 stops. Because we want to inform the routing algorithm with as much unbiased data we can find, we can actually initalize the Q matrix (also called Value function because it maps out states and actions to rewards - the values) with the distance matrix between all stops. Indeed, if you would not consider a long-term decision making strategy, you would apply a greedy one where you would chose the closest stop as a next destination. Yet it would definetely be better than random. from scipy.spatial.distance import cdist Q = cdist(xy,xy) Copy Ok, but how to update those values and incorporate long-term planning? This is exactly the goal of the Q-Learning algorithm. Imagine you are delivering pizzas every day all across the city, you have an old GPS to help you decide the shortest route between your stops. But your city is much more complicated than what you and your GPS know. What would happen? The first day, you would chose the closest stop first and then jump to the next closest one. You will quickly realize that it's not optimized. You should maybe have gone first to another neighborhood and deliver everything in the area before jumping to another one. So the next day, you commit to another strategy, armed with yesterday's experience. Definitely, looking ahead and avoiding single deliveries in remote areas even if they are closest is a better idea. But while you are exploring the best routes, you pass through the city center and get blocked into traffic that terribly slows you down. The 3rd day, you will try to apply the same general strategy, but definitely if possible you will never go through the city center, and try circling around the city to save some precious time.  This trial-and-error behavior is basically how experience replay works in the Reinforcement Learning framework. If we code an agent abstraction, it could look like this: class QAgent(Agent): def __init__(self,states_size,actions_size,epsilon = 1.0, epsilon_min = 0.01,epsilon_decay = 0.999,gamma = 0.95,lr = 0.8): self.states_size = states_size self.actions_size = actions_size self.epsilon = epsilon self.epsilon_min = epsilon_min self.epsilon_decay = epsilon_decay self.gamma = gamma self.lr = lr self.Q = self.build_model(states_size,actions_size) def build_model(self,states_size,actions_size): Q = np.zeros([states_size,actions_size]) return Q def train(self,s,a,r,s_next): self.Q[s,a] = self.Q[s,a] + self.lr * (r + self.gamma*np.max(self.Q[s_next,a]) - self.Q[s,a]) if self.epsilon &gt; self.epsilon_min: self.epsilon *= self.epsilon_decay def act(self,s): q = self.Q[s,:] if np.random.rand() &gt; self.epsilon: a = np.argmax(q) else: a = np.random.randint(self.actions_size) return a Copy The most important line is this one: self.Q[s,a] = self.Q[s,a] + self.lr * (r + self.gamma*np.max(self.Q[s_next,a]) - self.Q[s,a]) Copy This is the update rule in basic Q-Learning, where you increment the Q-value for each action in each experience replay (simulating a day of delivery hundreds of time) by the current reward + the reward for the best possible action you would take in the future. This recursive equation is a variation of the famous Bellman equation for Q value functions. Notice two factors: The learning rate lr control the learning speed (like in Deep Learning)The gamma factor gamma is the discount factor, and control long-term planning. Indeed if gamma = 0, you will only get the next action reward (your agent is &quot;short sighted&quot; only seeking current rewards), if gamma = 1 you will be more oriented towards the future rewards (above 1 it may diverge) Those two factors are our most important hyperparameters to tune during training (there are others like the epsilon variables defined in the initialization, if you are curious take a look at epsilon-greedy methods, a super simple way of tackling the exploration-exploitation dilemma in Reinforcement Learning) "},{"title":"Writing the training loop","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#writing-the-training-loop","content":"Once we have define the environment, the Q-Agent and the update rules for the value function, we only need the final step: the training loop. We will apply experience replay to our poor delivery guy stucked in an infinite time loop.  Every day, over and over, he will try to deliver our 50 packages, find the best routes and do it all over the next day. In Reinforcement Learning we call each day an episode, where we simply: Reset the environmentMake a decision of the next state to go toRemember the reward gained by this decision (minimum duration or distance elapsed)Train our agent with this knowledgeMake the next decision until all stops are traversed def run_episode(env,agent,verbose = 1): s = env.reset() agent.reset_memory() max_step = env.n_stops episode_reward = 0 i = 0 while i &lt; max_step: # Remember the states agent.remember_state(s) # Choose an action a = agent.act(s) # Take the action, and get the reward from environment s_next,r,done = env.step(a) # Tweak the reward r = -1 * r if verbose: print(s_next,r,done) # Update our knowledge in the Q-table agent.train(s,a,r,s_next) # Update the caches episode_reward += r s = s_next # If the episode is terminated i += 1 if done: break return env,agent,episode_reward Copy "},{"title":"Results","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#results","content":""},{"title":"Q-Learning for a simple TSP","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#q-learning-for-a-simple-tsp","content":"When you start training and experiencing the same problem overtime, your agent learns about the environment, this is shown by the episode rewards values for each experience replay.  In the first phase, until the 400th episode, you are still exploring the different routes. Indeed with the epsilon decay method (with epsilon_decay=0.999), you are taking random actions at each step. In the second phase, epsilon is lowering, and you start exploiting what you have learnt, and take less and less random actions to be more driven by Q values.  What's tricky with epsilon-greedy methods, is that it kind of forces of the convergence. So did it work? Let's see. 50 stops experiment#  100 stops experiment#  500 stops experiment#  In each experiment, the algorithm converges quite fast to a seamingly acceptable route. After exploring a lot of options it not only gives one route but variations of the accepted strategy, which can already be interesting to find alternatives. "},{"title":"Q-Learning for a TSP with traffic zones","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#q-learning-for-a-tsp-with-traffic-zones","content":"Now that we have our environment, agent and framework defined, what's great with RL is that we don't have to change anything but the reward to model a different situation. Indeed because we tweaked the reward when you drove through a traffic zone, the agent will learn the same way to optimize his holistic route. 100 stops experiment with traffic zones#  Eureka, the agent will avoid as much as possible the traffic zones 500 stops experiment with traffic zones#  With more points, it's even more interesting, the agent will really circle around the traffic zone and prefer longer but faster routes. "},{"title":"Next steps","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#next-steps","content":"I hope this simple experiment has highlighted how to apply (non-Deep Learning) Reinforcement Learning techniques to real-life problems. I haven't had time to benchmark the resolution against other optimization techniques (which I should have done I confess), but let's try to draw some pros and cons for the approach. ⛔ Cons:# Probably slowerDefinitely less accurate than a discrete optimization technique ✅ Pros:# General framework to be updated in real-life situations (eg: the traffic) and extended to more complex problemsAlternative routes are proposed&quot;Online&quot; decision making (meaning that you have an algorithm armed with a next-best decision recommendation system) Next steps is to extend the work to an even more global framework to account for multiple vehicle fleets, charging stations and more. The latter idea will require to use Deep Reinforcement Learning because states could not be represented as a matrix, and will probably be more difficult (impossible?) to train, but that's a topic for a next article! "},{"title":"References","type":1,"pageTitle":"Solving the Traveling Salesman Problem with Reinforcement Learning","url":"blog/2021/11/03/tsp#references","content":"All the code is open sourced here on GithubOR-Tools open source library by GoogleMOOC on discrete optimization by the University of Melbourne on CourseraThe timeless MOOC on Reinforcement Learning by David Silver at Deepmind "},{"title":"Hackathon Stories - Ensuring access to affordable and clean energy","type":0,"sectionRef":"#","url":"blog/2022/01/06/hackathon","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Hackathon Teamwork Sustainability Sustainable AI Data Science for business"},{"title":"Ensuring access to affordable and clean energy","type":1,"pageTitle":"Hackathon Stories - Ensuring access to affordable and clean energy","url":"blog/2022/01/06/hackathon#ensuring-access-to-affordable-and-clean-energy","content":"The name Sustainable Development Goals (or SDGs) is commonly used to refer to the seventeen goals established by the member states of the United Nations which are gathered in the 2030 Agenda.  The goal 7 - “Ensure access to reliable, sustainable and modern energy services at an affordable cost for all&quot; - is a particularly important issue for the African continent, where 596 million people do not have access to electricity. Most of these people live outside of urban centers, and therefore out of reach of the continent’s electricity grid. Some existing systems also struggle to supply enough energy to the homes and businesses that are on the grid. It is estimated that 592 million people in Africa are living without access to electricity. Most of these people live outside of urban centers and therefore out of reach of the continent’s electricity grid. Furthermore, the existing systems in many African countries even struggle to supply enough energy to the homes and businesses that are on the grid. Pay-as-you-go (PAYGo) solar technology has become Africa’s most promising approach to handling the continent’s growing energy problems. PAYGo users pay a small downpayment for a solar kit that provides up to eight hours of emission-free lighting every day, as well as enough energy to charge mobile phones and other devices. With PayGo solar, residents are able to reduce their energy spending by up to 50%. The objective of this challenge is to help predict the next six months of payments for different customers. This will allow PAYGo distributors to provide appropriate services and customer support, ensuring that they can continue to provide these important devices affordably and efficiently to the benefit of people all over Africa. "},{"title":"Why do we organize hackathons?","type":1,"pageTitle":"Hackathon Stories - Ensuring access to affordable and clean energy","url":"blog/2022/01/06/hackathon#why-do-we-organize-hackathons","content":"After a long period of COVID19 marked by an almost generalized working from home, we wanted to allow our teams to meet in real life with the coworkers they only saw in back-to-back Teams calls, and work together on an important cause. We love hackathons at Ekimetrics as they enable: To federate teams;To make people that don't usually work together collaborate to drive innovation;To get some practical experience at tackling new problems far from our usual business topics. That is why we organize two big hackathons every year and bi-monthly coding challenge sessions, some of which you can find in open source on our hackathons homepage. For this event, we were lucky enough to be able to carry it out in our office while respecting all sanitary recommendations.  "},{"title":"How to organize a hackathon for your data teams?","type":1,"pageTitle":"Hackathon Stories - Ensuring access to affordable and clean energy","url":"blog/2022/01/06/hackathon#how-to-organize-a-hackathon-for-your-data-teams","content":"Having organized a dozen hackathons internally and for our clients, and participated in many of them, we have consolidated our learnings into a set of best practices which we are happy to share with you to help you organize your own hackathon for your data teams: Finding a platform - There are also platforms integrating many public hackathons like Kaggle or Zindi mentioned above. This time, we chose to contribute to an existing hackathon - see section below about developing a hackathon platform. Choosing a meaningful topic - Get involved in a project or a project that matters to you and your colleagues. It's important to work on a different topic than your daily work, but you need to have passion. Preparing the minimum starting pack - Focus on the answer to the problem and spend time preparing notebooks and training tools to facilitate the handling of the subject by the teams and allow them to increase their skills on new technologies. Maybe also find a few data points and some interesting resources and references to. Making balanced teams - It is essential to balance the teams taking into account their varying levels of expertise and seniority; Timing, Timing, Timing - ⏱ It is necessary to pace the flow of the event, to allow participants to get into the topic and also to propose dedicated sessions allowing for discussions with the organizers and help throughout the event; Setting the adequate duration - 🏁 Ideally, hackathons last between 6 and 8 hours over an evening and part of the night in order to condense the challenge as much as possible while allowing the teams to take control of the issues at stake - to 2 days to have time to build a demo. Proposing a baseline - 💻 Depending on the topic it can be very useful to propose one or more examples of models allowing to build a base line from which to iterate; Communication - 💬 It is necessary to provide a common discussion thread for all participants as well as private channels by teams; Fun - 🍾 Of course pizzas, beers, and other refreshments to keep a good energy level and especially a nice atmosphere throughout the competition; Letting the stage - 😎 Finally, to showcase the night’s work, we always plan a pitch session the next day to present the projects in front of Ekimetrics partners and founders. Rewards &amp; gifts - 🎁 A nice option is also to reserve gifts for the winners if you can decide of a winner  "},{"title":"Do you need a hackathon platform?","type":1,"pageTitle":"Hackathon Stories - Ensuring access to affordable and clean energy","url":"blog/2022/01/06/hackathon#do-you-need-a-hackathon-platform","content":"If it is not an open innovation hackathon, and depending on the topic and how the competition works, it can be interesting to have a main hackathon platform for participants to upload their results, test their solutions and compare with other teams. In this case there are multiple solutions to consider : Using existing platform like Zindi Africa, Kaggle or Driven Data Build your platform adapted to your needs, in particular now you can easily use Streamlit to build your own. See some examples below;Not using a platform, avoid building a new one if you can focus on human relations, and the platform does not add value to the competition or the innovation  For our different hackathons, we developed the platforms we needed : Our main platform for custom hackathons where we can compute a score between teams#  The platform we developed on Streamlit for our Data Science Escape Game#  "},{"title":"What is our hackathon philosophy at Ekimetrics?","type":1,"pageTitle":"Hackathon Stories - Ensuring access to affordable and clean energy","url":"blog/2022/01/06/hackathon#what-is-our-hackathon-philosophy-at-ekimetrics","content":"Our goal is not to become &quot;Kaggle masters&quot; to reach the highest score. We are always keen to put forward the double hat (technical and business) of Ekimetrics consultants in order to give meaning to the data. That's why during this challenge we evaluate the teams around three dimensions: The performance of the models; The quality of the data analysis, the insights, and the quality of the visualizations; The overall strategy to tackle the problem, going back to the bigger picture - i.e. broader issuers such as sustainable development. Offering different types of sub-challenges within the same hackathon created great opportunities for all Eki employees (including members of the marketing, HR or finance teams) to integrate within a team, which helped create links between people who do not always meet on a daily basis - let alone work together. "},{"title":"If you want to do it yourself","type":1,"pageTitle":"Hackathon Stories - Ensuring access to affordable and clean energy","url":"blog/2022/01/06/hackathon#if-you-want-to-do-it-yourself","content":"This hackathon is open, do not hesitate to participate here. Thanks to all the participants ! "},{"title":"Which AutoML platform to choose to start your Data Science project?","type":0,"sectionRef":"#","url":"blog/2022/01/27/automl_benchmark","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence AutoML Automatic Machine Learning Cloud Titanic House Prices Data Science for business"},{"title":"What is AutoML and why it is interesting?","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#what-is-automl-and-why-it-is-interesting","content":""},{"title":"Definition","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#definition","content":"Sebastian Raschka, a well regarded American statistics professor, states: ‘’Computer programming is about automation, and Machine Learning is all about automating automation’’. If that’s true then we can say that Automated Machine Learning is the automation of automating automation..! AutoML is a new optimization technique which aims at automating some of the core - but highly iterative - parts of the traditional modelling process in ML, in particular feature selection and model selection (including hyperparameter tuning and stacking). Let’s take the example of a Decision Tree Algorithm. This algorithm has many hyperparameters (leaf, depth, split etc.) and browsing through all those hyperparameters can take days. An AutoML algorithm can intelligently explore all the possible parameters in order to find the best possible ML algorithm solving a given task. Some advanced AutoML algorithms can even choose between different features, create new ones and try different data cleansing scenarios! "},{"title":"How AutoML can help us?","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#how-automl-can-help-us","content":" There are many steps in a Machine Learning project, with Model Training typically being one of the most time consuming. A standard project will focus on a Business Problem and will pass through Data Collection, Cleaning and Processing before the training phase. Model Training can then be cumbersome as we have to select an appropriate model family and to fine tune many times differents hyperparameters before building the analysis and deploying the model. This process can take weeks or months, but it seems that several steps can be automated using optimization algorithms and that is the goal of auto ML. In a sense, AutoML is seen as a way to increase productivity, to allow the Data Scientist to focus more on defining the problem and the analyses rather than the models finetuning, to help avoiding errors, and on top of that, to democratize Machine Learning so that everyone can leverage its power. Its integration within ML Engineering environment allows to streamline pipeline and integrate specific training jobs, that allows to parametrize a model search completely from a simple configuration file. "},{"title":"Overview of the main AutoML frameworks in the market","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#overview-of-the-main-automl-frameworks-in-the-market","content":"For this article, we have selected 7 well known AutoML frameworks, but many more exist in the market. Below is an overview of some of the types of Data Science problems these AutoML solutions can address. Among them two are open source: AutoKeras &amp; H2o and the others are not: with DataRobot, Dataiku, Azure, GCP, and AWS SageMaker. (2 other open-source solutions AutoKeras and AutoGluon were studied, but these frameworks are not available on Windows.)  Many of the AutoML solutions address different types of Data Science problems such as Sentiment Analysis or Computer Vision, however what is going to interest us for the rest of is article are the Classification and Regression ML problems. "},{"title":"Exploring the capabilities of several AutoML solutions","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#exploring-the-capabilities-of-several-automl-solutions","content":""},{"title":"Our methodology (Classification/Regression, datasets Kaggle)","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#our-methodology-classificationregression-datasets-kaggle","content":"The purpose here is to bring some knowledge in the field of Automated Machine Learning by exploring some popular AutoML frameworks. In order to establish a performance benchmark, we decided to test those frameworks on common ML topics like Regression and Classification. The idea is also to share our personal experience (and difficulties encountered) with those tools so that everyone can have an overview of each one these AutoML solutions. These packages were benchmarked on two classical datasets available on Kaggle. We chose the Titanic Challenge (Titanic - Machine Learning from Disaster | Kaggle) for the Classification problem and the House Prices Challenge (House Prices - Advanced Regression Techniques | Kaggle) for the Regression problem. For each framework, we submitted predictions on the test set on Kaggle so that we can compare the results to the general leaderboard. What is interesting with this approach is that we were able to compare performance not only between each AutoML solution but also with individual performance.  "},{"title":"Our results","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#our-results","content":"Classification Problem - Titanic Challenge#  The Titanic Challenge is one of the most famous on Kaggle with more than 30,000 challengers. The objective is to have a model which will predict if a Titanic passenger survives or not on a small data set with 9 features and around 900 rows in the training set. The metric used for this challenge is the accuracy and the leaderboard we have downloaded from Kaggle is provided below.  Each point represents a challenger with the performance of all tested frameworks noted, with ranking &amp; accuracy plotted on the x and y axis. We found that Azure has the best accuracy followed by H2O and that the accuracy for all frameworks ranges within 73% - 80%. Regression Problem - House Prices Challenge#  For the House Prices Challenge, the goal is to predict the final price of residential homes in the United States. This time the metric is the root mean squared error, which is a metric that tells us the average distance between the predicted values from the model and the actual values in the dataset. We have around 8000 challengers (less challengers than the Titanic Challenge) and the dataset here is bigger with more than 250 features and around 1400 rows in the training set.  We can see that all frameworks did better than the baseline RMSE. Each of the tested models fall between 0.24 - 0.12 in terms of the RSME and H2O again performs the best among other tested frameworks. "},{"title":"Conclusion","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#conclusion","content":""},{"title":"Which AutoML solutions to choose?","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#which-automl-solutions-to-choose","content":"In conclusion, which AutoML to choose? When making our decision, the framework performance is important, but not all frameworks were in fact easy to use. Conversely, we spent a lot of time on some frameworks, because some of them were not as intuitive as expected. User friendliness must also therefore be a major criterion to consider when you are wondering which AutoML to use. That’s why, in order to consider the frameworks performance on both the Kaggle challenge but also the user friendliness of each solution (if it is easy to install it, to get familiar with the tool, to set up the experiment without errors), we built two further metrics to evaluate each AutoML framework and to compare them. On the x-axis: we give the ease of use for each AutoML framework from 1 to 10 (10 being the best) On the y-axis: we took the average ranking on the both Kaggle challenge (the closer to 0, the better)  The metric 'ease of use' is somewhat subjective as it refers to our own personal experience. However, we would add that one of the goals of AutoML is to make Machine Learning accessible to everyone, so for someone with very little knowledge, it is interesting to see how accessible the differents tools are. We found that: The cloud solutions are more difficult to master especially if you’ve never used cloud computing before. In fact, some time is needed to get familiar with all the different functionalities of cloud solutions like Azure, AWS or GCP as there are powerful and comprehensive tools. Dataiku and DataRobot are very easy to use and very visual, with many icons. These interfaces are very clear and simple. If you want to use an extremely easy-to-use AutoML tool, which can perform automated machine learning very quickly, DataRobot and Dataiku seem to be good solutions. H2O works as a notebook so if you are familiar working on a Jupyter notebook for example, it can definitely be a good option and not too painful to use. H2O seems to be a very good choice in terms of performance and ease of use. Moreover, this framework has the advantage of being completely open source. "},{"title":"Final thoughts, our key takeaways","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#final-thoughts-our-key-takeaways","content":"This article tries to compare 7 majors AutoML frameworks. To do so, we introduced a methodology that considers the performance of each solution, but also their ease of use. What appears clearl is that AutoML can definitely be a good starting point to an ML project. In fact, for both the Classification and Regression problem, all the frameworks performed almost as well, even better sometimes than the baseline, just by using the AutoML functionality. However, it is important to remember that automatically generated pipelines are still very basic and are not able to beat human experts yet. As we could see on the different benchmarks from Kaggle, Data Scientists still perform better. A Data Scientist analyzes the hidden information inside data, extracts useful correlations, gives useful insights about the business that has created data itself and all these tasks cannot be fully automated. "},{"title":"References","type":1,"pageTitle":"Which AutoML platform to choose to start your Data Science project?","url":"blog/2022/01/27/automl_benchmark#references","content":"To read more about AutoML: 2019 | AutoML: A Survey of the State-of-the-Art | Xin He, et al. 2019 | Survey on Automated Machine Learning | Marc Zoeller, Marco F. Huber 2020 | Automated Machine Learning--a brief review at the end of the early years | Escalante, H. J. 2008.08516.pdf "},{"title":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","type":0,"sectionRef":"#","url":"blog/2022/02/07/building_datalake_part_1","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Science for business Datalake Data Engineering Lakehouse Data Architecture Data Governance Data Validation Data Mesh Azure AWS GCP"},{"title":"Article Scope","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#article-scope","content":"Scalable and distributed, datalakes have become the new go-to for centralizing storage and insights. The main challenge is not to create one, but rather to do it right and avoid falling into the so-called data swamp and empty shell traps. In this article, we’ll go through how you can create your first datalake following best practices in order to make it robust, evolutive and central to your company’s information architecture, as well as take advantage of the opportunities it presents. In this post, we’ll be technology agnostic. The focus here is a smart architecture that will help solve functional and technical challenges, whether you’re using Azure, Amazon Web Services, Google Cloud Platform, any other provider or even building &amp; managing the infrastructure yourself. "},{"title":"Introduction","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#introduction","content":"Before talking about how to design a datalake, let’s review what it is, why it’s useful and the main aspects that will ensure its quality. "},{"title":"What is a datalake?","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#what-is-a-datalake","content":"A datalake is a global storage space allowing to interact with all data type: unstructured (e.g. text documents, images, videos), semi-structured (e.g. XML / JSON files), structured (e.g. SQL tables, CSV files). Data is extracted from all relevant sources, loaded into the datalake, then transformed into their use case specific target. A well-designed datalake is flexible and scalable, allowing it to handle the increase in data volume, velocity, and variety. Because a datalake stores raw data before transforming it, it is extremely useful for extracting potential value from the data for the future. By centralizing data sources into a global storage space, it helps data scientists and analysts explore data to generate new use cases and business insights. "},{"title":"Is building a datalake the right solution?","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#is-building-a-datalake-the-right-solution","content":"The goal shouldn’t be to build a datalake for the sake of building one. A datalake is only the foundation, corner pieces in your larger data analytics and data architecture puzzle. Your goal should be to find a use case from which you can build a robust and evolutive foundation to your technical and functional architecture. Having a clear vision as to how your datalake can grow in a 2-year horizon, with new data sources and analytical use cases, is essential. "},{"title":"The data swamp and empty shell traps","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#the-data-swamp-and-empty-shell-traps","content":"Chasing the dream of a datalake that meets all current and future analytics needs or that unites all of your organization’s stakeholders around a single vision is an excellent way to fall into the data swamp or empty shell traps. By trying to collect all current – and future – data sources from the start, there is a risk that your datalake will become a swamp. When that’s the case, due to unorganized, unvalidated or simply hard to exploit data, it can be incredibly challenging to make your datalake useable. Your first goal should be to analyze which high impact use cases will be used by your organization’s stakeholders and target data for these specific use cases. Starting with the business needs instead of chasing a technical achievement, you can be sure that your datalake will be used and useful, instead of an empty shell: a good foundation but unable to attract your organization’s stakeholders. Read more about how we can avoid missing out on business impact in this whitepaper. "},{"title":"The foundation architecture","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#the-foundation-architecture","content":"Let us first establish the building blocks of your datalake. This foundation is the basis for logical separation of your data and use cases in the platform you'll be building. A datalake can ingest any type of data: from structured tables to unstructured files, whether ingested by batch or through streaming processes. Data will transit through four zones in sequence, from its raw form to fully processed for use cases, and from a technical to a business orientation. Landing LAN : temporary zone for all sources. Once data is extracted, it transits through this zone and is dispatched into the next zone by validation mechanisms. RAW (also known as bronze): data extraction pipelines will fetch data in the landing zone and validate it technically as well as functionally to make sure it is usable. This zone is the main storage component for all your data, and contains every extracted source, raw and untransformed, only with a concern for what is technically and functionally usable. In landing and raw zone, data is organized logically by source: CRM, Point of Sales, WEB, etc. Trusted TRD (also known as silver): in this zone, you'll find the output of your data pipelines. Here, data is deduplicated, cleaned, transformed, and aggregated for your target use cases. Data is organized logically by data domain (Marketing, Finance, Sales, Operations…) and use case (Reporting, API exposition, AI training…). Refined RFD (also known as gold): this is the final zone for your data. It is the exposition layer for your use cases and is organized logically by use case. These four zones are a representation of your data's journey through the datalake. From the refined zone, a serving layer can be added, taking shape in data marts, APIs, file exposition, etc. Your apps and users can then fetch or be sent data through this serving layer and make decisions that will give your data value.  Data’s journey through a datalake, from source to usage  Your data’s journey from sources to serving layers is managed by pipelines, which are themselves managed by orchestrators. Pipelines describe how data is moved and transformed, be it with highly customized code or low code interfaces: in terms of concept, pipelines are close to ELTs (Extract, Load, Transform) mechanisms. Orchestrators are an ensemble of pipelines, defining parameters for each of them and specifying when and how they should be run: periodically, when an event triggers, using larger or smaller computing power, etc. note A sandbox storage zone and computing environment can be made available with access to some of your storage zones. That sandbox allows for exploration of data by data scientists and data analysts, motivating new use cases. Based on this architecture, it all seems too simple: find a high value use case to start off the building process, then add new use cases and sources later. Following the design principles in the next section, it could in fact be that simple, all the while avoiding falling into the data swamp and empty shell traps. "},{"title":"Usable and Useful through architecture and design","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#usable-and-useful-through-architecture-and-design","content":"We’ve gathered some best practices and design principles that work well to counteract the possibility of your datalake becoming messy or unused. We like to think of each of these best practices as serving a goal that is threefold: building a datalake that is usable, useful, and used - what we refer to as our three “U”s. The first “U” is targeted towards the data swamp trap, the latter two towards the empty shell trap. "},{"title":"Usable through clear storage and pipelines architecture","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#usable-through-clear-storage-and-pipelines-architecture","content":"The first step for building a usable datalake is to make your storage and pipelines easy to comprehend for users as well as automated processes. Technical and functional separation for pipelines and storage is your first step in making your datalake understandable. Make it clear who does what in the datalake. A use case is built on top of data, which needs to be collected: we’ve found it best to separate data collection from its transformation from the start. Using at least different pipelines, and, better still, different scheduler resources will make understanding who (or which pipeline) is doing what much easier. One orchestrator for data collection pipelines, and other orchestrators for each data domain and use case theme – e.g. finance reporting, marketing CRM, sales exposition... This also sets up your datalake’s functional architecture in a “data mesh”-like manner, where each data domain has its own identifiable perimeter.   Separating pipelines among data domain orchestrators allows for a better understanding of who does what  Make it obvious where to find data in your storage. We’ve talked a little about Landing, Raw, Trusted and Refined data storage layers. Separating your data by source in the Raw/Bronze layer will help your users and transformation pipelines identify each dataset. Separating transformed data by use case in the Trusted and Refined layers will give a better understanding of the functional architecture behind the storage. Make it apparent which transformation or collection pipelines is responsible for which data. Use identifiers such as date and time “YYYYMMDD_HHMM” for your pipelines and processes. Date and time is a great identifier for understanding when data was transformed or collected. Sticking to them for your logging as well, you can make sure that monitoring your pipelines and exploring their results is as easy as possible. Inside your transformation pipelines, we’ve found that using break points is highly useful. Writing a dataset’s state after it’s been cleaned, pre-transformed, etc… up until its final refined state will make debugging and understanding your pipelines much easier. Using names like 0_deduplicated, 1_cleaned, 2_calculated to show breakpoints in your transformations allow for a better understanding of the data lineage of each use case, also helping exploration in the sandbox. "},{"title":"Usable through data validation","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#usable-through-data-validation","content":"Now that your storage and pipelines architecture is understandable, your second goal is to make your data usable so that the datalake doesn’t immediately become a swamp with faulty and unchecked data. One mistake to avoid is to consider that since a datalake can store any type of data, all data is good to collect, and you can figure out if it’s usable and useful later. On the contrary: validating data from the get-go is essential. By having your data collection pipelines look at the structure and content of the data, you can make sure that your transformation pipelines will have a smooth time reading it down the line. However, this does not mean that you instantly delete any data that is deemed unfit for your use cases. We’ve found that dispatching data into rejected and validated subzones in the RAW/bronze zone is a good option: A rejected subzone for any data that will not technically fit your use case pipelines: faulty files with bad lines, wrong column count for structured data, corrupt zip files, bad encoding, the list goes on. Deciding which data to move to the rejected subzone ultimately depends on how it will be read by later pipelines. We’ve also seen cases where data needs to be rejected for functional reasons: data from a source can be sent to you even though you’re not allowed to use it, or the data is technically readable but does not match with the sources you accept. In this instance, you can divide your rejected subzone into technical rejects and functional rejects. Finally, any data that is technically and functionally usable can transit to the validated subzone. When a use case pipeline reads data, it will usually only read that data’s validated zone. This not only ensures that your pipelines are robust and will not fail due to faulty or unexpected data, but it also allows for a stable data model to be built.  Technical and functional data validation guarantee a first level of data quality  Why keep rejected data, you’ll ask? Data that is technically rejected is useful for several reasons, the first one being that it is a good indicator of your sources' quality, and allows you to communicate efficiently with your data providers. Secondly, technically invalid data at one point in time may be usable in the future, be it by adjusting your later pipelines to be able to read them or simply correcting the data as a one-shot fix. Data that is functionally rejected is also useful, particularly in cases where it’s from a source you’re not sure you’re allowed to collect. An additional subzone can then be a quarantine zone, where you would store data for which you need to check whether you can accept it in your use cases. note By managing functional and technical rejections, your collection pipelines can be a powerful tool for your Data Steward and apply robust and monitorable governance at the datalake’s entry point.  From validated sources to a specific breakpoint in a run ID of a Use Case in a domain  "},{"title":"Useful through a business driven design","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#useful-through-a-business-driven-design","content":"What we mean by “useful” - the second of our three “U”s, is that your datalake has to serve a business use, while not limiting itself to the first identified use cases. This in turn means several things. The first thing being the importance of starting from a business use case to then identify which data must be collected and transformed. Working from the business needs is always the winning strategy, especially for data science and datalake projects where it is easy to get lost in all the possibilities. Collecting data into your datalake is not an effortless task, especially following the aforementioned tips that help validate the data’s usability, functionally and technically. Which is why the first step is to make sure that the data you collect is indeed useful to your target use case. Our article “Customer Data Platform: Thinking Backwards is the Way to Go” summarizes this business driven approach well. Now, in order to make the most of that data and not limit a source to the one and only use case, your collection pipeline should only be considering it as that: a source. This means that it is not the role of your collection pipeline to determine which data will be useful and remove all other data: delta calculation, replacing referentials, etc. is not up to the collection, but to the use case pipelines. Making the most of a datalake’s scalability in storage and letting your use cases define what is useful to them in their own pipelines, you’ll allow for more opportunities to use the underlying source down the line. One last element to make your datalake useful is to anticipate changing functional parameters. Historical depth for your transformations, functional validation for your sources, ways to trigger custom runs… If modifying these parameters has a business or data management use, they should be included in the first iteration of your pipeline developments. In our projects, they have allowed us to be extremely flexible if a pipeline needs functional change and focus on adding new use cases and sources rather than tweaking the same pipeline over and over. "},{"title":"Used through scalability of business impact","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#used-through-scalability-of-business-impact","content":"Start small, allow it to grow : identify a single use case to automate and build your foundation architecture to host it. Using the best practices presented above you’ll then be able to build on top of this robust architecture. The target for your datalake’s first use case should be for it to be high impact, low time to value. It must be the proof of value your businesses divisions need to invest more in the platform and should be an inspiration for other use cases. Once that use case is identified, along with the data it needs and a design for its transformation pipelines and exposition, you can start building it following the design principles presented above. The steps below are a summary of how that first use case is built, but are also highly reproducible to build new use cases once your foundation architecture is in place. Ingest a new source Technical validation: what are the rules that define whether this data is usable? Set up data structure validation and organize the source in an understandable manner. If the data source is highly likely to evolve over time, make sure that the collection and technical validation pipeline for this source is evolutive as well to anticipate future changes. Build a new use case Functional validation: for this use case, what are the rules that define whether this data is useful? Once again, it is best to leave functional validation to your use case pipelines, as different use cases will have different requirements for what data they want (useful) and what they can legally use (usable). Same goes for how the data is used: delta calculation, targeting referentials, cleaning, etc… these steps should be part of your use case pipeline. Build transformations with break points inside the trusted data storage zone, up to the exposition layer (refined zone / gold), where it is fully ready to serve use cases. Which of these transformations is likely to change, and can you anticipate these changes by using simple configurable parameters?  This data storage architecture makes it easy to add new sources and use cases  These first two steps will show your datalake’s versatility. It is able to ingest any type of data, from unstructured to structured, streaming or batch. It is also able to transform it efficiently to feed use cases, due to the scalability of its computing power. Build a new serving layer This final step will vary the most between use cases, as depending on your user endpoint, there might not be a unified way to serve refined data. Here you may need additional resources on top of your foundation architecture: an API management service, a database to efficiently serve structured data, a web service or container to display interfaces… That’s it, your use case is fully functional on your datalake. Using the best practices we’ve presented, the use case is robust, evolutive, scalable, understandable, and useful. Once the foundation architecture is laid out and more use cases and sources are added, an argument can be made for a core data model. This model would be built by a single transformation pipeline that unifies deduplication / delta calculation, data cleaning, GDPR compliance transformations and preparation of highly used KPIs for your use cases. The core transformation should be considered as a use case pipeline: its job is to prepare data, saving on computing resources and providing a single source of truth for other use cases. It is also a great way to ease data exploration for data savvy users in the sandbox, allowing them to be inspired through use case agnostic and clean datasets. To maintain relevance, the core data model should be updated with new data sources as they are added, and new use cases using that new source should feed on the cleaned and prepared datasets.  A Core data model centralizes all cleaning and pre-calculations, further simplifying the storage architecture  "},{"title":"Conclusion","type":1,"pageTitle":"Building a datalake - Part 1 - Usable, Useful, Used, or how to avoid dataswamp and empty shell traps","url":"blog/2022/02/07/building_datalake_part_1#conclusion","content":"Starting with the identification of a first high impact use case, you’ve been able to build a robust and evolutive datalake. Following the design principles we’ve reviewed, data and use case pipelines in your datalake are usable and useful. You are now able to show a proof of value for your datalake and grow it into a central data platform for your company. The final U we could dive deeper into is “Used” : your goal is now to maintain, grow and manage the datalake as a unified data platform, centralizing data and solutions for your business. An efficient and relevant datalake project comes with technical design challenges, some of which we’ve talked about here, but also organizational challenges. By finding solutions for technical challenges, your datalake has shown its value and it is now essential to ensure its growth. As you coordinate with business divisions, you’ll be able to draw a roadmap for the datalake and improve processes at an organizational level, using “data mesh”-like functional architectures that allow for the best flexibility in use cases, growing your platform’s relevance and enhancing data capabilities for your business. "},{"title":"Ekimetrics implements Data Mesh. Here is why, and why you should join us","type":0,"sectionRef":"#","url":"blog/2022/02/09/ekimetrics_implements_data_mesh","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Science for business Data Mesh GCP Synapse Databricks Architecture"},{"title":"Introduction","type":1,"pageTitle":"Ekimetrics implements Data Mesh. Here is why, and why you should join us","url":"blog/2022/02/09/ekimetrics_implements_data_mesh#introduction","content":"Ekimetrics’ approach to data management starts from prioritized data use-cases, vision for architecture and vision for organization. Although the vision for architecture is tailored to the culture of every customer, it is inspired by the practices we see as inspiring. This article describes one of these inspirational patterns that drive our projects’ data architectures, the Data Mesh. I must introduce Ekimetrics first, we are 320 data scientists, with people and projects in Europe, in the US and in Asia. The goal of Ekimetrics is to become the most trusted partner in data science for business. Every consultant has their preferred topics: Vertical business expertise is the most represented, which is nice because that’s where we derive use-cases from, then statistics / ml / advanced algorithms, then, equally represented, product development and data architecture and engineering. With a couple of colleagues, I lead that data architecture and engineering practice. Data Mesh is a new framework that emerged recently, it is so deep and wide that we believe that it has the potential to influence data management for a whole decade. The foundational papers, by Zhamak Dehghani (zhamakd) in 2019 are nothing short of fantastic (see articles How to Move Beyond a Monolithic Data Lake to a Distributed Data Mesh and Data Mesh Principles and Logical Architecture). They address real-life challenges, they indicate how architectural and organizational aspects can be worked together and they really bring a new energy in data management. So, while I will cherry-pick some of the data mesh ideas that we are implementing today, I strongly encourage you to read both articles thoroughly. Said differently, what I describe below is only what is closest to our mindset and to our maturity on the projects, but there are many more insights in the original papers. "},{"title":"What is data mesh?","type":1,"pageTitle":"Ekimetrics implements Data Mesh. Here is why, and why you should join us","url":"blog/2022/02/09/ekimetrics_implements_data_mesh#what-is-data-mesh","content":"Data Mesh is a nice way to organize and grow data assets that serve business purposes. Data Mesh takes a limited number of simple ideas for data management, and all the terms used below are described in detail in the two foundational articles: Ownership of data should be within the hands of the business teams, Data boundaries should be created along business boundaries for data security, data sharing, cost management, etc., these are called Data Domains, Sharing datasets inside and possibly outside the company should be simple, Focusing on data products is a good approach to create value from data, Federated governance is an approach that will scale where other cannot, There is a harmonious way for IT, Data and Business teams to collaborate around data, We see Data Mesh as a holistic way to organize data management. And since some cloud vendors have managed services that can help organize data like that, we have been working in that direction successfully with many organizations. "},{"title":"Who is data mesh for?","type":1,"pageTitle":"Ekimetrics implements Data Mesh. Here is why, and why you should join us","url":"blog/2022/02/09/ekimetrics_implements_data_mesh#who-is-data-mesh-for","content":"We did not identify customer profiles where data mesh would not apply, so we believe it is ubiquitous. Medium and large organizations in financial services, retail, utilities, luxury, etc., both the references we have and the references we learn about prove it applies to all kind of companies. Limits are on the capability to challenge existing data assets and existing data culture, and it is not always the right moment to change these. That said, it should be possible to gradually transition from a monolithic data lake to a data mesh, by slowly introducing data domains. And a consultancy firm like Ekimetrics is the right place to be to participate in these changes ! "},{"title":"What is the relationship with GCP, Synapse or Databricks?","type":1,"pageTitle":"Ekimetrics implements Data Mesh. Here is why, and why you should join us","url":"blog/2022/02/09/ekimetrics_implements_data_mesh#what-is-the-relationship-with-gcp-synapse-or-databricks","content":"We see the latest generation of platforms is indeed very aligned with what data mesh requires, and GCP BigQuery, Azure Synapse and Databricks are good candidates for Data Mesh deployments. With GCP as an example, it is easy to separate the cost of the storage in one project and the cost of the processing in another project and it’s easy to leverage the data that one part of the company has prepared into a data product that is owned by another part of the company, without copying data, which is a data mesh idea. While this has been in BigQuery for a decade now, the framework now has a name! Such solutions can now be built with GCP, Synapse and Databricks. "},{"title":"Conclusion","type":1,"pageTitle":"Ekimetrics implements Data Mesh. Here is why, and why you should join us","url":"blog/2022/02/09/ekimetrics_implements_data_mesh#conclusion","content":"If you are interested in building Data Mesh with us, please visit our website (careers page) or our page on Welcome to the Jungle. "},{"title":"Demand Forecasting - Improving Supply Chain operations in uncertain times","type":0,"sectionRef":"#","url":"blog/2022/02/22/demand_forecasting_supply","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Supply Chain Streamlit Demand Forecasting LightGBM Data Science for business"},{"title":"An important asset for Supply Chain transformation","type":1,"pageTitle":"Demand Forecasting - Improving Supply Chain operations in uncertain times","url":"blog/2022/02/22/demand_forecasting_supply#an-important-asset-for-supply-chain-transformation","content":"Demand forecasting has an impact on different levers: Stock Management: forecasting can drastically improve Inventory Management. Underproducing means losing revenue opportunities, whilst overproducing means selling your products cheaper or facing additional storage costs. Furthermore, with the return of activity after the first lockdown, suppliers are now bearing the brunt of building sites recovery, causing delays and creating supply instability. Resource allocation: defining the best number of weekly working hours is not an easy task for operational managers, and anticipation is key to achieving optimal throughput. Product strategy: demand forecasting also supports better handling of specific trends and product lifecycle. Hence, it helps warehouses anticipate and meet high demands, detect declined products and help marketing teams better understand customers’ needs. Most importantly, Demand Forecasting has not become a hot topic because of the pandemic. Nevertheless, it brought to light the need of transforming Supply Chains and adapt to unexpected events. Indeed, global warming is increasing the frequency of natural disasters, which will test Supply Chains resilience (have you heard of our AI4S offer?). "},{"title":"How to build Demand Forecasting tool","type":1,"pageTitle":"Demand Forecasting - Improving Supply Chain operations in uncertain times","url":"blog/2022/02/22/demand_forecasting_supply#how-to-build-demand-forecasting-tool","content":""},{"title":"What are we trying to solve?","type":1,"pageTitle":"Demand Forecasting - Improving Supply Chain operations in uncertain times","url":"blog/2022/02/22/demand_forecasting_supply#what-are-we-trying-to-solve","content":"Framing the problem is key to ensuring Data Scientists go in the right direction. When discussing with Supply Chain managers, we understood they wanted to reduce their costs. Thus, improving resource allocation was the best lever to achieve their need. Clearly stating the business need allowed us to understand the problem and impacted the solution implementation.  "},{"title":"Build and assess model","type":1,"pageTitle":"Demand Forecasting - Improving Supply Chain operations in uncertain times","url":"blog/2022/02/22/demand_forecasting_supply#build-and-assess-model","content":"Because of the high number of products and their associated nomenclature, we used a decision tree algorithm (LightGBM). The business required a reliable mid-term forecasting tool within a short time lap and with limited team size, justifying the choice of a well-known and high-performance algorithm. Our solution is a 3-week forecasting tool with daily updates for all referenced products. The ML pipeline we have built for this project is similar to many existing ones. Therefore, we will focus on how the business problem framed our solution. Still, this project was an opportunity for us to use Kedro, which enabled Data Science teams to set up their ML data pipelines. Kedro had the advantage of visualizing your pipeline and structuring our code to ensure maintainability and reproducibility.  Modelling target# We want to optimize warehouse working hours to ensure clients satisfaction by delivering stores on time. What requires the most operational effort? Our client uses single order picking methods - meaning that pickers work on one order at a time. Thus, it is more time-consuming for a picker to prepare two orders of the same product rather than picking two times the product for the same order. Consequently, we focused on predicting the number of orders rather than the quantity ordered. NB: depending on how your supply chain operates, the modelling output would differ. Modelling granularity# Our client had a complex product hierarchy, meaning products can be aggregated at different levels. Demand forecasting at a product level gives higher flexibility when used on various business use cases, albeit not being the optimal solution for each one. Therefore, we aggregated ordered products at a higher granularity, to find the best balance between modelling accuracy and business need. Working at a product level when having more than 20,000 products can be painful: it means working with sparse time series (which isn’t trivial when using decision trees) manufacturing companies often deal with products turnover (because products are frequently improved), meaning you may lose the thread of which product is getting improved. Therefore, to optimize resource allocation, it was relevant to build a forecasting tool at a product category level, to combine similar products and avoid dealing with product’s turnover. Analyzing sparsity at different granularities also helped us define the best modelling level.  Distribution of products' sparsity (e.g. percentage of zeroes in orders). It is clear that most products have more than 90% of zeroes.  Important learnings here were: Sparse time series are hard to predictIt is best to go for a solution where the unit (time x product x localization) of forecasting matches the unit of decision making  We see how the coronavirus outbreak impacted the activity of our client during the first containment. Predicting this period is pretentious, but how can it help us reduce uncertainty in the future?  Modelling loss function# Modelling errors assess algorithms performance and help choose the model we will industrialize to better impact operations. However, when deploying a solution, we want to measure an error that reflects the current problem. Demand forecasting is not exclusively about being accurate on future demands but also about improving operations. Therefore, customizing errors metrics is a key part of machine learning development, allowing us to define the right balance between product demand (model accuracy) and product average preparation time. (focus on products with high preparation time). We implemented the Weighted Root Mean Squared Scaled Error, using product average revenues in the last 6 months and product average preparation time.  Product B weekly preparation time is 400 min vs 200 min for Product A. Thus, higher accuracy on Product B is needed to reflect the operational needs.  "},{"title":"Evaluate business outcome","type":1,"pageTitle":"Demand Forecasting - Improving Supply Chain operations in uncertain times","url":"blog/2022/02/22/demand_forecasting_supply#evaluate-business-outcome","content":"Because predictions are not always (never) linked to business outcomes, it is important to differentiate outputs (what are the predictions?) from outcomes (how will it impact the business?). This part was not implemented during the project, but we will briefly explain the methodology to give you a flavour on how it could be done. Model accuracy is a technical metric, so to quantify our ML model impact on operations we also need to estimate the predicted number of working hours. Comparing the number of predicted working hours with the realized working hours would allow measuring how much the algorithm is reducing costs. "},{"title":"Create a sustainable solution","type":1,"pageTitle":"Demand Forecasting - Improving Supply Chain operations in uncertain times","url":"blog/2022/02/22/demand_forecasting_supply#create-a-sustainable-solution","content":""},{"title":"Implement a web app","type":1,"pageTitle":"Demand Forecasting - Improving Supply Chain operations in uncertain times","url":"blog/2022/02/22/demand_forecasting_supply#implement-a-web-app","content":"A core part of our solution was to implement an easy-to-use application for operations managers. It helped them access predictions in real-time, assess model past performance and define the optimal working hours needed. We used Streamlit for its ease of use and ability to create fast and intuitive applications whenever we are short on time. Consequently, we created a usable solution by communicating predictions, demand, and past errors at different granularities. "},{"title":"Add a feedback loop","type":1,"pageTitle":"Demand Forecasting - Improving Supply Chain operations in uncertain times","url":"blog/2022/02/22/demand_forecasting_supply#add-a-feedback-loop","content":"Finally, we created a feedback loop to enable the team to maintain, improve and sustain the solution. This concept is well explained in Prediction Machines: The Simple Economics of Artificial Intelligence, a book about what AI means from an economist perspective. They introduce a great concept they have named the Anatomy of a Task.  Predictions mainly impact people’s judgement and decisions taken for action. It implies that algorithms are rather helpful for decision-makers than make the actual choice. In our situation, the predictions enable operational managers to take action on the number of pickers needed in the coming weeks. Improving modelling should help these managers be more accurate in their decision process. Giving Data Science teams feedback on how modelling affected outcomes is the added value. Consequently, we decided to create a clear feedback process with the operational managers. We made sure we could improve our forecasting model in a business manner rather than a statistical one. Our model not being perfect, the operational team’s feedback on how our predictions are impacting their daily work will help us improve our algorithms and create a sustainable solution. "},{"title":"Concluding and food for thought","type":1,"pageTitle":"Demand Forecasting - Improving Supply Chain operations in uncertain times","url":"blog/2022/02/22/demand_forecasting_supply#concluding-and-food-for-thought","content":"New challenges will arise, and data will help supply chains tackle them. Creating a data-driven culture is key to useful and sustainable solutions. Creating state-of-the-art models is great, but a successful data science transformation is about creating impactful projects and delivering value throughout. Thanks to this project, we learnt that: Demand Forecasting is a great entry to improve Supply Chain operations, but the impact will be limited if not embedded in the full Supply Chain environment. Demand forecasting is not about predicting the future, but about how data helps improve communication between teams. "},{"title":"Newsletter for February 2022","type":0,"sectionRef":"#","url":"blog/2022/02/28/newsletter_Feb-2022","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Engineering App and Web Development Data Science for business DeepMind Fashion Uber AirFlow Apache Arrow FlightSQL Low code"},{"title":"Data Science","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#data-science","content":""},{"title":"DeepMind presents AlphaCode, your next worst enemy in coding test","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#deepmind-presents-alphacode-your-next-worst-enemy-in-coding-test","content":"Google’s AI subsidiary keeps a high publishing pace by presenting a new powerful programming tool. AlphaCode is an algorithm able to understand a required task then generate a relevant and usable code. Beyond being a proof that AI-generated programs are not so far away, their methodology to build the model is particularly interesting. To make it simple, they leveraged a big amount of data from GitHub to pre-train a model able to understand what code is. This pre-trained model is then fine-tuned using CodeContests problems and solutions to precisely show what is a problem and how to solve it with code. Do not hesitate to check this out! Competitive programming with AlphaCode | DeepMind "},{"title":"Data starts to be a VIP for fashion weeks","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#data-starts-to-be-a-vip-for-fashion-weeks","content":"Fashion, and any creative industries, often neglected data science as their core value is delivered through artistic creation. However, with the rise of Deep-Learning, we are observing a progressive adoption of analytics in some fields, starting by fashion. This link here under shows some types of analytics that some specific companies can extract from Fashion weeks. Even if it’s still relatively simple, several companies start to be specialized in the era of FashionTech. If you’re interested in the topic: go check Heuritech and EvaEngines! What were the key trends during Haute Couture and Men's Fashion Weeks based on data? "},{"title":"Machine Learning","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#machine-learning","content":""},{"title":"Uber showcases its new technology for predicting deliveries, commands, times and routes","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#uber-showcases-its-new-technology-for-predicting-deliveries-commands-times-and-routes","content":"The core business of Uber relies on delivering its services in the shortest period possible. The key ingredient in such task is being able to forecast accurately orders’ preparation, availabilities, routes… Usually Uber used Gradient Boosted Trees with advanced improvements making it deeper and more accurate. The drawback of such methodology is that you cannot indefinitely increase the dataset and the model sizes as it becomes technically impossible to use. Uber decided to switch to Deep-Learning as an answer to such problems and delivered a forecasting algorithm relying on Transformers beating their previous ones. While the academic background of such model can be heavy, it still clearly highlights some key components of Machine Learning Projects and should be considered as a whole tutorial! DeepETA: How Uber Predicts Arrival Times Using Deep Learning "},{"title":"Nuclear fusion with algorithms, DeepMind’s breakthrough","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#nuclear-fusion-with-algorithms-deepminds-breakthrough","content":"This is one of the hottest news being recently released in the field of Machine Learning as DeepMind (sh*t again them) published an article discussing the use of ML within the nuclear industry. Using Reinforcement Learning, the team demonstrated that RL can improve plasma control meaning a big step toward nuclear fusion. Following their previous paper about AlphaFold in 2021, DeepMind keeps breaking sciences’ limits! Accelerating fusion science through learned plasma control | DeepMind "},{"title":"Data Engineering & Architecture","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#data-engineering--architecture","content":""},{"title":"AirFlow starts being cut in pieces, what’s left?","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#airflow-starts-being-cut-in-pieces-whats-left","content":"You may have heard about AirFlow, maybe you worked with it or experienced some features. To make it simple AirFlow is a workflow manager programmed in Python and available thanks to Apache (and AirBnB originally). Now that the Data Engineering field is booming, many players are coming on the market tearing in parts the AirFlow business. AirBytes, Census or Arize are among the players in this field. While AirFlow is practical for its non-SQL functioning, there will be some upcoming consolidation in the field as newcomers keep cutting the cake in littler pieces. The Unbundling of Airflow (fal.ai) "},{"title":"Flight SQL, a new feature in Apache Arrow","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#flight-sql-a-new-feature-in-apache-arrow","content":"This article discusses Flight SQL, a new client-server protocol developed by the Apache Arrow community for interacting with SQL databases that makes use of the Arrow in-memory columnar format and the Flight RPC framework. Introducing Apache Arrow Flight SQL: Accelerating Database Access | Apache Arrow "},{"title":"App and Web Development","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#app-and-web-development","content":""},{"title":"Low code vs Traditional development, a guide to help you better understand the stakes","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#low-code-vs-traditional-development-a-guide-to-help-you-better-understand-the-stakes","content":"You always dreamed to deeply understand the difference between Low Code and Traditional development? The following article details with very clear examples and exhaustive information what are the stakes! Which Method to Use – Low Code vs Traditional Development? "},{"title":"The 2022 guide for devs","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#the-2022-guide-for-devs","content":"Here under is a quick catchup about the best practices for devs for the upcoming year. It may give you some ideas on some tools to use in your mission. If you test some of them do not hesitate to share it to the Eki Community so that we can thrive together! 5 Dev Tools To Look Out For In 2022 | by Carlo Morrone | Better Programming "},{"title":"Conclusion","type":1,"pageTitle":"Newsletter for February 2022","url":"blog/2022/02/28/newsletter_Feb-2022#conclusion","content":"A promising start of 2022 that set the standards high for the year! If one article has a particular interest for you, we invite you to discuss it with your colleagues or reach out to the Innovation Community! "},{"title":"Newsletter for March 2022","type":0,"sectionRef":"#","url":"blog/2022/03/30/newsletter_March-2022","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Engineering App and Web Development Data Science for business"},{"title":"Data Science","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#data-science","content":""},{"title":"AI for executives’ decisions: do we reach a limit?","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#ai-for-executives-decisions-do-we-reach-a-limit","content":" The Harvard Business Review published an article where it discusses the use of AI for strategic high-level decisions. While we witness a spread of AI in many operational business areas, it is still not considered as a usable tool for C-executives. The article pictures the current environment to eventually give some key elements to deploy such technologies at this level of management. Deploying ML or even simple data science solutions at this level of responsibility requires us to do a deep check of the possible consequences as a tiny mistake can turn into a major negative outcome. However, while presenting a difficult market to reach for data science, we can also interpret it as an opportunity for data science companies. Overcoming the C-Suite’s Distrust of AI (hbr.org) "},{"title":"Guide through time series modeling","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#guide-through-time-series-modeling","content":" Modeling time series variables is a core competence for any Data Scientist. This exhaustive though pedagogic guide helps you better understand some basic principles behind time-series models making it a must-read for juniors willing to strengthen their knowledge or experts who would like to update their knowledge of this field. The article is made by Neptune, a ML library, so it showcases codes with it. It sill gives a good overview and you can reimplement it in your notebook easily with other libraries if you feel uncomfortable with Neptune. How to Select a Model For Your Time Series Prediction Task [Guide] - neptune.ai "},{"title":"Machine Learning","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#machine-learning","content":""},{"title":"Shifting to real-time machine learning","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#shifting-to-real-time-machine-learning","content":" While ML algorithms provide powerful insights, they need to become “alive”. This need for real-time is explained by two reasons: a need to deliver results quickly and to learn continuously from new data. In theory it looks easy, but deploying the right architecture is far more complicated and many companies fail at tackling this challenge. This post details the global framework to adopt, key challenges to keep in mind and the requirements to succeed at it. Real-time machine learning: challenges and solutions (huyenchip.com) "},{"title":"Perceiver IO, the next gen of large and multi -task models has arrived","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#perceiver-io-the-next-gen-of-large-and-multi--task-models-has-arrived","content":" Transformers were introduced in 2017 and created many derivatives (Longformers, Reformers…) while taking the lead in many applications’ fields (NLP, CV…). The Perceiver is like an Optimus Prime for Transformers (or a Megatron based on which side you are). While being technical, the key takeaway of this paper is the level of generality that we get for every domain: Perceivers perform well on texts, sounds, images on a wide variety of tasks with the same underlying mechanism. In addition, it is able to scale well on high dimensional data as it bypasses the quadratic comuting time required by a Transformer. Even though the widespread of Transformers makes it dominant in the field of ML, Perceivers should be added to your competences portfolio as they might be the future for many tasks. Perceiver IO: A general architecture for structure inputs &amp; outputs "},{"title":"Data Engineering & Architecture","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#data-engineering--architecture","content":""},{"title":"ML Monitoring: The Promotheus fails, why? (what’s up Ridley?)","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#ml-monitoring-the-promotheus-fails-why-whats-up-ridley","content":" This article presents the task of ML monitoring while highlighting key liabilities from Prometheus, an open-source software monitoring tool. The author implements a simple example and details where Prometheus fails particularly (query latency, sliding windows…). This post is one among four dealing with ML monitoring and it is worth the reading if you want to deepen the problem! The Modern ML Monitoring Mess: Failure Modes in Extending Prometheus (3/4) | Shreya Shankar (shreya-shankar.com) "},{"title":"App and Web Development","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#app-and-web-development","content":""},{"title":"JavaScript 2021 recap!","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#javascript-2021-recap","content":" The 2021 report on the state of JavaScript is now published. From the latest trends, the rising popularity of libraries to most-have tools, this survey gives you a good overview on what is happening in the JavaScript users’ community. One of the many takeaway is the change of perception about the language in itself. “The percentage of people reporting that &quot;JS is moving too fast&quot; is down from 59% to 38%”, showing that JS is now reaching a mature stage. The State of JS 2021: Features "},{"title":"Special Section: Quantitative Marketing","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#special-section-quantitative-marketing","content":""},{"title":"TV elasticity: a huge US surveys highlights overinvesting tendencies","type":1,"pageTitle":"Newsletter for March 2022","url":"blog/2022/03/30/newsletter_March-2022#tv-elasticity-a-huge-us-surveys-highlights-overinvesting-tendencies","content":" From now on, we will have a special section where some hot topics that we like, but cannot be categorized in previous sections, will be put. To start it, we will discuss one of the expertise areas of Ekimetrics: Quantitative Marketing. This article from July 2021 estimates the ROI of TV advertising for 288 consumer goods across a large section of products and sectors in the US. The key takeaway is that TV is an over-invested media with saturated returns. The results from this paper do not align with the existent literature promoting a higher return on investment for TV advertising. The writers precise that traditional media market suffers from agencies issues as many professionals prefer maintaining their statement on the TV effectiveness rather than experimenting new marketing combinations. TV Advertising Effectiveness and Profitability: Generalizable Results From 288 Brands - Shapiro - 2021 - Econometrica - Wiley Online Library "},{"title":"Power BI - Improve your development process by using multiple environments","type":0,"sectionRef":"#","url":"blog/2022/03/16/powerbi_multiple_environments","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Power BI Environments Data Science for business"},{"title":"In Power BI Desktop, make your data sources dynamic","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#in-power-bi-desktop-make-your-data-sources-dynamic","content":""},{"title":"Step 0 - (Baseline) Have a Power BI report connected to hard-coded data sources","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#step-0---baseline-have-a-power-bi-report-connected-to-hard-coded-data-sources","content":"As explained in the disclaimer, you should already have a report connected to data sources. Check out this documentation for more information about data sources in Power BI. A typical report would have several tables in the pane Fields:  As a little foreshadowing and making sure we are on the same page, open the Power Query editor (by clicking Home (Top Ribbon) → Transform Data → Transform Data; then Advanced Editor) for one of your tables, and notice that all your data sourcing informations are hard-coded.   In the last picture, we have the following information hard-coded: The server is: dev-sql-01.database.windows.net The database is: dev-db-01 The schema is: dev-rfd-crm This hard-coded information is problematic as when we publish the report from one workspace to the next, the datasource will not change: we will always get our information from “dev”. What we need are parameters that change automatically as we change workspaces. "},{"title":"Step 1- Creating Parameters inside your reports","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#step-1--creating-parameters-inside-your-reports","content":"In the Power Query Editor, click the Manage Parameters (top ribbon under the Home tab) → New Parameter. (Or you can click Manage Parameters and select the New button on the top to create a parameter). You can fill in this form and select OK to create a new parameter.  You should create parameters for every variable that needs to change as you change workspaces. In my case, I needed to create 5 parameters: One server parameter One database parameter Two schema parameters One parameter called “env” (with simply the options ‘dev’, ‘ppd’ and ‘prd')  "},{"title":"Step 2- Using the ‘Advanced Editor’ to use the parameters when connecting to your data source","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#step-2--using-the-advanced-editor-to-use-the-parameters-when-connecting-to-your-data-source","content":"Now that you have created your parameters, use the following syntax to refer to your parameters when connecting to your datasource. #&quot;ParameterName&quot; Copy Here is what the difference looks like for me. When the data sources variables are hard coded:  When the data sources variables use parameters:  You made it through Part 1! You now know how to make your data sources dynamic inside your reports, you implemented it and pushed your report to your workspace. And know you ask yourself: “But now, how can I make multiple workspaces and how do I change my report parameters automatically as I publish my report between workspaces?” Check out Part 2 for the answer ! "},{"title":"Part 2: In the Power BI Web Portal, create a deployment pipeline and assign parameters to each workspace","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#part-2-in-the-power-bi-web-portal-create-a-deployment-pipeline-and-assign-parameters-to-each-workspace","content":"In order to use parameters, we will leverage Power BI’s Deployment Pipeline feature. I encourage you to read Microsoft’s official documentation here if you encounter any issues when working with Deployment pipelines as it is fairly comprehensive. "},{"title":"Step 0 - (Baseline) Have your Power BI report already published to a Workspace","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#step-0---baseline-have-your-power-bi-report-already-published-to-a-workspace","content":"Check out this video if you haven’t already published your report to a Power BI Workspace (don’t hesitate to watch at speed x1.75 😉 ) . "},{"title":"Step 1- Creating a Deployment Pipeline from your Workspace","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#step-1--creating-a-deployment-pipeline-from-your-workspace","content":" "},{"title":"Step 2- Deploy your report from the Power BI Development Workspace to the Power BI Test Workspace","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#step-2--deploy-your-report-from-the-power-bi-development-workspace-to-the-power-bi-test-workspace","content":" "},{"title":"Step 3- Modify the Deployment Parameters to use the correct parameters","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#step-3--modify-the-deployment-parameters-to-use-the-correct-parameters","content":"In the pipeline stage you want to create a dataset rule for, select Deployment settings. From the Deployment settings pane, select the dataset you want to create a rule for. Select Parameter rules, expand the list, and then select Add rule. Select a parameter from the list of parameters; the current value is shown. Edit the value to the value you want to take effect after each deployment.    note Notice on the bottom of the last screenshot the following mention: “Rules will be applied when you deploy to this stage”. Thus: once you have set the deployment settings for your report, you need to redeploy your report immediately to this workspace because the rules haven’t been applied yet 😅 . "},{"title":"Conclusion","type":1,"pageTitle":"Power BI - Improve your development process by using multiple environments","url":"blog/2022/03/16/powerbi_multiple_environments#conclusion","content":"So this is how to use different environments in Power BI in a nutshell. We went from one workspace with a hard-coded data source, to three separate workspaces where when a report is pushed from one workspace to an other, its data source changes automatically! Definitely a lot of moving pieces here, but understanding theses concepts will make your workflow easier and less error-prone in the long-run ! I hope this information can help you on your Power BI journey! "},{"title":"Newsletter for April 2022","type":0,"sectionRef":"#","url":"blog/2022/05/02/newsletter_April-2022","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Engineering App and Web Development Data Science for business"},{"title":"Data Science","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#data-science","content":""},{"title":"How is Warner Music using AI to turn sound into strategic assets?","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#how-is-warner-music-using-ai-to-turn-sound-into-strategic-assets","content":" Industries relying on creative contents are now moving toward a data centric strategy with dedicated teams and departments. We wanted to share with you the testimony of Kobi Abayomi, vice president of Data Science at Warner Music. The resource is available both as a podcast or as a transcript. The discussion covers broad topics ranging from what’s going on in the industry, what makes a good data science team or what are his views for the future of AI. Turning Sound Into Information: Warner Music Group’s Kobi Abayomi (mit.edu) "},{"title":"Machine Learning","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#machine-learning","content":""},{"title":"Showcasing and sharing your ML model in the easiest way with Gradio","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#showcasing-and-sharing-your-ml-model-in-the-easiest-way-with-gradio","content":" Gradio is an open-source framework enabling ML Engineer to quickly share their models via a web interface. The cool feature of Gradio is how simple it is while leaving some rooms for changes and modifications. Gradio can work with any kind of models and data structures (Images, Text, Tabular…). However, Gradio is made to share pre-trained models meaning that it cannot be used as an Active Learning asset where data would be provided to the model iteratively to its training. When having to share quick demos without the time or the need to have bespoke interface, Gradio is a no brainer. Gradio "},{"title":"Learning to prompt for Continual Learning","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#learning-to-prompt-for-continual-learning","content":" Even though Pathways Language Models (PaLM) is one of the hottest releases of April 2022, our attention has been focused on another Google Research paper discussing the best way to perform Continual Learning. Continual Learning means to train a single model on various type of tasks iteratively. When being trained at step t, the model does not have access to previous data. One of the main challenge posed by such concept is how to maintain knowledge from past data into the model, avoiding catastrophic forgetting. In this paper, researchers propose an approach by leveraging prompt engineering. Using prompt Is very common in NLP as it tends to better fine-tune pretrained algorithms. The main idea of this paper is to tackle continual learning not as a model weights’ shift but rather as a memory space representing the type of task to be trained on. Learning to Prompt for Continual Learning "},{"title":"Data Engineering & Architecture","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#data-engineering--architecture","content":""},{"title":"Putting ElasticSearch into production","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#putting-elasticsearch-into-production","content":" ElasticSearch is a famous distributed search engine build on Apache Lucene. It has now been pretty much the standard for complex use cases where you have to look for data in a large volume and complex database (cf: How Netflix Content Engineering makes a federated graph searchable). However, when it comes to put it into production, several challenges and pitfalls can occur. Hence, this blog post is a user sharing story with some best practices to adopt and bad habits to avoid. In depth guide to running Elasticsearch in production | by Mattis Haase | Medium "},{"title":"App and Web Development","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#app-and-web-development","content":""},{"title":"How to build a JavaScript Bundler from scratch","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#how-to-build-a-javascript-bundler-from-scratch","content":" A JavaScript Bundler is a tool combining code files in a unique file making it ready to use and deploy. It keeps tracks of every dependency that you might have into your repository. Those are stored into a graph guaranteeing that all your files are updated accordingly. Even if it starts to be common to use a bundler, nothing worth more than building one by ourselves. Following post shows how to build a bundler by yourself while keeping it relatively simple. Building a JavaScript Bundler | Christoph Nakazawa (cpojer.net) "},{"title":"Special Section: Modeling","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#special-section-modeling","content":""},{"title":"Dealing with logs and zeros in regression models","type":1,"pageTitle":"Newsletter for April 2022","url":"blog/2022/05/02/newsletter_April-2022#dealing-with-logs-and-zeros-in-regression-models","content":" When having data generated by an exponential process, we tend to use log as a function to better fit liner model. However, problems arise when a portion of your data points are equal to zero. Common fix used is adding a constant (often 1) to your data to remove the problem. In this paper, researchers propose a novel family of estimators called iOLS (iterated Ordinary Least Squares). It presents a computational advantage while performing in the best way your fit. Dealing with Logs and Zeros in Regression Models (arxiv.org) "},{"title":"Bayesian inference for better predictions of magazine sales","type":0,"sectionRef":"#","url":"blog/2022/06/14/bayesian_inference","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Science for business Bayesian Inference Sales Prediction AthenIA Digital Transformation"},{"title":"Mobilis in Mobile (Jules Verne)","type":1,"pageTitle":"Bayesian inference for better predictions of magazine sales","url":"blog/2022/06/14/bayesian_inference#mobilis-in-mobile-jules-verne","content":" When a publisher sells a magazine issue, they need to estimate the total sales for accounting, financial and management purposes. For example, in accounting, the total sales are needed to calculate the estimated revenue and profit, which may later inform decision-makers to adjust the production and distribution of the next issues. Traditionally, the predictions are based on the domain expertise of the people in charge. However, with data becoming more and more available, we can leverage recent advances in machine learning to improve our predictions. Fig. 1 shows the cumulative sales of a magazine (the data have been anonymized for confidential purposes). The objective is to use the observed data, including the sales curves of all historical issues and the beginning part of the current issue’s curve, to predict the final sales.  Fig. 1: Example of magazine sales curves  As we can see from the figure, there is a high variability in the sales curves. Averaging the sales of historical issues does not provide a good prediction of the current issue. Naively applying a curve fitting model does not seem like a feasible option either. Furthermore, we do not have that much data to train a data-hungry model such as deep neural network. "},{"title":"Context and domain expertise are crucial!","type":1,"pageTitle":"Bayesian inference for better predictions of magazine sales","url":"blog/2022/06/14/bayesian_inference#context-and-domain-expertise-are-crucial","content":"In the real world, the sales of a magazine issue depends on several factors, such as the content and the cover of the issue (e.g. the better the content and the covers are, the more sales), the season (e.g. some magazine may sell better in summer), the holidays during the sale period (e.g. people may buy a magazine at the train station when they go on vacations). A good prediction model needs to consider those factors to be able to make precise forecasts. There are two big questions: which factors to take into account and how to encode them? To answer the first question, we need the insights of domain experts. They have been working in the industry for many years. More than anyone else, they understand their magazines, the market and customer behaviour. That knowledge is invaluable! For the second question, there is a mathematical framework that allows us to incorporate the prior knowledge (provided by the domain experts and extracted from the data of historical issues) and the observations (the daily reported sales of the current issue) to make a better prediction: Bayesian inference. "},{"title":"Bayesian inference as a mathematical tool to combine the prior expectation and the new observed evidence","type":1,"pageTitle":"Bayesian inference for better predictions of magazine sales","url":"blog/2022/06/14/bayesian_inference#bayesian-inference-as-a-mathematical-tool-to-combine-the-prior-expectation-and-the-new-observed-evidence","content":" Fig. 2: Bayesian inference  With the insights provided by domain experts and extracted from the historical data, we can estimate an expectation of the sales of the current issue, prior to its sale period. However, even though the experts have a deep understanding of the product as well as the market, and the historical data may show some characteristics of the sales curves, there is always a grey zone of uncertainty and error. The market evolves; customers change their buying habits; some internal factors were poorly estimated; some external factors were not considered; some unexpected events happen during the sale period, etc. All those factors make the prediction which is purely based on historical experiences less reliable. After the sale of the current issue has taken place, we can cumulate the recorded sales to get the beginning part of its sales curve. The more time passes, the more observations are built up. Those observations provide the latest information of the reality and indicate how the real sales actually evolve. However, the observations themselves contain noise. For example, a point of sale may forget to record a sale or record it a few days late, preventing us from using purely the observations to make a precise prediction. Since we do not have enough subjective data, we can leverage Bayesian inference to fold in the prior knowledge that we have already had (thanks to the inputs of the experts and the historical sales) to draw stronger and sharper predictions. Mathematically, we model the sales by a random variable X that follows a distribution p(X|θ) parameterised by a set of parameters θ: X ~ p(X|θ). The prediction problem is reduced to finding the “correct” θ. Given the observations Xobs (the sales records at the beginning of the sale period of the current issue in our case), frequentist approaches such as the Maximum Likelihood Estimation (MLE) method find an optimal θ that best fits Xobs: θMLE = argmaxθ(p(Xobs|θ)), then plug it in to make the sales prediction: XpredMLE = argmaxX(p(X|θMLE)). However, Xobs usually contain noise, results in a bad estimation of θ. With Bayesian inference, we can integrate our prior knowledge to get better predictions. Specifically, from the sales of historical issues and the inputs of the experts, we have an idea of how θ should be, modelled as the prior distribution p(θ). Incorporating it with the information provided by the observations Xobs, we get the posterior distribution p(θ|Xobs), which is proportional to the prior p(θ) and the likelihood p(Xobs|θ) (see Fig. 2): p(θ|Xobs) ∝ p(Xobs|θ)*p(θ)  In Bayesian inference, rather than predicting a single value of the sales, we predict its distribution, called the posterior predictive distribution: p(XpredBayesian|Xobs) = ∫p(XpredBayesian|θ)*p(θ|Xobs)dθ  By doing so, we take into account the uncertainty in the prior, as well as the fact that the observations are noisy. A pipeline—implemented in Spark and PyMC3—of the whole process, is depicted in Fig. 3. At the beginning, based on an analysis of the the characteristics of the issues and the market, the historical sales and the inputs of the experts, we estimate the prior p(θ). During the sale period, this estimation will be regularly revised, updated and adjusted in light of the observations Xobs to get the posterior p(θ|Xobs), which is used to calculate the posterior predictive p(XθpredBayesian|Xobs). The posterior predictive is then formatted and sent to the decision-makers.  Fig. 3: Bayesian sales prediction pipeline  "},{"title":"Results","type":1,"pageTitle":"Bayesian inference for better predictions of magazine sales","url":"blog/2022/06/14/bayesian_inference#results","content":"Fig. 4 shows an example of the prediction at day 30 of the sale period. We compare the performance of the Bayesian model with that of a frequentist baseline (in this example, is a logarithmic curve fitting model). Both the models are fed with the sales curves of historical issues and the sales records of the first 30 days of the current issue’s sale. Additionally, the Bayesian model has the characteristics of the issues (cover, number of holidays during the sale period, etc.) as well as the opinions of the experts on the similarity between the current issue and some issues in the past. The objective is to predict the sales of the rest 30 days. We can observe that the prediction of the frequentist model is too optimistic because of the (false) positive signals during the first half of the sale period. By contrast, the 95% HDI (highest density interval) of the Bayesian prediction well covers the true sales. This is thanks to the prior insights that the Bayesian model has been given.  Fig. 4: Example of the sales predictions of a magazine at day 30  "},{"title":"Conclusion","type":1,"pageTitle":"Bayesian inference for better predictions of magazine sales","url":"blog/2022/06/14/bayesian_inference#conclusion","content":"We have walked through an example of how to make better predictions of magazine sales. Data and data science have revolutionized many domains. However, to make the most out of digital assets, a hand-in-hand collaboration between data scientists and business experts is much needed. Since 2018, Ekimetrics has been accompanying press publishers in their digital transformation journey. Our fully-industrialized AI-powered solution AthenIA has been providing supply optimization, sales prediction and reporting services that are precise and customized for each client. With the experience of managing more than 90 magazines and 20k active points of sale in France, we are proud to be a reliable partner of press publishers toward sustainable and profitable press. "},{"title":"Deploying your Data Science app to the Cloud","type":0,"sectionRef":"#","url":"blog/2022/04/21/docker","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Engineering App and Web Development Data Science for business"},{"title":"Data Science storytelling with Streamlit","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#data-science-storytelling-with-streamlit","content":"Over the past year, Streamlit has become one of our favourite tools to share data insights through a web app. It's a low-code, data science oriented Python framework that makes your scripts shine in a web app. You can use it to quickly build beautiful visualizations but as data is even better when shared, we would like to help you make it easily accessible to your teammates and colleagues. We will deploy one of the apps in the Streamlit Gallery : NYC Uber Ridesharing Data. "},{"title":"Running the app","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#running-the-app","content":"Let's keep it simple and follow these steps to get the code and use venv to create a virtual environment with the following steps: &gt; git clone git@github.com:streamlit/demo-uber-nyc-pickups.git &gt; cd demo-uber-nyc-pickups &gt; py -3.8 -m venv .venv &gt; .venv/scripts/activate &gt; pip install -r requirements.txt Copy info We are showcasing venv here as it is included in Python itself. We invite you to explore other tools such as Poetry, pipenv or conda depending on your needs and preferences and to always make use of them, especially when collaborating on multiple projects as it will save you from conflicts in your installations. Now, you should be able to run it locally: streamlit run index.py Copy  "},{"title":"Docker, the cloudy whale","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#docker-the-cloudy-whale","content":"Docker is one of the most popular containerization tools and is widely used in the context of cloud-based solutions. In this article, we will review how to set up your environment so that you can leverage this tool and level up your development workflow! The advantage we will explore in this article is the ability to package your environment with all its dependencies and be 99.99% sure that it will be able to run on your target environment. &quot;If it runs on Docker, it will run everywhere.&quot; - one hopeful DataOps You can safely share your app and be sure that it will run in the same conditions as you worked on and ensure reproducibility of your results. "},{"title":"Creating your container","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#creating-your-container","content":"Write Dockerfile# The Dockerfile is the recipe of your container. It contains all the instructions to produce &amp; reproduce it identically everywhere it will be run: on another laptop, maybe with a different OS, in the cloud. Some quick definitions: The Docker image is the result of the build of the Dockerfile.The Docker container is the result of running the image.You can pull and push images to a container registry.  Choosing the base image# It always starts with a FROM instruction that defines what is the base image which can be either: a linux-based OS: ubuntu, debian, centos...an OS with preinstalled tools: python-3.8, mongo-5.0.7, node-17.9.0a ready-to-use image of a project like the Docker Tutorial. Choosing your base image is important as it can help you reduce the amount of steps to get ready. If you chose Ubuntu as your base image for a Python project, you will need to write the instructions to install the Python version you want to install and your image will also come with many other packages that are preinstalled in the OS that you may not need for your projet. This is why Python images are available. It comes with Python already installed and some images (like slim images) also remove packages that aren't necessary for Python development. This strongly impacts the size of your image as shown here: These are official Docker images and depending on which version you pull, you can see the size difference is quite noticeable. python 3.8 is almost 1GB.python 3.8-slim reduces it by 86%.python 3.8-alpine even goes down to &lt;50MB. Alpine is not recommended for Python development as standard PyPi wheels don't work on Alpine and you have to compile them for every package, which can lead to additional research to properly achieve it. In some instances, compiling can also be very lengthy, like matplotlib that takes more than 25min to build:  Nobody ain't got time for that. "},{"title":"Efficient Build Instructions","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#efficient-build-instructions","content":"So let's build our image using a small, ready-to-python image like python:3.8-slim. We first need to install all our app requirements. So we add our requirements.txt file and install just like we would do locally : FROM python:3.8-slim # We place ourself in a dedicated folder WORKDIR /app # Installing requirements ADD ./requirements.txt /app/requirements.txt RUN pip3 install -r requirements.txt --no-cache-dir Copy Adding the file alone and installing the requirements right after allows you to create a layer that will be cached and you will not have to reuse this step in a future build. It is generally a good practice to use the cache when in development mode as you don't want to spend 10 minutes at every build of your requirements (you know it can take a while). The way Docker cache works is that by default it will reuse the highest unmodified layers.  Here are the commands that generate a layer and which you want to be able to cache and/or gather in a single instruction. FROM creates a layer from the base image.COPY adds files from your Docker client’s current directory.RUN builds your application with make.CMD specifies what command to run within the container. Source Then, we add the different required files with the ADD or COPY instructions. In our example, we need the python main code, the data and one image. ADD streamlit_app.py uber-raw-data-sep14.csv.gz uber_demo.png /app/ Copy To access the app, we need to open port 8051 on the container. Otherwise, even if the app is running, it will not be accessible from outside the container by a browser. Instruction is : EXPOSE 8051 Copy The last instruction is the RUN, which tells Docker which command needs to be run at the start of the container. For us, it means starting the Streamlit app with the command streamlit run /index.py, which in Docker syntax is: CMD [&quot;streamlit&quot;, &quot;run&quot; ,&quot;/index.py&quot;] Copy The final Dockerfile should look like this: Dockerfile FROM python:3.8-slim WORKDIR /app EXPOSE 8501 ADD requirements.txt /app/requirements.txt RUN pip install -r requirements.txt ADD streamlit_app.py uber-raw-data-sep14.csv.gz uber_demo.png /app/ CMD [&quot;streamlit&quot;,&quot;run&quot;,&quot;streamlit_app.py&quot;] Copy Run your Streamlit container# To build your image, just run the command: docker build --tag ekilab-demo-container . Copy Once built, you can run the container with the command: docker run -dp 8501:8501 ekilab-demo-container Copy Your app should now be running and available at http://localhost:8501. Live Reload# The issue with the current setup is that if you make a change to your app, you will need to rebuild and re-run the container to see the changes in your browser. We don't want to rebuild the whole environment, and to do that we will use the volume feature of Docker, and make it easy with docker-compose. Docker-compose is a powerful tool to orchestrate multiple containers. But in our case, we will only use it to make our life easier. docker-compose.yml version: &quot;3.9&quot; services: ekilab-demo-container: build: . ports: - &quot;8501:8501&quot; volumes: - ./:/app Copy Now, you only need to remember one single command: docker compose up. It will build your image, run it with the correct parameters and link it to the correct volume. "},{"title":"Ship it to the Cloud !","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#ship-it-to-the-cloud-","content":"If you don't have an Azure account, you can create one for free and get 200$ of credits for trying out the platform. "},{"title":"Log into Azure","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#log-into-azure","content":"Log into your account using the Azure CLI with the az login command. Then, we will need a container registry. At Ekimetrics, we usually build our infrastructure using an Infrastructure-As-Code tool such as Terraform. But for the sake of simplicity, let's use simple CLI commands to create our resources. "},{"title":"Container registry","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#container-registry","content":"The container registry will store the different versions of our container. It can also be used to store other images. You can consider it as your private DockerHub. az acr create --name ekilabhub --resource-group ekimetrics-demo --sku basic --admin-enabled true Copy "},{"title":"Linux App Service Plan","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#linux-app-service-plan","content":"To run our app, we need a Linux-based resource. This is what the App Service Plan offers. B1 is a free instance that you can use for your small apps and Proof Of Concept. az appservice plan create --resource-group ekimetrics-demo -n ekimetrics-lasp -l westeurope --is-linux --sku B1 Copy Now, we have several options : Option 1 - build the image locally and push it to the container registryOption 2 - build the image directly from the registryOption 3 - build and push the image from a CI/CD pipeline Let's try : # log into the container registry docker login ekilabhub.azurecr.io --username ekilabhub --password its4secr€t! # Option 1 - push the new Docker image to the registry docker push ekilabhub.azurecr.io/ekilab/ekilab-demo-container:latest # Option 2 - directly build on Azure Container Registry az acr build --registry ekilabhub --resource-group ekimetrics-demo-rg --image ekilab-demo-container . Copy "},{"title":"The Web App","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#the-web-app","content":"Finally we can create the web app, based on our previously created App Service Plan, and by retrieving the image from the Container Registry. az webapp create --resource-group ekimetrics-demo-rg -p ekimetrics-lasp -n ekilab-demo-app -i ekilabhub.azurecr.io/ekilab/ekilab-demo-container:latest Copy "},{"title":"Let's Automate!","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#lets-automate","content":"It's all been fun but we don't want to do this every time we update the code. It would be easy to make a mistake and you may want to collaborate with other Data Scientists on your team and have their updates deployed without your help!  "},{"title":"Bitbucket Pipelines","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#bitbucket-pipelines","content":"In this example we are using Bitbucket Pipelines to automate these deployment steps but the logic is very similar in other tools such as Azure DevOps, Cloud Build, Gitlab CI/CD, GitHub Actions, Jenkins... The common concept behind these tools is to store all the instructions in a YAML file and execute them at every commit to a given branch. In our example, the master branch gathers the code that will be delivered to production. bitbucket-pipelines.yml image: python:3.8 pipelines: branches: master: - step: name: Build and Push the image services: - docker script: # build the image - docker build -t ekilabhub.azurecr.io/ekilab/ekilab-demo-container:$BITBUCKET_BUILD_NUMBER . # authenticate with the Azure Container Registry - docker login ekilabhub.azurecr.io --username ekilabhub --password $AZURE_CONTAINER_REGISTRY_PASSWORD # push the new Docker image to the registry - docker push ekilabhub.azurecr.io/ekilab/ekilab-demo-container:$BITBUCKET_BUILD_NUMBER - step: name: Deploying App to Azure script: # Install the Azure CLI - curl -sL https://aka.ms/InstallAzureCLIDeb | bash # login with a Service Principal / store the credentials in a secured area - az login --service-principal --username $AZURE_APP_ID --password $AZURE_PASSWORD --tenant $AZURE_TENANT_ID # Set the correct image version to the web app - az webapp config container set --resource-group $AZURE_RESOURCE_GROUP --name ekilab-demo-app --docker-custom-image-name ekilab-demo-container:$BITBUCKET_BUILD_NUMBER --docker-registry-server-url ekilabhub.azurecr.io --docker-registry-server-user ekilabhub --docker-registry-server-password $AZURE_CONTAINER_REGISTRY_PASSWORD Copy "},{"title":"What's next ?","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#whats-next-","content":"Congratulations ! You should now be able to automate the deployment of your app to the cloud and focus only on updating its content without worrying about how to publish your updates. Now, you might need to have a scalable app to ensure it can handle high loads of visits. You could require tools like Kubernetes, Docker Swarm. "},{"title":"Alternatives","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#alternatives","content":"We presented one of the workflow we are using at Ekimetrics, but it's not the only one ! We also work with GCP, AWS, Alibaba, sometimes on-premise infrastructure that will prevent us from using Docker or Azure for example. Web App framework# Soe alternavites to streamlit that are also offering low-code, minimalist, straight-to-the-data python framework that you can package in a container. Dash PlotlyGradio.app Containers# Docker is not the only containerization tool. Here are some alternatives we invite you to check out if Docker doesn't suit you. podmancontainerdCoreOS rktMesos ContainerizerLXC Linux ContainersOpenVZ Web App Hosting# There are many others ways to deploy your apps, even free tiers on some providers that can help you get your hands-on with smaller, non-sensitive apps. Streamlit Cloud offers a free tier to host one private app and unlimited public apps! Deployment is very simple with GitHubAzure Container App a new offer from Microsoft that helps you simply deploy scalable apps.GCP Cloud Run, similar to Azure Apps, is a serverless service that helps easily deploy pre-built containerized apps.Heroku offers a free tier to deploy small apps, Proof Of Concept and also a very simple deployment process. "},{"title":"Credits","type":1,"pageTitle":"Deploying your Data Science app to the Cloud","url":"blog/2022/04/21/docker#credits","content":"Cover Photo by Annie Spratt on UnsplashGoogle's Best Practices for building ContainersThe best Docker base image for your Python application (August 2021) "},{"title":"Newsletter for June 2022","type":0,"sectionRef":"#","url":"blog/2022/07/05/newsletter_June-2022","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Engineering App and Web Development Data Science for business"},{"title":"Data Science","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#data-science","content":""},{"title":"Distributed computing: how to leverage Fugue to scale your code?","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#distributed-computing-how-to-leverage-fugue-to-scale-your-code","content":" As python users and data lovers, we are using pandas in our daily life. However, pandas has inner limitations when working with large datasets. Alternatives for distributed computing exist but each of them requires us to skill up. The main barrier is the syntax required by the language which is often complex. Different packages tried to simplify the process (koalas for instance) but we want to focus ourselves on Fugue. Fugue is described as a “unified interface for distributed computing that lets users execute Python, pandas, and SQL code on Spark and Dask without rewrites”. Fugue does not require a lot of time to get used to it and is a good common tool for SQL users and python ones. We invite you to watch the video here under which contextualizes Fugue and provides some useful background. Why Pandas-like Interfaces are Sub-optimal for Distributed Computing | by Kevin Kho | Jun, 2022 | Towards Data Science Talk - Kevin Kho/Han Wang: Comparing the Different Ways to Scale Python and Pandas Code - YouTube "},{"title":"Machine Learning","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#machine-learning","content":""},{"title":"In-hand NLP search tool backed by Transformers and Q&A: Haystack","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#in-hand-nlp-search-tool-backed-by-transformers-and-qa-haystack","content":" Deepset, a German NLP start-up, released a bit more than a year ago a powerful and simple tool: Haystack. Haystack is a comprehensive framework enabling its users to use state-of-the-art Question Answering model to browse large textual datasets. Haystack is a local and little search engine. It is meant to be used by a broad range of users (from beginners to expert). You can tailor some part of the interface and even modify back-end specificities such as the backbone model used (Bert, Roberta, Luke…). GitHub - deepset-ai/haystack "},{"title":"Liquid Neural Network: Next generation model for sequential data","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#liquid-neural-network-next-generation-model-for-sequential-data","content":" Recurrent Neural Network (RNN) demonstrated a strong performance when used for sequential data. RNN are made of complex recurrent units enabling the network to keep track of past information while new inputs are fed in. In 2018, Neural Ordinary Differential Equations appeared and were seen as a major change in how we are modelling data. Instead of modeling the true generative function of Y, we are looking to model its derivative. This article was seen as a major change in how we can shift from a discrete model state to a continuous one. Liquid Time Constant Networks (LTC) were introduced in 2020 with a strong emphasis on the concept of hidden state in the model. In previous models, hidden state at time t is optimized according to the output at time t (maximizing the accuracy). In LTCs, hidden state is used both to predict the output, but also the next hidden state t+1. It means that at each time-step, you update your memory, according to what you saw, see and expect to see in the future. This application is particularly powerful when you need to generate data at a given horizon. If you want a quick deep dive in LTC you can follow the first link. The second one is the original paper that might be hard to read the in first instance. Liquid Neural Networks in Computer Vision | by Jacob Solawetz | Towards Data Science Article - Liquid Time-constant Networks "},{"title":"Data Engineering & Architecture","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#data-engineering--architecture","content":""},{"title":"MongoDB vs ElasticSearch vs Redshift","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#mongodb-vs-elasticsearch-vs-redshift","content":" Different tools exist when required to structure and organize a data architecture. This blog post presents three contenders to be THE tool to use. The author compares three technologies widely used: MongoDB, ElasticSearch and Amazon Redshift. This comparison will look at how they index, shard and aggregate data. While MongoDB has the biggest popularity and ElasticSearch gains some hype, Amazon Redshift is a tool to be considered. Storage for Data Engineering: Which is the Best? | Toptal "},{"title":"App and Web Development","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#app-and-web-development","content":""},{"title":"Using properly Map in Javascript","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#using-properly-map-in-javascript","content":" A “map” object is a new addition coming into Javascript since ES6. While the “object” is widely used for recording values, they should be avoided when you have a variable number entries (that can evolve along time). In this case, using a “map” object is appropriate and results in a significant memory saving and computational performance improvement. When You Should Prefer Map Over Object In JavaScript (zhenghao.io) "},{"title":"Special Section: Yolo’s creator history","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#special-section-yolos-creator-history","content":""},{"title":"Jon Redmon, the poney lovers and Computer Vision boss !","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#jon-redmon-the-poney-lovers-and-computer-vision-boss-","content":" For anyone who worked on Computer Vision during studies or even in professional environments, Object Detection always raises as a major challenge. The task consists in detecting in a picture multiple instances and drawing a bounding box around it. Back in 2015, the state-of-the-art architecture is a Region-based Convolutional Neural Network or RCNN (followed by different improvement called Fast-RCNN, Faster-RCNN…). To make it brief and simple, RCNN takes Regions Of Interest (ROIs), which are little rectangle cropped from the image, fed to a Neural Network. Eventually ROIs are pooled together to produce the true bounding boxes we want. The biggest limit of R-CNN is the ROIs generation part which can take a lot of time before getting a prediction (therefore improvements of R-CNN always have a speed related word). Jon Redmon, who at the time was in the early years of his PhD, proposed a new architecture called YOLO (You Only Look Once). The framework approaches the task of object detection as a regression problem rather than a classification one (R-CNN uses a classifier to predict bounding boxes). He also modifies the framework to get a single network that can be trained and optimized. This change of loss enables the network to be fully trainable on the whole image. The model shows exceptional performance both for real-time detection, but also in terms of accuracy. Following this breakthrough, Jon Redmon worked on several new versions of YOLO, all becoming state-of-the-art in the field. However, in early 2020, he decided to stop his research in the field of Computer Vision as he saw a rise of ethical concerns around his work (especially in the military field). I strongly invite you to read (at least) his resume which is by far the best one in the AI field! Check out his website to deepen your knowledge about his research. If you want, you can also check his first Yolo paper which is amazing! Redmon Resume (pjreddie.com) Survival Strategies for the Robot Rebellion (pjreddie.com) You Only Look Once: Unified, Real-Time Object Detection "},{"title":"Credits","type":1,"pageTitle":"Newsletter for June 2022","url":"blog/2022/07/05/newsletter_June-2022#credits","content":"Cover Photo by Cristofer Maximilian on Unsplash "},{"title":"Deep RL and Optimization applied to Operations Research problem - 1/2 Traditional Optimization techniques","type":0,"sectionRef":"#","url":"blog/2022/08/27/traditional_or","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Science for business Operational Research Optimization Knapsack problem"},{"title":"Main steps while creating an optimization model to solve a business problem","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 1/2 Traditional Optimization techniques","url":"blog/2022/08/27/traditional_or#main-steps-while-creating-an-optimization-model-to-solve-a-business-problem","content":"Once a business problem that could benefit from optimization has been identified, we can define a systematic approach based on 3 steps for solving all kind of optimization problems with optimization solvers. These 3 steps are highlighted in the figure below.  Figure 1 : The 3 main steps for solving a business problem through optimization  In more details, these 3 steps are: Create the conceptual mathematical model that defines the different variables, constraints, etc. in the business problem. This step consists in writing down on paper the equations that define our problem. Translate the conceptual mathematical model into a computer program. For most programming languages used for optimization, the computer program will largely resembles the mathematical equations one would write on paper. Solve the mathematical model using a math programming solver. The solver available for Mathematical Programming (solvers such as GLPK, Gurobi, CPLEX...) relies on very sophisticated algorithms. Important algorithms and ideas used in these solvers are, among many others: simplex method, branch &amp; bound, use of heuristics... Let's see those 3 steps for the case of the multi-knapsack problem. "},{"title":"The multi-knapsack problem","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 1/2 Traditional Optimization techniques","url":"blog/2022/08/27/traditional_or#the-multi-knapsack-problem","content":"The objective here is, given a set of n items and a set of m knapsacks, to maximize the total value of the items put in the knapsacks without exceeding their capacity. Below, wi represents the weight of item i, pi the value of item i while cj represents the capacity of knapsack j.  Figure 2: Description of the multi-knapsack problem  The multi-knapsack is an extension of the classical knapsack problem where instead of considering only one knapsack, we consider as many as we want. This allows to easily extend the complexity of this problem. While the problem is relatively easy to define mathematically, it belongs to the class of NP-hard problems. Without going into the details of what defines NP-hard problems, we can easily see that the complexity of the knapsack problems explodes when the number of knapsacks and items increases. Indeed, we have mn available combinations we would need to test should we want to apply a brute-force approach for solving this problem. Just with 10 knapsacks and 80 items, there are 1080 combinations, which is the estimation of the number of atoms in the universe! And 10 knapsacks and 80 items is still quite limited... Let's now try to create the conceptual mathematical model by defining the problem with equations. "},{"title":"Creating the conceptual mathematical model","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 1/2 Traditional Optimization techniques","url":"blog/2022/08/27/traditional_or#creating-the-conceptual-mathematical-model","content":"A quick translation of the multi-knapsack problem with equation can be written as the following:  Now that we managed to translate the problem into a set of equations, let's translate this mathematical model so that it is understood by a computer program. Below, we will make use of the Python package Python-MIP which is open-source and provides tools for modeling and solving Mixed-Integer Linear Programming Problems (MIP), relying on fast open source solvers. "},{"title":"Translating the mathematical model into a computer program with Python-MIP","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 1/2 Traditional Optimization techniques","url":"blog/2022/08/27/traditional_or#translating-the-mathematical-model-into-a-computer-program-with-python-mip","content":"Before solving the problem, we have to generate an instance for it (have data defining the problem). To do so, you can use the following code that will generate an instance of this problem with 40 items to store in 5 bags. import pandas as pd import numpy as np import pickle def data_generator_knapsack(number_bags, number_items, minimum_weight_item, maximum_weight_item, minimum_value_item, maximum_value_item, max_weight_bag): data = {} weights = np.random.randint(minimum_weight_item, maximum_weight_item, size = number_items) values = np.random.randint(minimum_value_item, maximum_value_item, size = number_items) data['weights'] = weights data['values'] = values data['items'] = list(range(len(weights))) data['num_items'] = len(weights) data['bins'] = list(range(number_bags)) data['bin_capacities'] = np.random.randint(0, max_weight_bag, size = number_bags) + np.int(np.mean(data['weights'])) return(data) number_bags = 5 number_items = 40 minimum_weight_item = 0 maximum_weight_item = 75 minimum_value_item = 0 maximum_value_item = 75 max_weight_bag = 150 data = data_generator_knapsack(number_bags, number_items, minimum_weight_item, maximum_weight_item, minimum_value_item, maximum_value_item, max_weight_bag) Copy Let's now import the package used to have access to the MIP solver, here using the python package Python-MIP: from mip import Model, xsum, maximize, BINARY Copy Now, we can translate the mathematical model so that it is understood by Python-MIP. def mip_solve_knapsack(data): model = Model(&quot;knapsack&quot;) x = [[model.add_var(var_type=BINARY) for i in data['items']] for j in data['bins']] model.objective = maximize(xsum((xsum(data['values'][i] * x[j][i] for i in data['items']) for j in data['bins']))) for j in data['bins']: model += xsum(data['weights'][i] * x[j][i] for i in data['items']) &lt;= data['bin_capacities'][j] # Each item can be in at most one bin for i in data['items']: model += xsum(x[j][i] for j in data['bins']) &lt;= 1 model.optimize() return(model) Copy Remark how close it is from the original equations! These solvers are very powerful and yet easy to use directly in Python. The code is indeed very close to the original equations. "},{"title":"Solving the mathematical model with Python-MIP","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 1/2 Traditional Optimization techniques","url":"blog/2022/08/27/traditional_or#solving-the-mathematical-model-with-python-mip","content":"Using the mip_solve_knapsack function defined in the previous section, we can access to important information regarding the problem, such as the final objective value and the values of xij telling us what were the best combinations of items inside knapsacks. "},{"title":"Some Mathematical Optimization packages","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 1/2 Traditional Optimization techniques","url":"blog/2022/08/27/traditional_or#some-mathematical-optimization-packages","content":"In the notebook associated to this article, the package Python-MIP was used. Python-MIP is free, but many other packages exist for solving optimization problems on Python (and other languages of course like Julia). For instance OR-Tools from Google is a well-recognized free solver, with detailed documentation. On the other side, Gurobi is a very popular commercial solution for mathematical optimization and its documentation is extremely rich, with quick introductions about Mathematical Programming, Linear Programming and Mixed-Integer Programming. Importantly, it has a large number of modeling examples from all industry fields directly available on Google Colab allowing to better grasp notions of Mathematical Modelling and to improve modeling skills to tackle all kind of optimization problems with Python. This resource can be of use even if one doesn't plan to use this commercial software but rather a free package such as OR-Tools. "},{"title":"Conclusion","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 1/2 Traditional Optimization techniques","url":"blog/2022/08/27/traditional_or#conclusion","content":"In this article was introduced the multi-knapsack problem, an NP-complete problem, very difficult to solve when taking many items and bags. The approach to solve the multi-knapsack problem relied on Python-MIP, a free optimization package using powerful MILP solvers to solve very efficiently all kinds of optimization problems. In the next part of this series on the multi-knapsack problem, well studied in the field of Operations Research and at the heart of many real optimization problems, we'll highlight how Deep Reinforcement Learning can be used in order to solve combinatorial optimization problems such as this one. Stay tuned! "},{"title":"Exploring neural ordinary differential equations for time series forecasting applications","type":0,"sectionRef":"#","url":"blog/2022/07/11/neural_ode","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Science for business Time Series Forecasting Sales Prediction Neural Ordinary Differential Equations Deep Learning Newspaper Industry"},{"title":"Selling magazines","type":1,"pageTitle":"Exploring neural ordinary differential equations for time series forecasting applications","url":"blog/2022/07/11/neural_ode#selling-magazines","content":"Before entering into the subject, if you have not read our article on how we use Bayesian inference to increase our predictions of magazines sales have a look at it here. It is an interesting application of a Bayesian framework to enhance sales prediction for a publisher. Our exploration of neural ODEs focuses on the same use case. In the world of newspapers and magazines, it is crucial to be able to estimate the final volume of sales for accounting and management purposes. Indeed, publishers adjust their production and distribution of issues based on these forecasts. Conventionally, the projections rely strongly on the domain expertise of the people in charge. But nowadays, with all recent advances in the field of data science and improvements with regards to data availability, publishers can leverage modern forecasting techniques to enhance their predictions. The figure below, Fig. 1, represents the cumulative sales of a magazine composed by a set of 14 different issues. Note that the data have been anonymized for confidentiality purposes. Our task is to use the observed data, including the sales curves of all historical issues and the beginning part of the current issue’s curve, to predict the final sales of the current issue.  Fig. 1: Example of magazine sales curves  "},{"title":"Introduction to neural ODEs","type":1,"pageTitle":"Exploring neural ordinary differential equations for time series forecasting applications","url":"blog/2022/07/11/neural_ode#introduction-to-neural-odes","content":"In this section we provide an overview of what neural ODEs are, and what makes them so special. For the curious readers, complementary resources and blog posts that present this topic in detail, are provided at the end of this article. To understand neural ODEs, we need to introduce some basic concepts on neural networks (NNs). In essence, NNs are a succession of input, hidden and output layers originally inspired by the human brain. The Multilayer Perceptron (MLP) is one the most popular feedforward neural network due to its simplicity. By means of activation functions and linear combinations of the input data, these networks introduce non linearities and become universal approximators [3]. The equation h(t+1) = f(ht, θt), captures the evolution of the hidden layers of a MLP network with ht referring to the previous layer and θt to a parameter of the network. Without entering too much into the details, these networks are usually trained by minimizing a loss function and backpropagation, propagating the computed error, and updating the weights accordingly. What we must keep in mind here is that these networks have a limited number of layers and thus, of evaluation points. Could we achieve an infinite number of evaluation points for time continuous applications? The instinctive answer is no since we cannot have an infinite number of layers. However, we are going to review some interesting properties of residual networks (ResNet) that will help us answer this question.  Fig. 2: ResNet schema [4]  A ResNet is a neural network that has an architecture based on the pattern pictured in Fig. 2 which entails that the network follows the equation ht+1 = ht + f(ht, θt). This equation might be familiar to some readers with a background in mathematics since it resembles Euler’s method. In short, this method is useful to solve initial value problems, a problem modelled by an ordinary differential equation with an initial condition. Interestingly, a residual network adds hidden states between the input and the output and discretizes the continuous relationship between them, which is similar to Euler's method. In [5] the authors take a different approach by considering the continuous limit of each discrete layer of the network. Thus, instead of having a discrete number of layers, the progression of the hidden states is continuous, obtaining the following equation where h(t) is the value of the hidden state evaluated for some t. dℎ(𝑡)/𝑑𝑡 = 𝑓(ℎ(𝑡), 𝜃t, 𝑡)  Then, in a neural ODE the hidden state dynamic can be parametrized by the equation above where 𝑓(ℎ(𝑡), 𝜃t, 𝑡) is a neural network parametrized by 𝜃t at layer t. Therefore, it is possible to solve this ODE by solving its integral. h(t) = ∫ f(h(t), 𝜃t, t)  By means of a numerical ODE method, it is possible to evaluate the network at any desired depth. And thus, it is possible to approximate functions over these hidden state dynamics by using ODE solvers such as: ŷ = h(t1) = ODESolve(h(t0), t0, t1, 𝜃t, f)  Now, if we go back to our initial question regarding the possibility of having an infinite or quasi-infinite number of evaluation points, we can state that neural ODEs enable us to achieve that Fig. 3 illustrates this idea by comparing the vector field created by a traditional residual network and an ODE network. In essence, an ODE network defines a continuous vector field since this network can be evaluated at any depth. Whereas, on the other hand, the residual network is limited to a discrete number of layers.  Fig. 3: Comparison between a ResNet and an ODE network vector fields transformations [5]  Before moving on to the applications of neural ODEs, it is important to note the endeavor of performing backpropagation. Essentially, the more evaluation points you have in your network, the higher the number of intermediate forward passes to store. To overcome this, the authors of the original paper [5] which received the 2018 NeurIPS best paper award, introduced a mathematical trick known as the Adjoint method. We will not get into the details here, but you can dig deeper into this concept by checking the resources we have left at the end of this article. "},{"title":"Applications of neural ODEs","type":1,"pageTitle":"Exploring neural ordinary differential equations for time series forecasting applications","url":"blog/2022/07/11/neural_ode#applications-of-neural-odes","content":"The main advantage of neural ODEs is the possibility of working with continuous-time series models. In addition, they are generally more memory efficient than other networks such as the MLP and can gain from adaptive computation since modern ODE solvers allow to monitor the level of error and adapt the evaluation strategy. For example, we can reduce accuracy for low power applications. All these benefits make neural ODEs a great tool for applications dealing with continuous time systems, irregularly sampled data, and scalable and invertible normalizing flows. Besides, neural ODEs are very interesting for time series forecasting too. Basically, they can be used to fit time series and then extrapolate them. Since 2018, we have seen an increasing number of scientific papers presenting neural ODEs to deal with forecasting challenges in the energy [6] and the healthcare [7] sectors. Coming back to our specific use case, although Fig. 1 introduced at the beginning of this article shows that applying a curve fitting model does not seem like a feasible option, we considered our sales curves as trajectories to employ neural ODE models to fit the curves and forecast the final volumes of sales. We can formulate our problem with the following equation. xθt+1 = xθ0 + ∫ b(xθu, u) du  Where x is an issue belonging to a magazine and b in our case is a neural network, something resembling to b(xθu, u) = MLP(xθu), with its corresponding parameters. "},{"title":"Results","type":1,"pageTitle":"Exploring neural ordinary differential equations for time series forecasting applications","url":"blog/2022/07/11/neural_ode#results","content":"Initially, we have used a standard neural ODE network to deal with our time series forecasting use case. The figure below, Fig. 4, is an animation representing the fitting of a curve of sales of a specific issue. Bear in mind that the data have been anonymized for privacy purposes. In this figure, we can observe that the model is able to fit the curve successfully after some iterations. The idea then is to fit the sales curves from all historical issues and the beginning part of the current issue’s curve to predict the final sales by extrapolation. Although we have obtained promising results, they are not good enough. The main reason being that neural ODEs are well suited for deterministic systems and in our case, we deal with a non-deterministic one.  Fig. 4: Curve fitting of the sales curve of an issue  Inspired by the ideas presented in [8], instead of a standard neural ODE network like the one introduced before, we have been recently working with stochastic differential neural networks (SDEs). SDEs are a type of continous neural network enabling to introduce a stochastic component and consequently, work with non-deterministic systems and consider external factors. We have obtained promising preliminary results with this procedure, but they require further analysis. "},{"title":"Conclusion","type":1,"pageTitle":"Exploring neural ordinary differential equations for time series forecasting applications","url":"blog/2022/07/11/neural_ode#conclusion","content":"In this article, we have introduced you into the world of neural ordinary differential equations applied to time series forecasting. We have gone through a short theoretical explanation and presented you our exploration with neural ODEs to strengthen predictions for a magazine publisher. At Ekimetrics, we accompany a large portfolio of clients across a wide range of industries to help them steer their data opportunity, build capabilities, and deploy actionable DS solutions to power up a sustainable growth. As a leader in the field of data science, we perform recurring technological watches and stay tuned on the state-of-the-art of the fields of machine learning and deep learning. As stated during this article, we are particularly interested in time series and investigate recent advances on the subject to eventually, embrace them and expand our solutions. "},{"title":"References","type":1,"pageTitle":"Exploring neural ordinary differential equations for time series forecasting applications","url":"blog/2022/07/11/neural_ode#references","content":"[1] J. Wang, G. Q. Liu, and L. Liu, &quot;A selection of advanced technologies for demand forecasting in the retail industry&quot;, A Selection of Advanced Technologies for Demand Forecasting in the Retail Industry | IEEE Conference Publication | IEEE Xplore. [2] X. dairu and Z. Shilong, &quot;Machine learning model for sales forecasting by using xgboost&quot;, Machine Learning Model for Sales Forecasting by Using XGBoost | IEEE Conference Publication | IEEE Xplore. [3] K. Hornik, M. Stinchcombe, H. White, “Multilayer feedforward networks are universal approximators”, Multilayer feedforward networks are universal approximators. [4] Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun, &quot;Deep Residual Learning for Image Recognition&quot;, Deep Residual Learning for Image Recognition. [5] Ricky T. Q. Chen, Yulia Rubanova, Jesse Bettencourt, David Duvenaud, &quot;Neural ordinary differential equations&quot;, Neural Ordinary Differential Equations. [6] X. Xie, A. K. Parlikad, and R. Puri, &quot;A neural ordinary differential equations based approach for demand forecasting within power grid digital twins&quot;, A Neural Ordinary Differential Equations Based Approach for Demand Forecasting within Power Grid Digital Twins | IEEE Conference Publication | IEEE Xplore. [7] Intae Moon, Stefan Groha, Alexander Gusev, &quot;SurvLatent ODE : A Neural ODE based time-to-event model with competing risks for longitudinal data improves cancer-associated Deep Vein Thrombosis (DVT) prediction&quot;, 2204.09633.pdf (arxiv.org). [8] Xuechen Li, Ting-Kam Leonard Wong, Ricky T. Q. Chen, David Duvenaud, &quot;Scalable Gradients for Stochastic Differential Equations&quot;, Scalable Gradients for Stochastic Differential Equations. "},{"title":"Additional resources","type":1,"pageTitle":"Exploring neural ordinary differential equations for time series forecasting applications","url":"blog/2022/07/11/neural_ode#additional-resources","content":"In-depth blog post: Understanding Neural ODE's - Jonty Sinai Presentation on mathematics behind neural ODEs: 20200402_Guelph_Neural_ODEs_tutorial.pdf (voletiv.github.io) Interesting blog post: Neural ODEs: breakdown of another deep learning breakthrough | by Alexandr Honchar | Towards Data Science Neural ODEs Github repository: GitHub - msurtsukov/neural-ode: Jupyter notebook with Pytorch implementation of Neural Ordinary Differential Equations SDEs Github repository: GitHub - google-research/torchsde: Differentiable SDE solvers with GPU support and efficient sensitivity analysis. "},{"title":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","type":0,"sectionRef":"#","url":"blog/2022/09/06/deep_rl","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Science for business Operational Research Optimization Knapsack problem Deep Reinforcement Learning"},{"title":"Reinforcement Learning for the Knapsack problem","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#reinforcement-learning-for-the-knapsack-problem","content":""},{"title":"What is Reinforcement Learning?","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#what-is-reinforcement-learning","content":"The image below represents the Reinforcement Learning framework. It describes in a simple, yet accurate manner, one of the main ideas behind Reinforcement Learning.  Figure 1 : The Reinforcement Learning framework  Basically, an agent receives information about the state of an environment he evolves in, information we will call St as it describes the state at timestep t. Based on this information it receives, the RL agent will choose an action among all the actions it has the right to take at each timestep. We will call such action At, the action at time t, with At belonging to AAt(st) the set of available actions given the state St. When an action is taken, it has an impact on the environment and the agent will receive information about the new state of the environment St+1 but also a reward to incentivize it to take actions which will maximize the total rewards it expects to obtain at the end of an episode. To apply reinforcement learning to solve business problems, these problems have to be framed as a Markov Decision Process, as seen above. More details can be found on how to rigorously define the Reinforcement Learning in the excellent course given by David Silver (principal research scientist at DeepMind, now owned by Google). You may find his lectures using the previous link, with lectures 1 and 2 being the most pertinent. Now, to get a better grasp on how to frame a problem for Reinforcement Learning, let’s consider two practical examples. As a first example, we can consider for instance an AI trader. It could have as available actions the possibility to buy or sell many different products. Its actions have an impact on the environment. First, the money it has and the products it owns will be modified, but also if it buys a massive amount of a certain product, it may have an important impact on the future prices. The final goal for it may be to earn as much money as possible. The description of this first example with the prism of Reinforcement Learning is given in figure 2.  Figure 2 - Example of an AI trader described through the prism of Reinforcement Learning  For the case of a self driving car as the AI agent, the actions it can take could be turning, stopping, accelerating. The information it will receive at each timestep are the speed of the car, its geolocation and probably many others. The environment can be the real world around the car, or just a simulator. The final reward will take into account how fast the car has reached a certain goal position, without damaging things or killing people for instance. Should it damage objects, it could for instance receive negative rewards. This information is summarized in the figure 3 below.  Figure 3 - Example of a self driving car described through the prism of Reinforcement Learning  Let’s now tackle the case of the multi-knapsack problem! "},{"title":"How to adapt the multi-Knapsack problem for solving with Reinforcement Learning","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#how-to-adapt-the-multi-knapsack-problem-for-solving-with-reinforcement-learning","content":"The precise definition of the multi-knapsack problem was given in the first part of this serie of articles on the knapsack problem. The figure below describes visually the problem at stake.  Figure 4 - Description of the multi-knapsack problem  In our case, one could think about the agent as a person trying to carefully choose among the many clothes he/she possesses before going on a long trip. The environment would be the empty bags and all the clothes to choose from. At each timestep, the person would have the choice to take one element among the available clothes to put it inside one of the bags, the bags needing to be closed (and thus not to full) before leaving for the trip. The objective is to maximize the value of the clothes chosen for the trip. And that’s it! Our problem is framed for Reinforcement Learning. "},{"title":"Why we chose to explore RL for combinatorial optimization problems","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#why-we-chose-to-explore-rl-for-combinatorial-optimization-problems","content":"The last two decades have known the breakthrough of Deep Learning which is now massively entering all fields of industry whether this is for Computer Vision, disease predictions, product recommendation, Natural Language Processing applications, etc. Massive investments follow in the field of Machine Learning implying a virtuous circle with more results and regular new breakthroughs. Due to these developments, Deep Reinforcement Learning has emerged from the field of Reinforcement Learning which has been studied for a long time and whose goal is to take actions in an environment in order to maximize a defined cumulative reward. This allowed new recent breakthroughs, such as the AI AlphaGo beating professional Go players in 2016 and more recently AlphaStar beating world champions of the video game Starcraft (more on that in DeepMind blog article or in the Nature paper).  Figure 5 - Visualization highlighting the trained AlphaStar performing against a top Starcraft human players  We’ll say a few words about this video game environment, because this achievement is one of the reasons which motivates the use of Reinforcement Learning for solving combinatorial optimization problems. Indeed, with the knapsack problem, we have a discrete action space with a limited number of actions, although the range of available actions can become extremely high by changing the number of available items and knapsacks. Having an AI agent beating the world’s best players on this game is an important breakthrough as this video game environment is extremely complex, with only imperfect information being provided to the agent, the action space being enormous with a choice between up to 1026 different actions, and actions being taken almost in real time, every 0.2 seconds. Eventually, planning is made on long term and the agent doesn’t know until the end of the game whether it has won the game or not. While applying Deep Reinforcement Learning to video games allows to test the performance of the algorithms very accurately, allowing to judge how it performs in very different environments, applications also begin to appear in other fields, opening the perspective of using these techniques in different industry fields in the next few years. Deep Reinforcement Learning is definitely a field with high potential, and proofs have been shown that it can solve very well high-dimensional problems. Especially, many articles were published where these algorithms were applied to finance problems. Now that we have seen the potential of Reinforcement Learning for solving a problem such as the knapsack problem, it is important to keep in mind some important characteristics of Deep Reinforcement Learning approaches: Reinforcement Learning algorithms provides us with approximations of the optimal solutions on the contrary to the solutions that could provide Mixed Integer Programming solvers as the ones introduced in the first part of this series of articles on the knapsack problem;For the same reason, Reinforcement Learning algorithms will always provide us solutions to the problem, on the contrary to exact methods which could be unable to provide any solution for very complex problems. For that reason, Reinforcement Learning approaches are for instance being developed in order to solve partial differential equations of very high dimensionality, where usual solvers are unable to provide a solution;Reinforcement Learning algorithms perform online optimization, meaning that once they have been trained, they are able to solve very complex problems immediately. They have thus tremendous potential for applications which require to solve problems very frequently in a limited time window, such as in trading or product recommendation for instance. As seen in the beginning of this section, Reinforcement Learning algorithms have a very high potential for a wide range of business problems. Let's now introduce one of the two Reinforcement Learning approaches used in this notebook. The first one, the Q-learning approach, isn't based on neural networks and doesn't scale well when the dimensionality of the problem increases. We have studied it as it is at the core of other important algorithms such as Deep Q Learning, much more powerful. We will thus concentrate on another promising approach, based on neural networks: the Policy Gradient approach. "},{"title":"Using Q-Learning and Policy Gradient algorithms on the Knapsack problem","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#using-q-learning-and-policy-gradient-algorithms-on-the-knapsack-problem","content":""},{"title":"A simple introduction to Policy Gradient","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#a-simple-introduction-to-policy-gradient","content":"The basic principle with a policy gradient approach is that, for each state s received as input, our algorithm will provide us a probability distribution for the actions to take, allowing us to know which object our algorithm recommands us to put first in the knapsack. In the formula below, 𝜋 gives us this probability. More precisely, 𝜋 gives us the probability to take action a knowing that we currently at state s and given the 𝜃 values of the model parameters, neurons in our case as we use neural networks.    The use of neural networks isn't mandatory here, but very frequent to obtain good results on complex problems. An example of a representation of a simple neural network is given recalled below.  Figure 6 - Representation of a simple neural network  Our model architecture can be visualized with this representation. If we dig a bit deeper into the details of our model's architecture, we have: As input of the neural network, a description of the current state of the system, that is the value and price information for all items, information about the already selected items and about the current and maximum weight limit inside the different bags; Thanks to this information, our model associates to each possible action a probability and we can then select the action that the algorithm recommends us to take first, that is which object should be stored in which knapsack at the current timestep. This is the output of our model; The parameters of this model, the neurons, are updated at the end of each episode, an episode beginning when all the objects are available and ending when the bags are sufficiently full (or all objects have been selected...). The update of the parameters (𝜃) of the model taking place at the end of each episode only and not each time an action is proposed by the model, the approach is called a Monte Carlo approach; The updates of the parameters are made in order to maximize the value of the items stored inside the knapsacks and this approach is based on techniques such as stochastic gradient descent. Now that the Policy Gradient has been described, let's see how our algorithms performed on the knapsack problem! "},{"title":"Evaluating the performance of the RL algorithms","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#evaluating-the-performance-of-the-rl-algorithms","content":"As summarized in figure 7 below, in order to evaluate the performance of the different algorithms, we chose to apply our two RL algorithms (Q-Learning and Policy Gradient) to 3 different environments of increasing difficulty. We trained each algorithm over 400 episodes. At the beginning of a new experience, the algorithm had all its coefficients reinitialized. We perform several experiences in order to evaluate how robust is the algorithm.  Figure 7 - Description of the evaluation process for the different algorithms  Eventually, we evaluated the performance of the algorithms with 3 metrics: The mean reward shows how good on average the algorithm is;The standard deviation highlights the potential lack of robustness of the algorithm;The performance ratio RL vs MILP tells us how close is the RL algorithm to the optimal solution provided by a MILP solver (details on how to obtain such a solution are given in the notebook).  "},{"title":"Results with Q-Learning (no neural networks)","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#results-with-q-learning-no-neural-networks","content":"The graphs on the left show that overall our Q-Learning algorithm does indeed improve through training as its reward improved over time. However, we can see that the performance ratio RL vs MILP is very low, meaning that it is far from achieving as good results as what we could get using state-of-the-art MILP solvers.  Figure 8 - Performance of the Q-Learning algorithm  Furthermore, environments of increasing complexity / dimensionality will be much more difficult to handle for Q-Learning, as its Q-value matrix has as number of columns the number of items multiplied by the number of knapsacks and as rows all the possible states which could exist. Increasing only slightly the number of knapsacks or bags will thus quickly make the Q-Learning algorithm unusable. "},{"title":"Results with Policy Gradient (based on neural networks)","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#results-with-policy-gradient-based-on-neural-networks","content":"The results of the learning process with Policy Gradient are much better than with Q-learning. At the beginning, due to random initialization of the neural network parameters, the actions are taken at random and the reward is very low, but it quickly improves until reaching a local maximum, not global as it is still lower than the solution obtained with the MILP solver. The performance ratio is quite good on the three different environments, reaching approximately 80% for each. The algorithm scales well when the complexity increases. We see however that the standard deviation is quite high, which highlights the fact that each time a model is initialized, it can converge to quite different values. It is thus not extremely robust and several initializations are required before finding good results approaching the optimal solution.  Figure 9 - Performance of the REINFORCE (policy-gradient approach) algorithm  On the graph below are highlighted some of the limitations we have witnessed with Policy Gradient algorithms such as the REINFORCE algorithm. We have a lack of robustness, having our algorithm sometimes working very well, sometimes leading to a poorer reward.  Figure 10 - REINFORCE algorithm (gradient-policy approach) appears as lacking robustness  For that reason, the hyperparameter tuning is made more complicated. Indeed comparing one combination of hyperparameters with another one isn't enough to be certain about which combination of hyperparameters is the best, because of the high variability of results for fixed hyperparameters. "},{"title":"Opening","type":1,"pageTitle":"Deep RL and Optimization applied to Operations Research problem - 2/2 Reinforcement Learning approach","url":"blog/2022/09/06/deep_rl#opening","content":"For obtaining the results given in this article, we reproduced classical Reinforcement Learning algorithms: the Q-learning algorithm which does not rely on the use of neural networks, and a Policy Gradient algorithm which relies on neural networks. We saw that the latter obtained much better results than the former as we could expect. We also built our own multi-knapsack environment file, allowing us to easily modify greatly the complexity of the environment by increasing both the number of available items to put in the knapsacks and the number of knapsacks. While creating the environment file, we followed the nomenclature proposed by Open AI Gym for building Reinforcement Learning environments, using the same method names used to define an Open AI Gym environment. The objective was to be able to experiment much more quickly in the future by making use of one of the different Deep Reinforcement Learning libraries (Stable Baselines, TF Agents, Tensorforce…). Indeed, these libraries allow access to many different advanced Deep Reinforcement Learning algorithms already implemented, which can directly be used on new problems if the environment file describing the problem has been built using Open AI Gym nomenclature. Another article will be written soon to tell more about how to perform hyperparameter tuning for RL using the hyperparameter optimization framework Optuna and how to compare and evaluate the efficiency of many different RL algorithms using Stable Baselines! "},{"title":"Newsletter for September 2022","type":0,"sectionRef":"#","url":"blog/2022/09/20/newsletter_Sept-2022","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Engineering App and Web Development Data Science for business"},{"title":"Data Science","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#data-science","content":""},{"title":"Why You Should Warn Customers When You’re Running Low on Stock","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#why-you-should-warn-customers-when-youre-running-low-on-stock","content":" The supply-chain disruptions due to the pandemic and the Ukraine war caused the retailers to face unprecedented stockouts risks. To overcome this challenge, Instacart suggest that honesty is the best policy. By using a Machine Learning model to predict that an item is likely out-of-stock and therefore warning clients when it’s the case, they reduced the proportion of replacements and refunds in the short term and increased the total revenue per customer in the long term.   Why You Should Warn Customers When You’re Running Low on Stock - Harvard Business Review "},{"title":"Machine Learning","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#machine-learning","content":""},{"title":"Hopular: Modern Hopfield Networks for Tabular Data","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#hopular-modern-hopfield-networks-for-tabular-data","content":" While Deep Learning excels in structured data as encountered in vision and natural language processing, it failed to meet its expectations on tabular data. For tabular data, Support Vector Machines (SVMs), Random Forests, and Gradient Boosting are the best performing techniques with Gradient Boosting in the lead. &quot;Hopular&quot; is a novel Deep Learning architecture for medium- and small-sized datasets, where each layer is equipped with continuous modern Hopfield networks. In experiments on small-sized tabular datasets with less than 1,000 samples, Hopular surpasses Gradient Boosting, Random Forests, SVMs, and in particular several Deep Learning methods. In experiments on medium-sized tabular data with about 10,000 samples, Hopular outperforms XGBoost, CatBoost, LightGBM and a state-of-the art Deep Learning method designed for tabular data. Thus, Hopular is a strong alternative to these methods on tabular data.   GitHub - Hopular "},{"title":"Data Engineering & Architecture","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#data-engineering--architecture","content":""},{"title":"How to learn data engineering","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#how-to-learn-data-engineering","content":" Like data scientists, data engineers write code. They’re highly analytical, and are interested in data visualization. Unlike data scientists — and inspired by our more mature parent, software engineering — data engineers build tools, infrastructure, frameworks, and services. In fact, it’s arguable that data engineering is much closer to software engineering than it is to a data science. This post introduces the role of a data engineer and the challenges he faces on a daily basis. It also provides some very interesting links to acquire the basics or to consolidate your knowledge in this domain.   How to learn data engineering | Blef.fr   "},{"title":"Do’s and Don’ts of Data Mesh","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#dos-and-donts-of-data-mesh","content":" Many enterprises are investing in their next generation data lake, with the hope of democratizing data at scale to provide business insights and ultimately make automated intelligent decisions. Data platforms based on the data lake architecture have common failure modes that lead to unfulfilled promises at scale. To address these failure modes, a new paradigm saw the light : Data Mesh. This article introduces Data Mesh and offers a series of advices, Do’s and Don’ts as a result of its implementation in BlaBlaCar.   Do’s and Don’ts of Data Mesh | Kineret Kimhi | Medium "},{"title":"App and Web Development","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#app-and-web-development","content":""},{"title":"Introducing Signals","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#introducing-signals","content":" Signals are a way of expressing state that ensure apps stay fast regardless of how complex they get. Signals are based on reactive principles and provide excellent developer ergonomics, with a unique implementation optimized for Virtual DOM. Introducing Signals | Preactjs.com "},{"title":"Best practices for creating a modern npm package","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#best-practices-for-creating-a-modern-npm-package","content":" NPM is an online repository for the publishing of open-source Node.js projects, it also allows to interact with the repository through a command-line utility for package installation, version management and dependency management. This article details the best practices for creating and managing an npm package such as security checks, automated semantic version management etc.   Best practices for creating a modern npm package | Brian Clark | Synk.io "},{"title":"Special Section: Responsible AI","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#special-section-responsible-ai","content":""},{"title":"OpenRAIL: Towards open and responsible AI licensing frameworks","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#openrail-towards-open-and-responsible-ai-licensing-frameworks","content":" Advances in machine learning and other AI-related areas have flourished these past years partly thanks to thethe open source culture. It has in fact allowed knowledge sharing and created communities that fostered innovation. Nevertheless, recent events related to the ethical and socio-economic concerns of development and use of machine learning models have spread a clear message: Making sure AI is responsible is incompatible with open-source. Yet, closed systems are not the answer, as the problem persists under the opacity of firms' private AI development processes. In this context, the OpenRAIL approach suggests a new type of licensing that embed a specific set of restrictions to make sure of the good usage of the models. Therefore, while benefiting from an open access to the ML model, the user will not be able to use the model for the specified restricted scenarios.   OpenRAIL: Towards open and responsible AI licensing frameworks | Carlos Munoz Ferrandis | huggingface.co "},{"title":"Credits","type":1,"pageTitle":"Newsletter for September 2022","url":"blog/2022/09/20/newsletter_Sept-2022#credits","content":"Photos from Unsplash "},{"title":"Interpreting its sentiment analysis algorithm: BERT and its attention coefficients (1/2)","type":0,"sectionRef":"#","url":"blog/2022/10/18/Interpretability_sentiment_analysis_I","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Science for business Operational Research Optimization Knapsack problem Deep Reinforcement Learning"},{"title":"Summary","type":1,"pageTitle":"Interpreting its sentiment analysis algorithm: BERT and its attention coefficients (1/2)","url":"blog/2022/10/18/Interpretability_sentiment_analysis_I#summary","content":"We propose to illustrate how far BERT-type models can be considered as interpretable by design. We show that the attention coefficients specific to BERT architecture constitute a particularly rich piece of information that can be used to perform interpretability. There are mainly two ways to do interpretability: attribution and generation of counterfactual examples. Here we propose to evaluate how attention coefficients can form the basis of an attribution method. We will show in a second article how they can also be used to set up counterfactuals. "},{"title":"The BERT architecture","type":1,"pageTitle":"Interpreting its sentiment analysis algorithm: BERT and its attention coefficients (1/2)","url":"blog/2022/10/18/Interpretability_sentiment_analysis_I#the-bert-architecture","content":"An artificial neural network is a computer system inspired by the functioning of the human brain and biological neurons to learn specific tasks. The neural networks represent a subset of machine learning algorithms. In order to perform a learning task, the neural network spreads information through an elementary network, called a perceptron. The way in which information is diffused can be formalized through linear algebra and the manipulation of various activation functions. A neural network can be defined as an association of elementary objects called formal neurons, like the perceptron. There are several types of layers that can be part of a neural network: Fully connected layers, which receive a vector as input, and produce a new vector as output by applying a linear combination and possibly an activation function;Convolution layers, which learn localized patterns in space;Attention layers, which model the general relations between different objects. Attention mechanisms are particularly effective for natural language processing tasks. This is mainly due to the fact that they allow to properly model a word through mathematical representations. In particular, attention layers make it possible to assign a contextual representation of the word on a case-by-case basis. This makes it a much more efficient tool than Word2vec since the latter only models an average context, but does not adapt to the given situation. Attention mechanisms are at the heart of Transformers-type models as shown in the diagram below. The BERT model corresponds to a stack of the left part of the generic architecture of a Transformer [1]. Figure 1 - Transformers architecture "},{"title":"Fine tuning of BERT for sentiment analysis","type":1,"pageTitle":"Interpreting its sentiment analysis algorithm: BERT and its attention coefficients (1/2)","url":"blog/2022/10/18/Interpretability_sentiment_analysis_I#fine-tuning-of-bert-for-sentiment-analysis","content":"To illustrate how attention coefficients can be a source of interpretability in natural language processing, we propose to fine tune a DistilBERT for sentiment analysis. A DistilBERT is a distilled version of BERT. It is smaller, faster, cheaper, lighter and recovers 97% of BERT’s performance on GLUE [2]. A perfect compromise, in fact. Most transformers are available pre-trained on the Hugging Face transformers library [3]. The objective is to perform supervised classification on the IMDB database to assess the sentiment associated with a movie review. An illustration of the dataset is shown below: Figure 2 - IMDB sample To do so, we import all the libraries needed. In particular, the tokenizer DistilBertTokenizer and the pre-trained hugging face model TFDistilBertForSequenceClassification are used. tokenizer = DistilBertTokenizer.from_pretrained('distilbert-base-uncased') sentence_encoder = TFDistilBertForSequenceClassification.from_pretrained('distilbert-base-uncased', output_attentions = True) Copy The parameter &quot;output_attention&quot; must be equal to &quot;True&quot;. It will allow us to retrieve the attention coefficients of the model. We add a dense layer with a softmax activation to fine tune the model to do sentiment analysis. In order to train the model, we use the following hyperparameters: initial_lr = 1e-5n_epochs = 15batch_size = 64random_seed = 42 Finally, we make evolve the learning and stop the learning process if the val_loss does not decrease after a certain number of iterations. reduce_lr = ReduceLROnPlateau(monitor='val_loss', factor=0.2, verbose = 1,min_delta=0.005,patience=3, min_lr=3e-7) early_stop = EarlyStopping(monitor='val_loss', min_delta=0, patience=6, verbose=1, mode='auto',baseline=None, restore_best_weights=True) Copy We can finally fine tune the DistilBert. history = model.fit(X_train, y_train, batch_size=bs, epochs=n_epochs, validation_data=(X_test, y_test), verbose=1,callbacks=[early_stop, reduce_lr]) Copy We obtain a val_accurcay of 85%, which is sufficient for our further analysis. Note that a BERT or a RoBERTa would have certainly had a better val_loss, as they are more heavy and complex. Recovery of attention coefficients# We are now able to analyze the attention coefficients related to movie reviews. In order to retrieve it, We need to predict the sentiment associated to a review. Then, we select the layer(s) of attention to analyze. We focus here on the last layer of attention. inputs = tokenizer.batch_encode_plus(reviews,truncation=True, add_special_tokens = True, max_length = max_len, pad_to_max_length = True) tokenized = np.array(inputs[&quot;input_ids&quot;]).astype(&quot;int32&quot;) attention_mask = np.array(inputs[&quot;attention_mask&quot;]).astype(&quot;int32&quot;) encoded_att = model.layers[2](tokenized,attention_mask =attention_mask) #last attention layer last_attention=encoded_att.attentions[-1] Copy We finally recovered the 12 attention matrices from the last layer of the DistilBert. Interpreting through attention attribution# A first way to take advantage of the attention coefficients is to directly look at their value in order to evaluate if the right words stand out. We choose to calculate the average attention on all attention layers and heads. A more in-depth work of selection of the most relevant layer would allow to refine the interpretability method. Here, we limit ourselves to the most basic case. a,b = [], [] for head in range(0,12) : for i, elt in enumerate(inputs['input_ids'][0]): if np.array(elt) != 1: att = last_attention.numpy()[0,head][0][i] a.append(tokenizer.decode([elt]) + '_' + str(i)) b.append(att) attention_all_head=pd.DataFrame({&quot;Token&quot;:a,&quot;Attention coefficient&quot;:b}) Copy In order to have the average attention, we group by the attention score on all the layers and heads. We finally have the average attention coefficients associated with the words of the film review. As an example, the attention coefficients associated with the following positive review is calculated: “Probably my all time favorite movie a story of selflessness sacrifice and dedication to a noble cause but its not preachy or boring . it just never gets old despite my having seen it some 15 or more times in the last 25 years . paul lukas performance brings tears to my eyes and bette davis in one of her very few truly sympathetic roles is a delight . the kids are as grandma says more like dressedup midgets than children but that only makes them more fun to watch . and the mothers slow awakening to whats happening in the world and under her own roof is believable and startling . if i had a dozen thumbs they’d all be up for this movie&quot;. The review being long, we represent the text in color. The more red the color, the higher the associated attention coefficient. The result is shown below: Figure 3 - Attention-Based token importance We see that the word groups &quot;favorite movie&quot;, &quot;it just never gets old&quot;, &quot;performance brings tears&quot;, or &quot;it is believable and startling&quot; stand out. This explains well why the algorithm evaluated the review as positive and what was the semantic field at the root of this prediction. Next step# We will show in a future article how attention coefficients are useful for generating counterfactual examples to explain the model prediction. References# [1] VASWANI, Ashish, SHAZEER, Noam, PARMAR, Niki, et al. Attention is all you need. Advances in neural information processing systems, 2017, vol. 30. [2] SANH, Victor, DEBUT, Lysandre, CHAUMOND, Julien, et al. DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter. arXiv preprint arXiv:1910.01108, 2019. [3] Hugging face library https://huggingface.co/ "},{"title":"Interpreting its sentiment analysis algorithm: BERT and its attention coefficients (2/2)","type":0,"sectionRef":"#","url":"blog/2022/10/26/Interpretability_sentiment_analysis_II","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Science for business Operational Research Optimization Knapsack problem Deep Reinforcement Learning"},{"title":"Summary","type":1,"pageTitle":"Interpreting its sentiment analysis algorithm: BERT and its attention coefficients (2/2)","url":"blog/2022/10/26/Interpretability_sentiment_analysis_II#summary","content":"We propose to illustrate how far BERT-type models can be considered as interpretable by design. We show that the attention coefficients specific to BERT architecture constitute a particularly rich piece of information that can be used to perform interpretability. There are mainly two ways to do interpretability: attribution and generation of counterfactual examples. In a first article, we showed how attention coefficients could be the basis of an attribution interpretability method. Here we propose to evaluate how they can also be used to set up counterfactuals. Work presented in the previous article# Previously, the BERT [1] and DistilBERT [2] models have been mobilized to tackle the well-known problem of sentiment analysis. In particular, we have shown that the BERT and DistilBERT models contain within their architecture attention coefficients that can be at the heart of an attribution interpretability method. Starting from an initial text, a visualization of the weight assignment method was proposed. The more red the color, the higher the associated attention coefficient. Figure 1 - Attention-Based token importance We saw that the word groups &quot;favorite movie&quot;, &quot;it just never gets old&quot;, &quot;performance brings tears&quot;, or &quot;it is believable and startling&quot; stood out. This explained well why the algorithm evaluated the review as positive and what was the semantic field at the root of this prediction. This work was done using the Hugging Face transformers library [3]. Interpreting through counterfactual generation# Another way to do interpretability is to generate counterfactual examples. According to Judea Pearl, counterfactual &quot;involves answering questions which ask what might have been, had circumstances been different” [4]. Thus, the idea is to understand a prediction by generating a counterfactual example, resulting in an opposite prediction. In the context of natural language processing, it is therefore a matter of changing the right words in the review. In order to generate a counterfactual example, we propose the following methodology: Compute the attention coefficients of the tokens in a text corpus on each attention layer (6). The text corpus size must be statistically significant Perform token clustering based on their 6-dimensional representation Detect clusters associated with positively and negatively charged sentiment words Replace the tokens with the highest average attention with their &quot;opposite token&quot; in their &quot;opposite cluster&quot; This approach allows us to validate the interpretative strength of the tokens put forward by the attention coefficients, while illustrating what a close review would have been with an opposite sentiment. We apply the methodology on a corpus of 1000 reviews. The clustering method used is the hierarchical ascending classification (HAC) and gives 3 clusters. The obtained clusters and the counterfactual generation procedure can be represented in 2 dimensions as follows: Figure 2 - Token clusters &amp; replacements We then generate the counterfactual example of the review tested earlier by changing 2 words: delight ➡ torment favorite ➡ worst This gives us the following counterfactual example: “Probably my all time worst movie a story of selflessness sacrifice and dedication to a noble cause but its not preachy or boring . it just never gets old despite my having seen it some 15 or more times in the last 25 years . paul lukas performance brings tears to my eyes and bette davis in one of her very few truly sympathetic roles is a torment. the kids are as grandma says more like dressedup midgets than children but that only makes them more fun to watch . and the mothers slow awakening to whats happening in the world and under her own roof is believable and startling . if i had a dozen thumbs they’d all be up for this movie&quot;. As the text is quite long, 2 tokens are not enough to change the feeling associated with the review. The probability score nevertheless drops significantly by 0.3pts. One way to assess the quality of the generated counterfactual examples is to evaluate the proportion of reviews in a corpus whose associated sentiment has changed. The result can be represented as a &quot;counterfactual confusion matrix&quot; as follows: One way to assess the quality of the generated counterfactual examples is to evaluate the proportion of reviews in a corpus whose associated sentiment has changed. The result can be represented as a &quot;counterfactual confusion matrix&quot; as follows: Table 1 - Counterfactual confusion matrix example Where : X11 represents the share of reviews whose initial associated sentiment and the sentiment of the counterfactual example are positive; sentiment has remained the same X12 represents the share of reviews whose sentiment changed from positive to negative; sentiment did change X21 represents the share of reviews whose sentiment changed from negative to positive; sentiment changed wellX22 represents the share of reviews whose initial associated sentiment and the sentiment of the counterfactual example are negative; sentiment has remained the same We compute the &quot;counterfactual confusion matrix&quot; on the same text corpus that enabled us to perform clustering, picking 5 tokens for each review. The result is given below: Table 2 - Actual counterfactual confusion matrix Thus, we see that changing the 5 tokens with the highest average attention produces a change in sentiment perception in 44% of cases. In particular, the rate of sentiment change for reviews initially perceived as positive is 31% while the rate of sentiment change for reviews initially perceived as negative is 53%. The change from negative to positive seems to be better achieved with our method. We have shown that attention coefficients can be a source of interpretability. Used in the right way, the attention coefficients allow the detection of tokens with high predictive value. They can also be used to generate counterfactual examples in order to better understand what the sentence should have been in order to be associated with an opposite sentiment. The interest of the attention coefficients is reinforced by the &quot;counterfactual confusion matrix&quot;: The high transformation rate of the reviews' sentiments shows that the tokens selected thanks to the attention are strongly meaningful. Next step# We plan to test other ways to generate counterfactual examples. One way would be to take advantage of the way DistilBert has been trained: the mask language modeling (MLM). The idea would be to mask the tokens with high average attention, and replace them with the tokens with the highest softmax in the &quot;opposite cluster&quot;. This would ensure the grammatical correctness of the generated counterfactual example. Finally, the generation of counterfactual examples can have other applications than interpretability. In particular, it becomes possible to perform data augmentation in order to give more examples to a model. It can mitigate biases by balancing the sentiments of biased discriminated populations. This would improve fairness indicators while not degrading accuracy. References# [1] VASWANI, Ashish, SHAZEER, Noam, PARMAR, Niki, et al. Attention is all you need. Advances in neural information processing systems, 2017, vol. 30. [2] SANH, Victor, DEBUT, Lysandre, CHAUMOND, Julien, et al. DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter. arXiv preprint arXiv:1910.01108, 2019. [3] Hugging face library https://huggingface.co/ [4] PEARL, Judea et MACKENZIE, Dana. The book of why: the new science of cause and effect. Basic books, 2018 "},{"title":"Deploying a Python Dash application for beginners","type":0,"sectionRef":"#","url":"blog/dash-deployment","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Industrialization Docker Heroku Python Dash"},{"title":"Creating a Dash application","type":1,"pageTitle":"Deploying a Python Dash application for beginners","url":"blog/dash-deployment#creating-a-dash-application","content":"Before deployment, the first step if of course to create your own application. You can follow the guidelines in Dash official documentation https://dash.plotly.com/installation  "},{"title":"Deploying your Dash application","type":1,"pageTitle":"Deploying a Python Dash application for beginners","url":"blog/dash-deployment#deploying-your-dash-application","content":"https://dash.plotly.com/deploymentDash/Plotly offers a paid service to super easily deploy and manager your applications. Yet as most of it is open source, and you may want a simple thing for a prototype, you can simply deploy it in your own server. Then you have several options: Beginners - Deploy it on a simple Heroku serverAdvanced - Deploy it on a cloud server (AWS, GCP, Azure) with docker containers "},{"title":"Deploying on Heroku from GitHub","type":1,"pageTitle":"Deploying a Python Dash application for beginners","url":"blog/dash-deployment#deploying-on-heroku-from-github","content":"Heroku is the most simple server provider. It's even more simpleYou can create and deploy apps for free in just a few minutes. That's what we are going to do here : Create your dash app, eg app.py (from Dash tutorial) # -*- coding: utf-8 -*- # Run this app with `python app.py` and # visit http://127.0.0.1:8050/ in your web browser. import dash import dash_core_components as dcc import dash_html_components as html import plotly.express as px import pandas as pd external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css'] app = dash.Dash(__name__, external_stylesheets=external_stylesheets) server = app.server # assume you have a &quot;long-form&quot; data frame # see https://plotly.com/python/px-arguments/ for more options df = pd.DataFrame({ &quot;Fruit&quot;: [&quot;Apples&quot;, &quot;Oranges&quot;, &quot;Bananas&quot;, &quot;Apples&quot;, &quot;Oranges&quot;, &quot;Bananas&quot;], &quot;Amount&quot;: [4, 1, 2, 2, 4, 5], &quot;City&quot;: [&quot;SF&quot;, &quot;SF&quot;, &quot;SF&quot;, &quot;Montreal&quot;, &quot;Montreal&quot;, &quot;Montreal&quot;] }) fig = px.bar(df, x=&quot;Fruit&quot;, y=&quot;Amount&quot;, color=&quot;City&quot;, barmode=&quot;group&quot;) app.layout = html.Div(children=[ html.H1(children='Hello Dash'), html.Div(children=''' Dash: A web application framework for Python. '''), dcc.Graph( id='example-graph', figure=fig ) ]) if __name__ == '__main__': app.run_server(debug=True) Copy Create a requirements file, eg requirements.txt. You can use tools such as pipreqs, pipenv or other environment managers to help you create the right file. Don't forget to add if not present the requirements to gunicorn in your requirements fileCreate a Procfile - it's a text file to help Heroku understand what file to be launched on the server. Write in it the following command.  web: gunicorn app:server Copy As of 2020-12-01, Dash documentation is not totally correct when it comes to deployment on Heroku, you should correctly link the server variable in Python and the declaration in the Procfile : # Add following line in your app.py script server = app.server # Write the Procfile # - app refer to the file name app.py # - server refer to the variable name for the Flask Server web: gunicorn app:server Copy At the end your repo on Github should look like this: app.py Procfile requirements.txt Copy Deploy directly on Heroku from GitHub, you can follow the instructions below Create a new application Find the right name and server region Link via github, search for your repo and click on connect Deploy manually by clicking on deploy and choosing the right github branch You can even set up a CI/CD process with auto-deploys by playing with the auto-deploy section You are all set ! Your app should be live ! Problems you can encounter# Having your app not at the root of the repo, you can use subdir buildpackNot linking correctly your server in the ProcfileHaving difficulties to link with a database  tip If your app does not work, you can check in the logs why it failed : What Heroku is doing under the hood# Heroku does a lot for us actually. It detects the technology behind the web server pushed on Heroku (Python, Node, etc...). Looks for a Procfile with instructions on how to launch the server. And knows many things on how to set it up. For example for Python servers, it will look first to find a requirements.txt file or pipenv.lock file. For a Node.js server it will look at the package.json and the lock file as well. "},{"title":"Deploying with Docker","type":1,"pageTitle":"Deploying a Python Dash application for beginners","url":"blog/dash-deployment#deploying-with-docker","content":"If you want to better master what you are deploying. You may want to use Docker. It's actually universal and you'll be able to deploy it almost anywhere. I just google searched &quot;Dockerfile Dash&quot; and found a suitable example as a template https://github.com/jucyai/docker-dash/blob/master/Dockerfile How does it work? You will setup a virtually empty server with nothing but python 3.9 and the application, i.e a Container. FROM python:3.9 ENV DASH_DEBUG_MODE True COPY ./app /app WORKDIR /app RUN set -ex &amp;&amp; \\ pip install -r requirements.txt EXPOSE 8050 CMD [&quot;python&quot;, &quot;app.py&quot;] Copy Using this Dockerfile you could be able to deploy anywhere from GCP to Azure or even Heroku. "},{"title":"Going further","type":1,"pageTitle":"Deploying a Python Dash application for beginners","url":"blog/dash-deployment#going-further","content":"To better deploy, it's always interesting to learn more about what you are manipulating. Here, you have to know that Dash is a wrapper for other technologies put together, and in particular: Flask as backend and serverReact as frontendPlotly (the python library) for most graphs If you want to be a Deployment ninja 🐱‍👤, you may find useful to learn more about Flask and webservers in general. And eventually learn about React. "},{"title":"Adding databases","type":1,"pageTitle":"Deploying a Python Dash application for beginners","url":"blog/dash-deployment#adding-databases","content":"What is recommended is to avoid storing your database in the same server. You should approach the problem with a &quot;microservice&quot; mindset, meaning that you should put your database on another server. Indeed, it means you have to do another deployment, maybe using Docker again to expose your database correctlyBut, it also decouple your app in production with the database, allowing you for more modularity (requesting the database in other platforms)  "},{"title":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","type":0,"sectionRef":"#","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Data Science for business Operational Research Optimization Knapsack problem Deep Reinforcement Learning"},{"title":"Why you should read this","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#why-you-should-read-this","content":"This article is primarily directed to machine learning practitioners. Here you will find a practical application of object detection algorithms. We present different open-source resources, comparisons and trade-offs in model selection for specific objects, and methodology to improve performance for custom data sets. "},{"title":"Manual labeling of the Training and Validation data sets","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#manual-labeling-of-the-training-and-validation-data-sets","content":"In order to train custom train models (Part II of these series), as well as to evaluate the performance of all models, a proportion of the images were manually labeled in the Microsoft Azure Machine Learning Studio labeling tool. The tool facilitates the interactive selection of the region of interest, and the labeling of said region with a pre-defined object label, as shown in Figure 1.    Figure 1 - Microsoft Azure Machine Learning Studio Image labeling Tool. Source: Microsoft.  Before undertaking the task of manually labeling images, and specially if it is done by a team of people and not a single person, it is advisable to have a pre-defined set of rules on how to approach the task. For example: when labeling “Person”, will you label only whole people? Or would you also label body parts as &quot;Person&quot;? Or at least those that show a face? - It is also important to ensure that all relevant objects in an image are labeled, specially in the validation data set, since that will constitute the ground truth when it comes to evaluating the performance of Object Detection models. When this is not done carefully, it becomes a problem, as some OD models might actually detect more objects than those which have been manually labeled. Distribution of Objects in Manually labeled Data set and Implications for the labeling of the Unlabeled Data set# The train, validation and unlabeled data sets were created by taking random samples of all the creatives. This strategy generated a training and validation set that have very close matching distributions of the labels of interest, as shown in Figure 2. Therefore, we assessed that it is likely that the performance of the models (pre-trained or custom) on the validation data sets will be transferable to the unlabeled data sets.    Figure 2 - The distribution of labeled objects in the Train (outer) and Validation (inner) data sets.  "},{"title":"Models","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#models","content":"The object detection process relied on a combination of pre-trained and custom-trained models from two Python libraries: Tesseract and Detectron2. Tesseract, an open-source Optical Character Recognition (OCR) library, was used for detecting text, while Detectron2, Facebook AI Research's next-generation platform for object detection and segmentation, was used for the remaining objects. We will explore the details of Tesseract in Part III of this series. From Detectron2, pre-trained object detection models were used for detecting common objects such as people, cars, and technology, while custom-trained models were used for detecting brand-specific objects such as logos (see Part II). Figure 3 outlines the objects detected by each model type.    Figure 3 - Object Detection using different pre-trained and custom-trained models.  "},{"title":"Pre-Trained Models","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#pre-trained-models","content":"Pre-trained Detectron2 models are trained on the Microsoft COCO (Common Objects in Context) data set [1]; a large-scale object detection, segmentation, and captioning data set popularly used for computer vision projects. It contains over 200k labeled images, across 80 object categories (person, car, etc.) and 90 &quot;stuff&quot; (sky, grass, etc.) categories. However, for this study, we focused only on the detection of objects relating to the features of interest, detailed in figure 4.    Figure 4 - COCO Objects Detected in Pre-Trained Models, Present in Creatives of Brands Studied  "},{"title":"Choosing a Detectron2 Pre-Trained Model","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#choosing-a-detectron2-pre-trained-model","content":"The performance on Accuracy and Confidence Score (see figure 5 - Definition Box 1) were compared for three models : Model 1: Faster R-CNN R50 FPN 1x Model 2: Faster R-CNN R101 FPN 3x Model 3: Faster R-CNN X 101 32x8d FPN 3x Overall, Model 3 has the highest average Accuracy while Model 2 has the highest average Confidence Score. The number of creatives with correctly identified objects is highest in Model 3. Figure 6 shows the results.    Figure 5 - Definition Box 1  More in detail, for each object type: People: All three models have varying performance in detecting people across different brands. Overall, Model 3 has the highest accuracy.Technology: Model 2 is most confident in detecting tech, but misses tech in many creatives entirely. Overall, Model 3 has the highest accuracy.Cars: Model 3 has the highest average confidence and accuracy in detecting cars.Hotel Interiors and Food: Model 2 and Model 3 have a similar performance in detecting food and interior, both higher than Model 1.  Figure 6 - Comparison in performance on the validation data set of three pre-trained Detectron2 models.  Furthermore, Model 3 overcomes challenges faced by the other two models, such as identifying people in close-up shots, identifying cars from interior shots, and identifying technology when in a person’s hand or lying on a table. Figures 7 and 8 show the performance of Model 3 on the specific Objects of interest. In particular, the Confidence Scores (figure 8) that lead to the high Accuracies in figure 7 range from between 80% to 98%. As we developed our methodology to be applicable regardless of the industry, we needed to choose a Confidence Score Threshold of Acceptance that is high enough to ensure accuracy, but not too high that it would miss objects of interest entirely. Therefore, a threshold of 85% confidence was selected.  Figure 7 - Accuracy of Faster R-CNN X 101 32x8d FPN 3x on Specific Object Types.   Figure 8 - Average Confidence of Faster R-CNN X 101 32x8d FPN 3x on Specific Object Types.  Finally, since our creatives comprise of both still images, as well as frames extracted from video files, we wanted to make sure Object Detection was accurate in both types of images. Figure 9 shows the performance of Faster R-CNN X 101 32x8d FPN 3x (Model 3). The confidence scores do not differ significantly between frames and still images (at most 1.4% points). This means that the model can recognise object of interest with equal confidence in both types of images. The differences in performance may be attributed to people in frames more often being close-up; cartoons appear in frames while they are absent in stills; and frames of cars over-index on close-up shots and interior shots. The total detection time for all brands ranged 210 hours.    Figure 9 - Performance of Faster R-CNN X 101 32x8d FPN 3x on Still vs Frame images.  "},{"title":"Useful links","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#useful-links","content":"Detectron2 - GithubDetectron2 - DocumentationDetectron2 - ModelZoo "},{"title":"Snippets of code","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#snippets-of-code","content":""},{"title":"Installations","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#installations","content":"!pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/$CUDA_VERSION/torch$TORCH_VERSION/index.html Copy "},{"title":"Import libraries","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#import-libraries","content":"import detectron2 from detectron2.engine import DefaultPredictor from detectron2.config import get_cfg from detectron2.data import MetadataCatalog, data setCatalog from detectron2.utils.visualizer import ColorMode, Visualizer from detectron2 import model_zoo from detectron2.evaluation import COCOEvaluator, inference_on_data set from detectron2.data import build_detection_test_loader from PIL import Image import cv2 Copy "},{"title":"Define detector class","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#define-detector-class","content":"class Detector: def __init__(self): self.cfg = get_cfg() # Load model config and pretrained model model_name = &quot;COCO-Detection/faster_rcnn_R_101_FPN_3x.yaml&quot; # model_name = &quot;COCO-Detection/faster_rcnn_R_50_FPN_1x.yaml&quot; # model_name = &quot;COCO-Detection/faster_rcnn_X_101_32x8d_FPN_3x.yaml&quot; self.cfg.merge_from_file(model_zoo.get_config_file(model_name)) self.cfg.MODEL.WEIGHTS = model_zoo.get_checkpoint_url(model_name) self.cfg.MODEL.ROI_HEADS.SCORE_THRESH_TEST = 0.85 self.cfg.MODEL.DEVICE = &quot;cpu&quot; # or cuda self.predictor = DefaultPredictor(self.cfg) # Define a function to visualise the result of the prediction on an image and print the label IDs def onImages(self, imagePath, if_visualise=False, if_print=False): # Get predictions image = cv2.imread(imagePath) predictions = self.predictor(image) instances = predictions[&quot;instances&quot;] class_indexes = instances.pred_classes prediction_boxes = instances.pred_boxes class_catalog = MetadataCatalog.get(self.cfg.data setS.TRAIN[0]).thing_classes class_labels = [class_catalog[i] for i in class_indexes] class_scores = instances.scores # Visualise preditions if if_visualise: viz = Visualizer(image[:,:,::-1], metadata = MetadataCatalog.get(self.cfg.data setS.TRAIN[0]), #scale=1 instance_mode = ColorMode.IMAGE_BW #IMAGE #SEGMENTATION #IMAGE_BW ) output = viz.draw_instance_predictions(predictions[&quot;instances&quot;].to(&quot;cpu&quot;)) plt.figure(figsize = (25,17)) plt.imshow(output.get_image()[:, :, ::-1]) # Print labels if if_print: print(f&quot;Class Labels: {class_labels}&quot;) print(f&quot;Class Confidence Scores: {class_scores}&quot;) print(f&quot;Class Indexes: {class_indexes}&quot;) print(f&quot;Prediction Boxes: {prediction_boxes}&quot;) return class_indexes, prediction_boxes, class_labels, class_scores # valuate its performance using AP metric implemented in COCO API. # https://detectron2.readthedocs.io/modules/evaluation.html#detectron2.evaluation.COCOEvaluator def evaluate(self, data set_name): evaluator = COCOEvaluator(data set_name, self.cfg.OUTPUT_DIR)#self.cfg, False, self.cfg.OUTPUT_DIR) val_loader = build_detection_test_loader(self.cfg, data set_name) result = inference_on_data set(self.predictor.model, val_loader, evaluator) print(result) Copy "},{"title":"Run detector","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#run-detector","content":"# label new creatives job_name = 'new_creatives_set_50_scores_faster_rcnn_X_101_32x8d_FPN_3x' datapath = &quot;your-data-path&quot; save_path = &quot;your-save-path&quot; # get list of all image files to process im_files_ext = ['jpg','png','jpeg','gif','webp','tiff','psd','raw','bmp','heif','indd','jpeg 2000','svg','ai','eps','pdf'] ims_list = [] for ext in im_files_ext: temp = glob.glob(f'{datapath}*.{ext}') for file in temp: ims_list.append(file) num_files = len(ims_list) print(num_files) print(ims_list) # get list of all image files to process im_files_ext = ['jpg','png','jpeg','gif','webp','tiff','psd','raw','bmp','heif','indd','jpeg 2000','svg','ai','eps','pdf'] ims_list = [] for ext in im_files_ext: temp = glob.glob(f'{datapath}*.{ext}') for file in temp: ims_list.append(file) num_files = len(ims_list) print(num_files) print(ims_list) # Initialise detector detector = Detector() # Run detector on chunks j = 1 # for keeping track of chunk for chunk in chunks: # Create export file df = pd.DataFrame(columns=['file_name', ' class_indexes', 'prediction_boxes', 'class_labels', 'class_scores']) i = 1 # for keeping track of file number for im_file in chunk: start = time.time() class_indexes, prediction_boxes, class_labels, class_scores = detector.onImages(f'{im_file}', if_visualise=False, if_print=False) new_row = {'file_name': im_file, 'class_indexes': class_indexes.tolist(), 'prediction_boxes': prediction_boxes, 'class_labels': class_labels, 'class_scores': class_scores.tolist() } df = df.append(new_row, ignore_index=True) end = time.time() print(f'\\tChunk {j}/{len(chunks)} - file {i}/{len(chunk)}: {im_file} took {end-start} seconds.') i = i + 1 sp = f'{save_path}{job_name}_chunk_{j}.csv' df.to_csv(sp, sep=',', header=True, index=False) print(f&quot;\\t\\tJSON saved in: {sp}&quot;) j = j + 1 Copy "},{"title":"Other helpful code","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#other-helpful-code","content":"def display_im_path(dbfs_img_path, figsize=(14,10)): image = Image.open(dbfs_img_path) plt.figure(figsize=(14,10)) plt.imshow(image) plt.axis('off') plt.show() Copy def display_im_array(array, figsize=(14,10)): plt.figure(figsize=figsize) plt.imshow(array) plt.axis('off') plt.show() Copy def get_files(basepath, num=None): all_files = os.listdir(basepath) im_files_ext = ['jpg','png','jpeg','gif','webp','tiff','psd','raw','bmp','heif','indd','jpeg 2000','svg','ai','eps','pdf'] img_list_all = [f&quot;{basepath}{file}&quot; for file in all_files if file.split('.')[-1] in im_files_ext] # random.shuffle(img_list_all) if num: return img_list_all[:num] else: return img_list_all Copy "},{"title":"Next article","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#next-article","content":"After having explored Detector2 pre-trained models in this first part, in the next article, we will present custom-trained Detectron2 models, how they were used to detect logos, brand cues, faces and smiles, and code snipped on how to optimise parameter values. Stay tuned! "},{"title":"Appendix","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#appendix","content":""},{"title":"Resources","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#resources","content":"An Azure Resource Group was set up in order to manage the Storage, Code Development and Machine Learning Studio functionalities. All the data was stored in Azure Storage. All code to process images, and implement Object Detection was written in Python scripts, in Azure Databricks notebooks. labeling of images was done in Azure Machine Learning Studio. Custom-trained models were trained and validated, and the unlabeled data set was labeled using the chosen models (both pre-trained and custom-trained), in a GPU cluster (Databricks Runtime Version 9.1 LTS ML includes Apache Spark 3.1.2, GPU, Scala 2.12 with Node Type Standard_NC_12 112 GB memory and 2 GPUs). Images were funnelled through the models in chunks of 200 images. "},{"title":"Detectron2","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#detectron2","content":"Detectron2 is a Facebook AI Research (FAIR) open-source library that provides object detection and segmentation algorithms [2-5]. It is implemented in PyTorch, and includes state-of-the-art algorithms like RetinaNet, Mask R-CNN, TensorMark and Faster R-CNN. Its training pipeline is GPU-run, making it fast and highly scalable. Furthermore, its modular nature allows for custom models to be created within an existing object detection framework. As a result, it was more suited for the needs of this study than other common object detection libraries like Yolov4. For both the pre-trained and custom models, a Faster R-CNN algorithm was used due to its speed and high performance on small object detection. This algorithm combines two network models: Fast R-CNN (Region based Convolutional Neural Network), a deep learning algorithm which generates a convolutional feature map, and RPN (Regi on Proposal Networks), a convolutional network that proposes regions. The specific model used was Faster R-CNN X 101 32x8d FPN 3x, a Faster R-CNN model developed by Detectron2 which uses a FPN (Feature Pyramid Networks) backbone, and a learning rate schedule of 3x. This model was chosen based on the baseline performances reported by FAIR, which highlight this model as having the highest average precision and training memory. For more information. Furthermore, the model was tested and evaluated against the performance of other Faster R-CNN models on objects the models are pre-trained on, against out Validation set. Figure 6 shows the results. "},{"title":"Manipulating Bounding Boxes","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#manipulating-bounding-boxes","content":"Different technologies (Azure, Detectron2, Tesseract) have different formats when it comes to annotating the bounding boxes [6]. Therefore, it was necessary to manipulate the bounding boxes as follows (figure 10): In order to train the Custom-Trained Models, the Azure format was converted to the Detectron2 format: COCO bounding box (bbox) is defined as [x_min, y_min, width, height]. JSON files exported from Azure Data labeling have bounding boxes that are normalised. Detectron2 expect the bounding boxes in absolute values. Therefore, we transformed the attribute 'bbox' of the COCO file downloaded from Azure ML Studio to denormalise it, and added the 'bbox_mode' attribute to be equal to 1 (XYWH_ABS 0). We also add the pair &quot;iscrowd:0&quot; to each annotation [8]. In order to limit the region in images for text detection to outside of Logo and Product objects, Detectron2 format was transformed to Tesseract format: Detectron2 format [X, Y, W, H] to the Tesseract format (x1=X, x2=W+X, y1=Y, y2=H+Y).  Figure 10 - Manipulation of bounding boxes to accommodate each technology. The first transformation (from left to right) was necessary to train Custom-Trained models. The second transformation was necessary to limit the region in images for text detection to anything outside of logo or product objects.  "},{"title":"Detecting Faces with Open libraries with Pre-Trained Models","type":1,"pageTitle":"Exploring the links between creative execution and marketing effectiveness - Part I: Detectron2 Pre-Trained Object Detection Models","url":"blog/2022/11/10/creative_execution_and_marketing_effectiveness_part_I#detecting-faces-with-open-libraries-with-pre-trained-models","content":"To detect Faces and Smiles, we began by exploring open libraries that have pre-trained models for this purpose. Figure 11 shows some of the libraries available, as well as those we tested.  Figure 11 - Open libraries with pre-trained models that detect faces and smiles, and those we tested.  We tested three different open libraries that are optimised for face detection. The Haar Cascades model has two parameters that need to be optimised, so we set up two sets of 52 experiments to find the optimum models that detect Faces and Smiles. Visually, it was clear that the models had a very high rate of False Positives, therefore we enhanced the detection algorithm by limiting the detection zone for smiles to be only inside the bounding boxes of faces, as shown in figure 12.    Figure 12 - Smiles being detected inside faces only was a necessary methodology we implemented, to improve the accuracy of open libraries that detect faces and smiles.  Furthermore, as there were no ready-made functions in the libraries to assess the performance of predictions, we developed a method that compared the intersection of the bounding boxes between of the manually labeled and predicted objects, as shown in figure 13. All the models tested suffered from having a high False Positive Rate. The best performing model was with library DLIB, with an Accuracy of 59%, a True Positive Rate of 41% and a False Positive Rate of 36%. Therefore, we needed a better methodology for detecting Faces and Smiles, so we tested training a custom Detectron2 model to do so, as described in Part III of this series.    Figure 13 - Methodology for assessing whether a predicted label for Face or Smile is accurate. Blue boxes indicate the bounding box of manually labeled objects. Yellow boxes indicate those for predicted objects. The grey area indicates the Region of Intersection (ROI). If the grey areas are between 60% and 130% of the size of the manually labeled object’s bounding box, the predicted label was considered to be accurate.  "},{"title":"Introduction to Pyepidemics - epidemiological modeling in Python","type":0,"sectionRef":"#","url":"blog/introduction-pyepidemics","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence Pyepidemics Epidemiology System Dynamics"},{"title":"Pyepidemics","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#pyepidemics","content":""},{"title":"Context","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#context","content":"During the first wave of COVID19 in 2020, Ekimetrics joined the CoData movement, a coalition of data and artificial intelligence specialists whose goal was to pool their skills to provide answers and solutions on the evolution of the pandemics. We had the chance to work with many epidemiological experts, and as we went along we built a toolbox to facilitate our modeling of the current pandemics. We then put this toolbox in open source under the name pyepidemics to contribute to the community on this scientific discipline difficult to apprehend for Data Scientists but with obvious bridges facilitating innovation. Today, with the resurgence of the epidemic in Europe, it seemed important to present this library more widely to democratize these analyses on a larger scale. The library is available on Github at this linkThe documentation is available at this link This article will serve as a synthetic presentation of what can be done with the library, please refer to the documentation for more details. Do not hesitate to post issues on Github and to contribute with new proposals, the development is still in experimental version. "},{"title":"Introduction to Pyepidemics","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#introduction-to-pyepidemics","content":"Pyepidemics allows to simply create compartmental epidemiological models (also used in system dynamics) and to solve the differential equations that model the phenomenon. The different features implemented today are: Creation of classical compartmental models (SIR, SEIR, SEIDR, etc...)Creation of COVID19 related model (with ICU and different levels of symptoms)Creation of custom compartmental modelImplementation of policies (lockdown, tracing, testing, etc...)Calibration of epidemiological parameters on real-world data using Bayesian optimization "},{"title":"Installation","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#installation","content":"You can simply install pyepidemics using the command pip install pyepidemics Copy "},{"title":"Introduction to epidemiological modeling in Python","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#introduction-to-epidemiological-modeling-in-python","content":"The images, the reasoning and the construction of the first bricks of the library are largely inspired by the exceptional work of Henri Froese with his series of articles on epidemiology, in particular the first article Infectious Disease Modelling: Beyond the Basic SIR Model. "},{"title":"Compartmental models","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#compartmental-models","content":"An epidemic is modeled with the different possible states for the population, for example: unaffected, immunized, vaccinated, symptomatic patient, asymptomatic patient, hospitalized, in intensive care ... Each state will be modeled with a compartment, and the population will transition between the different compartments according to parameters of probability and transition duration. In concrete terms, this means solving a system of differential equations as a function of time. For example the simplest compartmental model is the SIR model (for the 3 states Susceptible - Infected - Removed). It is possible to write the following compartments with their transition:  The transition parameters being given by :  "},{"title":"Building a SIR model with pyepidemics","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#building-a-sir-model-with-pyepidemics","content":"This section is detailed in this tutorial which is also available directly on Colab. Using the bank of models# As the SIR model is a standard model, you can find an already coded version in the model bank. We will learn in the next section how this abstraction is built to allow you to add details in the modeling. With pyepidemics: from pyepidemics.models import SIR N = 1000 # Thousand persons beta = 3/4 # One person contaminates 3/4 person per day gamma = 1/4 # One person stay infected for 4 days sir = SIR(N,beta,gamma) Copy It is then possible to solve the system of differential equations simply with the method .solve() (more parameters are available, see the tutorial quoted above : states = sir.solve() states.show(plotly = False) Copy What is commonly called an epidemic &quot;wave&quot; is observed.  Reimplementing the SIR model# Let's now go into the internal workings of this abstraction to reimplement its operation in a few lines of code. Concretely we build a graph between the different states by detailing the transitions. Pyepidemics then translates this graph into a system of differential equations in order to solve it. from pyepidemics.models import CompartmentalModel class SIR(CompartmentalModel): def __init__(self,N,beta,gamma): # Define compartments name and number compartments = [&quot;S&quot;,&quot;I&quot;,&quot;R&quot;] super().__init__(compartments) # Parameters self.N = N # Total population self.beta = beta # How many person each person infects per day self.gamma = gamma # Rate of infection, duration = 1/gamma # Add transition self.add_transition(&quot;S&quot;,&quot;I&quot;,lambda y,t: self.beta * y[&quot;S&quot;] * y[&quot;I&quot;] / self.N) self.add_transition(&quot;I&quot;,&quot;R&quot;,lambda y,t: self.gamma * y[&quot;I&quot;]) Copy So it is possible to build any kind of compartmental model with this operation. You can see more complex examples in this tutorial. "},{"title":"Create a realistic epidemiological model for COVID19","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#create-a-realistic-epidemiological-model-for-covid19","content":"In the first section we saw how to build a SIR model, however we are far from being able to use this model to simulate an epidemic like COVID19 and for governments to be able to take actions using those analyses. For this we would need to: Have a more complete description taking into account the specifics of the disease statesTake into account the mitigation strategies provided by governmentsCalibrate the model to describe the evolution of the epidemic as closely as possible "},{"title":"Build the right compartmental model","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#build-the-right-compartmental-model","content":"Indeed, the COVID19 is more specific than simply the 3 SIR states described above. During the year 2020, we used the following compartmental model inspired by the work of the Pasteur Institute and the INSERM (taking into account the different levels of symptoms, the incubation phase, and the passages in hospital or in intensive care)  You can look in the library at the implementation of the COVID19 model to see the implementation (very close to what has been described above for the SIR model, one of the strengths of pyepidemics). "},{"title":"Describe the mitigation solutions implemented (containment, testing)","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#describe-the-mitigation-solutions-implemented-containment-testing","content":"Some parameters, such as the famous &quot;R0&quot;, have varied enormously during the epidemic depending on behaviors (distancing, masks), policies (testing, lockdowns, vaccination), or variants of the epidemic. Thus, to create a realistic model, we need to take these variations into account. We will take the example of the first lockdowns to understand how to implement these variations with pyepidemics. Let's create an evolution of the parameter R(t) according to the different lockdowns (during the first wave for example) from pyepidemics.policies.utils import make_dynamic_fn policies = [ 3.3/4, (1/4,53), (2/4,80), ] fn = make_dynamic_fn(policies,sigmoid = False) # Create our time-dependent parameter beta = lambda y,t : fn(t) # Visualize policies x = np.linspace(0,100) y = np.vectorize(fn)(x) plt.figure(figsize = (15,4)) plt.plot(x,y) plt.show() Copy  And that's it! We can use this time-dependent parameter like we used a constant before. To see more complete examples and results, you can redirect to this tutorial. "},{"title":"Find the most appropriate parameters for calibration","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#find-the-most-appropriate-parameters-for-calibration","content":"Finally, in the previous example, as in those before, we chose arbitrarily the values of the different probabilities and transition times. But these are precisely what epidemiologists want to estimate. How does this work? Simply by testing different parameters until the solution of the compartmental model matches as much as possible the real evolution of the epidemic. Of course, we are not going to test all the combinations but rather : Start with an a priori on the different parameter values from the most recent epidemiological studies Use a Bayesian optimization algorithm to go through the parameter space efficiently without having to calculate everything.  These two methods are easy to implement with pyepidemics if we have a pyepimemics model with a .reset() method that recreates a compartmental model with the new set of parameters. First we create a parameter space to explore: space = { &quot;beta_low&quot;:(0.01,0.4), &quot;beta_high&quot;:(0.6,1.5), &quot;I0&quot;:(0,100), &quot;recovery_rate_asymptomatic&quot;:(1/8,1/2), &quot;recovery_rate_mild&quot;:(1/8,1/2), &quot;death_rate_hospital&quot;:(0.006,0.02), &quot;death_rate_icu&quot;:(0.006,0.02), &quot;recovery_rate_icu&quot;:(0.02,0.08), &quot;recovery_rate_hospital&quot;:(0.02,0.08), } Copy Then we will simply use the method .fit() by giving as input a dataframe with the real values of the epidemic for the compartments for which we would have succeeded in obtaining data (in general the deaths and the hospital stays which are the most reliable). model.fit( cases[[&quot;D&quot;,&quot;H&quot;,&quot;ICU&quot;]], space, n = 200, early_stopping = 100, ) Copy This step is not easy, takes time and often also requires iterations to change the definition of the compartmental model. But once solved it is what allows epidemiologists to follow the dynamics of the pandemic. More details on calibration are available in this tutorial. "},{"title":"Conclusion","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#conclusion","content":"With this article we could introduce you to our epidemiological modeling library pyepidemics - simple modeling, flexible compartmental models, calibration, dynamic parameters, etc... The details of the different features are available in the library documentation. As previously mentioned, this library is still under experimental development, we are still using it to model the 5th wave of the epidemic, in particular by adding compartments for vaccination - we will write an article on the modeling in the coming months. Do not hesitate to contribute to democratize this discipline to the Data Science community. "},{"title":"References","type":1,"pageTitle":"Introduction to Pyepidemics - epidemiological modeling in Python","url":"blog/introduction-pyepidemics#references","content":"These few references helped us greatly during the development of the library Infectious Disease Modelling: Beyond the Basic SIR ModelExpected impact of lockdown in Île-de-France and possible exit strategies - by INSERMEstimating the burden of SARS-CoV-2 in France - by Institut Pasteur "},{"title":"Welcome to the new Ekimetrics Tech website!","type":0,"sectionRef":"#","url":"blog/welcome","content":"","keywords":"Data Science EkiLab Ekimetrics Eki.Lab Eki Machine Learning Artificial Intelligence"},{"title":"Welcome to our technology website!","type":1,"pageTitle":"Welcome to the new Ekimetrics Tech website!","url":"blog/welcome#welcome-to-our-technology-website","content":"We have been working in the Data Science industry for 15 years and are now the biggest pure player in Europe with 250+ data profiles. We have been benefiting from the open source community for a while, and we want to give back to the community by sharing insights on what we've learned over the years: Blog - read articles on various Data topics: from industrialization on cloud platforms to exotic Deep Learning algorithmsTrainings - access to our internal trainings and tutorials we can provide accessBest practices &amp; convictions - discover our programming best practices, our tech convictions and preferred technologiesHackathons &amp; challenges - immerse yourself in our Data Science hackathons and challenges to test and improve your skills Open source contributions - browse our own open source contributions (Python libraries, code snippets) 💌 After reading behind the scenes of the Data Science Company, feel free to send us a email for any questions or feedbacks! "},{"title":"About Ekimetrics","type":1,"pageTitle":"Welcome to the new Ekimetrics Tech website!","url":"blog/welcome#about-ekimetrics","content":"Ekimetrics is the first pure player in Data Science in Europe. We operate from Paris, London, New York and Hong Kong with 250+ Data Scientists, Data Engineers, Full Stack Developers, strategy consultants and UX designers. We help companies steer their data opportunity, build data capabilities, and deploy actionable solutions, to power up marketing and operational performance, as well as (re)energizing business models. Our primary focus is to deliver immediate business gains, while guaranteeing sustainable data capital for our clients. "},{"title":"Eki.Lab","type":0,"sectionRef":"#","url":"docs/","content":"","keywords":""},{"title":"The Lab","type":1,"pageTitle":"Eki.Lab","url":"docs/##","content":"Our innovation lab is the first step in our R&amp;D process. State-of-the-art AI for business - We study the state-of-the-art AI research straight from AI labs (Graph Neural Networks, Bayesian Neural Networks, Reinforcement Learning, Structural Time Series modeling, Causality) to find ways to apply those techniques on unsolved business problems.AI For Good - We challenge ourselves to always ensure a responsible use of Data and using our AI algorithms ethically. We research new ways of studying bias, enforcing algorithm transparency or maintaining Data privacy. We also do pro-bono research from climate change to epidemiological modeling.Data capabilities - in an everchanging field, we need to stay up-to-date with the latest technologies to industrialize, scale, and operate our Data Science solutions. We research and implement connectors to deploy APIs in 5 mins, configure infrastructure-as-code, or facilitate the Data Science workflows with pre-industrialized templates "},{"title":"The Factory","type":1,"pageTitle":"Eki.Lab","url":"docs/##","content":"Our innovation factory is aimed at developing new solution and prototypes for our clients. We created an inner-source mindset to create, maintain and update canonical blocks which will populate our solutions. Prism - our internal Marketing Mix Optimization framework powered by Genetic Optimization and Hierarchical Bayesian modelingHorizon - our Demand Forecasting solution with hybrid algorithms to merge business hypotheses and forecasting models (from simple regressions to structural time series models)And many more solutions on Customer Centricity, Operational Excellence, or pure Data Science helper tools  "},{"title":"The Community","type":1,"pageTitle":"Eki.Lab","url":"docs/##","content":"Curiosity is one of our key values. We organize several events to keep our Data Scientists updated on the latest trends in the field: Data Science Sessions - weekly presentations on various and sometimes exotic Data topics (Few Shot Learning, Reinforcement Learning, Scaling APIs to Kubernetes clusters, Cellular Automata).Hack Sessions - bi-monthly collaborative coding sessions to practice and improve our modeling or coding skillsHackathons - twice a year we organize 100+ person hackathons to crack a new business, social or environmental problem with Data Science or just have fun as teams! "},{"title":"About Ekimetrics","type":0,"sectionRef":"#","url":"docs/ekimetrics","content":"","keywords":""},{"title":"About Ekimetrics","type":1,"pageTitle":"About Ekimetrics","url":"docs/ekimetrics##","content":"Ekimetrics is the first pure player in Data Science in Europe. We operate from Paris, London, New York and Hong Kong with 250+ Data Scientists, Data Engineers, Full Stack Developers, strategy consultants and UX designers. We help companies steer their data opportunity, build data capabilities, and deploy actionable solutions, to power up marketing and operational performance, as well as (re)energizing business models. Our primary focus is to deliver immediate business gains, while guaranteeing sustainable data capital for our clients. You can learn more in our official website The Tangram room in our Paris office "},{"title":"Our convictions","type":1,"pageTitle":"About Ekimetrics","url":"docs/ekimetrics##","content":"🙋‍♂️ Human: Agile support throughout the project that puts users at the heart of the approach. ECOVADIS certified, and in the process of BCORP certification. 🌳 Ecological: A greenIT approach with a responsible use of digital technology. AI at the service of environmental matters with commitments for all employees who are trained in these issues. 🔍 Transparent: An AI mastered thanks to the interpretability of the algorithm; opening the black box to give the possibility for the human to keep control of the process and interpret results. ⚓ Equitable: An understanding of biases on algorithms, datasets, performance measurement and context to ensure non-discriminatory treatment by algorithms. 🔑 Secure: A controlled technical environment, carefully chosen to respect the principles of data security and sovereignty. 🙌 Responsible: A responsible and respectful approach to data privacy in accordance with GDPR policy. A charter and a code of conduct imposed on Ekimetrics employees. "},{"title":"Our methodologies","type":1,"pageTitle":"About Ekimetrics","url":"docs/ekimetrics##","content":""},{"title":"Industrialization by design 🦾","type":1,"pageTitle":"About Ekimetrics","url":"docs/ekimetrics##","content":"The operational implementation of a data science solution has two key pre-requisites for success: the robustness of the proposed tool and the scalability of the associated service. These two features provide the foundation for a stable and sustainable solution that provide for an unlimited and ever-growing number of users. Our method to industrialize data science solutions leverages three practices: DevOps – for continuous and shorter analytics deployment cycles, based on a scalable and governed infrastructure which is designed for technological solutions that will evolve over timeDataOps – for a bolstered data production chain, from the intake of raw data all the way to the production of business valueMLOps – to ensure that AI’s performance and costs are under control in order to address the business objective over the long run "},{"title":"Human-centered AI","type":1,"pageTitle":"About Ekimetrics","url":"docs/ekimetrics##","content":"AI is not the solution, it’s a feature that if well designed can add unique value to solve real problems. Building a real data project requires interacting with experts, businesses &amp; customers and our approach ensures that humans are at the heart of the algorithmic creation process (UX design, simulations, trust design, active learning) At Ekimetrics we are careful to apply design thinking methodology to ensure the consistency of our product vision with end user needs. The success of a data-driven initiative is when it impacts operational processes, aligned with the company objectives, which requires the delivered solution to address the 3Us: Usable: integrated within the technical stack and connected with operational systems Useful: understood by business users who are able to interpret and act upon the results and recommendations Used: actually used by business users for decision making, and continuously improved to follow the business context and evolutions "},{"title":"Agile Data Science Framework","type":1,"pageTitle":"About Ekimetrics","url":"docs/ekimetrics##","content":"Our approach in using an agile methodology allows this theory to be put into practice: Fast iterations: To proceed through iterative cycles interspersed with phases of re-prioritization of tasks, demos and user feedback, to approach final expectations as quickly as possible User centric: To include end users from the very first phase of the project thanks to a design thinking approach to always identify the right problem and the right solution Built for and by a team: To minimize silos in agile teams by constituting multidisciplinary and complementary teams and by establishing DevOps / DataOps practices Prioritized by value and risk: Any task must be evaluated at each iteration on several axes: the risk incurred, the complexity, and the expected business value. Deprioritizing is not a taboo. Continuous improvements: Each iteration must allow the project to move forward and the teams to learn, by monitoring quality KPIs and by carrying out retrospectives on what worked and what did not work  "},{"title":"Our technology stack","type":0,"sectionRef":"#","url":"docs/stack","content":"","keywords":""},{"title":"Our tech radar","type":1,"pageTitle":"Our technology stack","url":"docs/stack##","content":"Based on the pioneering work of ThoughtWorks, and using the open-source implementation popularized and developed by the great Zalando team, our Tech Radar sets out the technologies and tools we use at Ekimetrics for applied Data Science in our projects and solutions. You can quickly browse below our freshly updated tech radar, or click here to view it in fullscreen  "},{"title":"Hackathons","type":0,"sectionRef":"#","url":"ressources/","content":"We have been actively creating various hackathons and collaborative sessions to improve our Data Science skills and better work as multi-disciplinary teams. Browse our exclusive challenges below, send us an email to gain access (if it's not open sourced) or if you wish to request the creation of an exclusive hackathon. Case study - 2021-10 Reducing the environmental impact of road transport You advise the subsidiary of a logistics company whose purpose is to decarbonize international road transport. The subsidiary was launched 6 months ago, but beyond the promises nothing has been implemented. Your goal is to accelerate this vision and review this ambitious reduction strategy in light of the ever-increasing growth of e-commerce. Hackathon - 2021-06 Ensuring access to affordable and clean energy in Africa Predict the next six months of payments for different customers for the PAYGo solar technology to help the technology distributors provide these important devices affordably and efficiently to the benefit of people all over Africa Data Science Escape Game - 2020-12 Crisis in Korea A bomb has been planted and risk to explode in the next 3 hours. Use your Data Science skills to track down and defuse the bomb! Case study - 2020-10 The future of French wine in the face of Climate Change French wine is endangered by the effect of climate change. Browse and cross a dozen of datasets to understand the effects of climate change and imagine actions to sustain the sector in the next 50 years Hackathon - 2019-12 Logistics for Christmas Help Santa Claus plan his delivery tours for Christmas by forecasting demand worlwide and optimizing routing while minimizing carbon footprint","keywords":""},{"title":"Trainings","type":0,"sectionRef":"#","url":"ressources/trainings","content":"We offer trainings internally for Eki.DataPeople on various issues. Find out in this page about the trainings and tutorials we could provide access. Our trainings can be presentations or interactive coding sessions. 📢 If there is no direct link yet, please send us an email to request access Coding session - 2022-03 ScrapingBeautifulSoupSelenium How to scrap the world Scraping is the fact of extracting information from a website, through a web crawler, for analysis or reuse. Learn in this coding session how to scrap vast amounts of various data using dedicated open-source tools! Presentation - 2022-01 ExplainabilityInterpretabilityEthical AI Explainable AI (XAI) Discover the critical field of interpretability for Machine Learning and how we work on state-of-the-art approaches to allow interpretability of models at Ekimetrics Presentation - 2021-11 Time SeriesMaritime Traffic SurveillanceGenerative Models Detecting unknown time series events - A maritime traffic surveillance case-study Discover an approach based on generative models for unknown event detection in time series, applied to maritime traffic surveillance using Automatic Identification System data Presentation - 2021-09 AI ResearchNLP Foundation models &amp; Prompt Engineering GPT-3, CLIP, Codex, BERT - Foundation models are becoming the norm in many applications, from NLP to Computer Vision. What are the risks and opportunities of those models? Is it really the future of AI. Discover it yourself with your own Turing Test. Coding session - 2021-09 Operational ResearchOptimization Practical introduction to mathematical optimization Turn business problems into conceptual mathematical models, find out optimal decisions using state-of-the-art solvers and apply these skills on real-world optimization problems. Presentation - 2021-09 IndustrializationMLOps MLOps: Machine Learning in production Machine Learning in production is a really complex discipline. Learn about the best practices and technology requirements to avoid failing in prod (input data drift, model registry, gouvernance, DevOps for ML, etc...) Presentation - 2021-06 UX Design UX design guidelines for AI products When developing products with predictive AI features, there are specific UX/UI guidelines to ensure user trust, robustness and a valuable feedback loop. Presentation - 2021-04 Game AIReinforcement Learning How to create a chess AI Chess has historically been one of the most important games in the development of Artificial Intelligence. Learn how to create your own chess AI using tree search algorithms, heuristics and Machine Learning. Presentation - 2021-01 AI Research Cellular Automata &amp; Artificial Life Cellular Automata are a programming discrete model popularized by Conway and Wolfram. Discover how it can be used to model the development of Life and what concrete applications we could expect from such technology. Coding session - 2020-08 Python Object Oriented Programming for Data Scientists Learn how Oriented Object Programming (classes) can be used in Python to accelerate your development process when you are a Data Scientist. Presentation - 2019-05 AI Research Machine Learning at Netflix Decrypt and demystify how Netflix is using Machine Learning to power every bit of the platform, improving user experience and building a competitive advantage in the market.","keywords":""}]